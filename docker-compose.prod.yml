version: '3.8'

services:
  # Web application service with integrated database initialization
  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
      args:
        - DATABASE_URL=postgresql://marketsage:marketsage_password@db:5432/marketsage?schema=public
    container_name: marketsage-web
    restart: always
    ports:
      - "3030:3000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://marketsage:marketsage_password@db:5432/marketsage?schema=public
      - NODE_ENV=development
      - NEXTAUTH_URL=http://localhost:3030
      - NEXTAUTH_SECRET=this-is-a-development-secret-key-replace-in-production
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - marketsage-network
    volumes:
      - ./scripts:/app/scripts
      - ./prisma:/app/prisma
      - ./src:/app/src
      - ./startup.sh:/app/startup.sh

  # PostgreSQL database service
  db:
    image: postgres:15-alpine
    container_name: marketsage-db
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=marketsage
      - POSTGRES_PASSWORD=marketsage_password
      - POSTGRES_DB=marketsage
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U marketsage"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - marketsage-network

  # Database seeder service
  seed:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: marketsage-seed
    restart: "no"
    depends_on:
      - db
      - web
    environment:
      - DATABASE_URL=postgresql://marketsage:marketsage_password@db:5432/marketsage?schema=public
      - NODE_ENV=development
      - SKIP_CONTACT_DELETE=true
    networks:
      - marketsage-network
    volumes:
      - ./:/app
      - /app/node_modules
      - /app/.next
    command: >
      sh -c "
        echo '🚀 Starting MarketSage database initialization and seeding...' &&
        sleep 30 &&
        echo '🔍 Checking database schema...' && 
        PGPASSWORD=marketsage_password psql -h db -U marketsage -d marketsage -c \"SELECT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'userrole');\" &&
        
        echo '📋 Checking migration status...' &&
        migration_status=$(npx prisma migrate status) &&
        
        if echo \"$migration_status\" | grep -q 'Database schema is up to date'; then
          echo '✅ Migrations are already up to date' 
        else
          echo '🔄 Resolving conflicting migrations...' && 
          echo '🔧 Fixing problematic migration...' &&
          PGPASSWORD=marketsage_password psql -h db -U marketsage -d marketsage -c \"DELETE FROM _prisma_migrations WHERE migration_name='20250513102558_add_user_preferences' AND rolled_back_at IS NOT NULL;\" &&
          echo '🔧 Fixing duplicate journey migrations...' &&
          PGPASSWORD=marketsage_password psql -h db -U marketsage -d marketsage -c \"DELETE FROM _prisma_migrations WHERE migration_name='20250516015114_add_journey_tables' AND applied_steps_count=0;\" &&
          
          echo '🔄 Marking LeadPulse migrations as applied...' &&
          npx prisma migrate resolve --applied 20250517190511_reset_for_leadpulse || true &&
          npx prisma migrate resolve --applied 20250517190526_reset_for_leadpulse || true &&
          
          echo '📥 Deploying remaining migrations...' &&
          npx prisma migrate deploy
        fi &&
        
        echo '👤 Creating admin user if not exists...' &&
        PGPASSWORD=marketsage_password psql -h db -U marketsage -d marketsage -c \"INSERT INTO \\\"User\\\" (id, name, email, \\\"emailVerified\\\", password, role, \\\"createdAt\\\", \\\"updatedAt\\\") 
        VALUES ('574c1069-9130-4fdc-9e1c-a02994e4d047', 'Admin User', 'admin@example.com', NOW(), 'password123', 'ADMIN', NOW(), NOW()) 
        ON CONFLICT (id) DO NOTHING;\" &&
        
        echo '🌱 Running seed scripts...' &&
        cd /app &&
        
        echo '👀 Checking script directories...' &&
        ls -la /app/src/scripts/ &&
        
        echo '📊 Seeding contacts (preserving existing contacts)...' &&
        SKIP_CONTACT_DELETE=true npx tsx /app/src/scripts/seedContacts.ts &&
        
        echo '📋 Seeding lists...' &&
        npx tsx /app/src/scripts/seedLists.ts &&
        
        echo '🔖 Seeding segments...' &&
        node /app/src/scripts/seedSegments.js &&
        
        echo '📧 Seeding email campaigns...' &&
        npx tsx /app/src/scripts/seedEmailCampaigns.ts &&
        
        echo '📱 Seeding SMS templates...' &&
        npx tsx /app/src/scripts/seedSMSTemplates.ts &&
        
        echo '📱 Seeding SMS campaigns...' &&
        npx tsx /app/src/scripts/seedSMSCampaigns.ts &&
        
        echo '💬 Seeding WhatsApp templates...' &&
        npx tsx /app/src/scripts/seedWhatsAppTemplates.ts &&
        
        echo '💬 Seeding WhatsApp campaigns...' &&
        npx tsx /app/src/scripts/seedWhatsAppCampaigns.ts &&
        
        echo '🔄 Seeding workflows...' &&
        npx tsx /app/src/scripts/seedWorkflows.ts &&
        
        echo '🛤️ Seeding journeys...' &&
        npx tsx /app/src/scripts/seedJourneys.ts &&
        
        echo '🔔 Seeding notifications...' &&
        npx tsx /app/src/scripts/seedNotifications.ts &&
        
        echo '⚙️ Seeding user preferences...' &&
        npx tsx /app/src/scripts/seedUserPreferences.ts &&
        
        echo '🔗 Assigning contacts to current user...' &&
        npx tsx /app/src/scripts/assignContactsDocker.ts &&
        
        echo '✅ Database seeded successfully!'
      "

volumes:
  postgres-data:
    driver: local

networks:
  marketsage-network:
    driver: bridge 