services:
  # Web application service with integrated database initialization
  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
      args:
        - DATABASE_URL=postgresql://marketsage:marketsage_password@marketsage-db:5432/marketsage?schema=public
    container_name: marketsage-web
    restart: unless-stopped
    ports:
      - "3030:3000"
    depends_on:
      marketsage-db:
        condition: service_healthy
      marketsage-valkey:
        condition: service_healthy
      seed:
        condition: service_completed_successfully
    environment:
      - DATABASE_URL=postgresql://marketsage:marketsage_password@marketsage-db:5432/marketsage?schema=public
      - NODE_ENV=production
      - NEXTAUTH_URL=http://localhost:3030
      - NEXTAUTH_SECRET=your-nextauth-secret-here
      - JWT_SECRET=your-jwt-secret-here
      - APP_URL=http://localhost:3030
      - COMPANY_NAME=MarketSage
      - SUPPORT_EMAIL=support@marketsage.com
      - PAYMENT_SUCCESS_URL=http://localhost:3030/dashboard/billing/success
      - PAYMENT_CANCEL_URL=http://localhost:3030/dashboard/billing/cancel
      
      # AI Configuration - Enable Local Task Execution
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AI_FALLBACK_MODE=false
      - DISABLE_ONNX=true
      - SUPREME_AI_MODE=enabled
      - USE_OPENAI_ONLY=false
      - OPENAI_MODEL=gpt-4o-mini
      
      # Email Configuration - Zoho Pro SMTP (Production)
      - EMAIL_PROVIDER=smtp
      - SMTP_HOST=smtppro.zoho.com
      - SMTP_PORT=465
      - SMTP_SECURE=true
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - NEXT_PUBLIC_EMAIL_FROM=info@marketsage.africa
      - NEXT_PUBLIC_EMAIL_FROM_NAME=MarketSage
      - NEXT_PUBLIC_APP_URL=http://localhost:3030
      
      # Paystack Payment Configuration (Test Mode)
      - PAYSTACK_SECRET_KEY=your-paystack-secret-key
      - PAYSTACK_PUBLIC_KEY=your-paystack-public-key
      
      # Redis Configuration
      - REDIS_HOST=marketsage-valkey
      - REDIS_PORT=6379
      - REDIS_PASSWORD=""
      - REDIS_URL=redis://marketsage-valkey:6379
      
      # Security Configuration
      - ALLOW_DEV_FALLBACK=false
      - FIELD_ENCRYPTION_KEY=your-32-char-encryption-key-here
      
      # OpenTelemetry Tracing Configuration
      - OTEL_ENABLED=true
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4318
      - OTEL_SERVICE_NAME=marketsage
      - OTEL_RESOURCE_ATTRIBUTES=service.name=marketsage,service.version=1.0.0
      
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - marketsage
    volumes:
      - ./scripts:/app/scripts
      - ./prisma:/app/prisma
      - ./src:/app/src
      - ./startup.sh:/app/startup.sh
      - .:/app
      - /app/node_modules
      - /app/.next

  # PostgreSQL database service
  marketsage-db:
    image: postgres:15-alpine
    container_name: marketsage-db
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=marketsage
      - POSTGRES_PASSWORD=marketsage_password
      - POSTGRES_DB=marketsage
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U marketsage"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - marketsage

  # Database seeder service
  seed:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: marketsage-seed
    restart: "no"
    depends_on:
      marketsage-db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://marketsage:marketsage_password@marketsage-db:5432/marketsage?schema=public
      - NODE_ENV=development
      - SKIP_CONTACT_DELETE=true
      
      # Email Configuration for Seeding - Zoho Pro SMTP (Production)
      - EMAIL_PROVIDER=smtp
      - SMTP_HOST=smtppro.zoho.com
      - SMTP_PORT=465
      - SMTP_SECURE=true
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - NEXT_PUBLIC_EMAIL_FROM=info@marketsage.africa
      - NEXT_PUBLIC_EMAIL_FROM_NAME=MarketSage
      - PAYSTACK_SECRET_KEY=your-paystack-secret-key
      - PAYSTACK_PUBLIC_KEY=your-paystack-public-key
      
      # Redis Configuration for Seeding
      - REDIS_HOST=marketsage-valkey
      - REDIS_PORT=6379
      - REDIS_URL=redis://marketsage-valkey:6379
      
    networks:
      - marketsage
    volumes:
      - ./:/app
      - /app/node_modules
      - /app/.next
    command: >
      sh -c "
        echo 'üöÄ Starting MarketSage database seeding...' &&
        
        echo 'üîÑ Generating Prisma client...' &&
        npx prisma generate &&
        
        echo 'üì• Pushing database schema...' &&
        npx prisma db push --accept-data-loss --force-reset &&
        
        echo 'üë§ Creating admin users...' &&
        PGPASSWORD=marketsage_password psql -h marketsage-db -U marketsage -d marketsage -c \"
        INSERT INTO \\\"User\\\" (id, name, email, \\\"emailVerified\\\", password, role, \\\"createdAt\\\", \\\"updatedAt\\\") 
        VALUES ('574c1069-9130-4fdc-9e1c-a02994e4d047', 'Admin User', 'admin@example.com', NOW(), '\$$2b\$$10\$$hY2LZWafLwwv3BUHWvVUd.d5v2QkM89ugdbHx9qiGLD1UuuyWmG3u', 'ADMIN', NOW(), NOW()) 
        ON CONFLICT (email) DO NOTHING;
        
        INSERT INTO \\\"User\\\" (id, name, email, \\\"emailVerified\\\", password, role, \\\"createdAt\\\", \\\"updatedAt\\\") 
        VALUES ('574c1069-9130-4fdc-9e1c-a02994e4d111', 'Supreme Admin', 'supreme@marketsage.africa', NOW(), '\$$2b\$$10\$$lnlDmDQP7EKFBshOI9XeE.6z1b7I1j9XmU/s/cCqMC9yhdKTPFrlq', 'SUPER_ADMIN', NOW(), NOW())
        ON CONFLICT (email) DO NOTHING;
        
        INSERT INTO \\\"User\\\" (id, name, email, \\\"emailVerified\\\", password, role, \\\"createdAt\\\", \\\"updatedAt\\\") 
        VALUES ('574c1069-9130-4fdc-9e1c-a02994e4d222', 'Anita Manager', 'anita@marketsage.africa', NOW(), '\$$2b\$$10\$$tRF2m2u2DGNTHmhf30pyuOizDtqoYPLSkIwTHyId9cpvw.3UUxotO', 'ADMIN', NOW(), NOW())
        ON CONFLICT (email) DO NOTHING;
        
        INSERT INTO \\\"User\\\" (id, name, email, \\\"emailVerified\\\", password, role, \\\"createdAt\\\", \\\"updatedAt\\\") 
        VALUES ('574c1069-9130-4fdc-9e1c-a02994e4d333', 'Kola Techleads', 'kola@marketsage.africa', NOW(), '\$$2b\$$10\$$DHwQi1SaR3uurW8Z4wtNoegNwwjG2NEN4GWZ3GPdpoKpdBX9cyD56', 'IT_ADMIN', NOW(), NOW())
        ON CONFLICT (email) DO NOTHING;
        
        INSERT INTO \\\"User\\\" (id, name, email, \\\"emailVerified\\\", password, role, \\\"createdAt\\\", \\\"updatedAt\\\") 
        VALUES ('574c1069-9130-4fdc-9e1c-a02994e4d444', 'Regular User', 'user@marketsage.africa', NOW(), '\$$2b\$$10\$$lSvc2S5hrOTDcRcOP6O2hOo7JAnw5kk33NeJfwQHagHaGoZbmUhOy', 'USER', NOW(), NOW())
        ON CONFLICT (email) DO NOTHING;\" || echo '‚ö†Ô∏è User creation had issues, continuing...' &&
        
        echo 'üå± Running seed scripts...' &&
        cd /app &&
        
        echo 'üìä Seeding contacts (preserving existing contacts)...' &&
        SKIP_CONTACT_DELETE=true timeout 120 npx tsx /app/src/scripts/seedContacts.ts || echo '‚ö†Ô∏è Contact seeding timed out' &&
        
        echo 'üìã Seeding lists...' &&
        timeout 60 npx tsx /app/src/scripts/seedLists.ts || echo '‚ö†Ô∏è List seeding timed out' &&
        
        echo 'üîñ Seeding segments...' &&
        timeout 60 node /app/src/scripts/seedSegments.js || echo '‚ö†Ô∏è Segment seeding timed out' &&
        
        echo 'üìß Seeding email campaigns...' &&
        timeout 60 npx tsx /app/src/scripts/seedEmailCampaigns.ts || echo '‚ö†Ô∏è Email campaign seeding timed out' &&
        
        echo 'üì± Seeding SMS templates...' &&
        timeout 60 npx tsx /app/src/scripts/seedSMSTemplates.ts || echo '‚ö†Ô∏è SMS template seeding timed out' &&
        
        echo 'üì± Seeding SMS campaigns...' &&
        timeout 60 npx tsx /app/src/scripts/seedSMSCampaigns.ts || echo '‚ö†Ô∏è SMS campaign seeding timed out' &&
        
        echo 'üí¨ Seeding WhatsApp templates...' &&
        timeout 60 node /app/src/scripts/seedWhatsAppTemplates.js || echo '‚ö†Ô∏è WhatsApp template seeding timed out' &&
        
        echo 'üí¨ Seeding WhatsApp campaigns...' &&
        timeout 60 npx tsx /app/src/scripts/seedWhatsAppCampaigns.ts || echo '‚ö†Ô∏è WhatsApp campaign seeding timed out' &&
        
        echo 'üîÑ Seeding workflows...' &&
        timeout 60 node /app/src/scripts/seedWorkflows.js || echo '‚ö†Ô∏è Workflow seeding timed out' &&
        
        echo 'üõ§Ô∏è Seeding journeys...' &&
        timeout 60 npx tsx /app/src/scripts/seedJourneys.ts || echo '‚ö†Ô∏è Journey seeding timed out' &&
        
        echo 'üîî Seeding notifications...' &&
        timeout 60 npx tsx /app/src/scripts/seedNotifications.ts || echo '‚ö†Ô∏è Notification seeding timed out' &&
        
        echo '‚öôÔ∏è Seeding user preferences...' &&
        timeout 60 npx tsx /app/src/scripts/seedUserPreferences.ts || echo '‚ö†Ô∏è User preferences seeding timed out' &&
        
        echo 'üìã Seeding task management...' &&
        timeout 90 npx tsx /app/src/scripts/seedTaskManagement.ts || echo '‚ö†Ô∏è Task management seeding timed out' &&
        
        echo 'üéØ Seeding LeadPulse data...' &&
        timeout 90 npx tsx /app/src/scripts/seed-leadpulse.ts || echo '‚ö†Ô∏è LeadPulse seeding timed out' &&
        
        echo 'üß† Seeding AI Intelligence data...' &&
        timeout 90 npx tsx /app/src/scripts/seed-ai-intelligence.ts || echo '‚ö†Ô∏è AI Intelligence seeding timed out' &&
        
        echo 'üîó Assigning contacts to current user...' &&
        timeout 60 npx tsx /app/src/scripts/assignContactsDocker.ts || echo '‚ö†Ô∏è Contact assignment timed out' &&
        
        echo '‚úÖ Database seeded successfully!'
      "

  # Simple backup seeding service (use if main seed fails)
  simple-seed:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: marketsage-simple-seed
    restart: "no"
    profiles: ["simple"]
    depends_on:
      marketsage-db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://marketsage:marketsage_password@marketsage-db:5432/marketsage?schema=public
      - NODE_ENV=development
    networks:
      - marketsage
    volumes:
      - ./:/app
      - /app/node_modules
      - /app/.next
    command: >
      sh -c "
        echo 'üöÄ Simple database seeding...' &&
        sleep 30 &&
        npx prisma generate &&
        npx prisma db push --accept-data-loss &&
        echo '‚úÖ Simple seeding completed!'
      "

  marketsage-valkey:
    image: valkey/valkey:8-alpine
    container_name: marketsage-valkey
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: valkey-server --appendonly yes
    healthcheck:
      test: ["CMD", "valkey-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - marketsage


volumes:
  postgres-data:
    driver: local
  redis_data:
    driver: local

networks:
  marketsage:
    driver: bridge 