{"version":3,"sources":["/Users/supreme/Desktop/marketsage/src/lib/api.ts"],"sourcesContent":["// API Client for MarketSage\n\n// Lists\nexport const getLists = async () => {\n  const response = await fetch('/api/lists');\n  if (!response.ok) {\n    throw new Error('Failed to fetch lists');\n  }\n  return response.json();\n};\n\nexport const getListById = async (id: string) => {\n  const response = await fetch(`/api/lists/${id}`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch list');\n  }\n  return response.json();\n};\n\nexport const getListsWithContactCount = async () => {\n  const response = await fetch('/api/lists?includeCount=true');\n  if (!response.ok) {\n    throw new Error('Failed to fetch lists with contact count');\n  }\n  return response.json();\n};\n\n// Segments\nexport const getSegments = async () => {\n  const response = await fetch('/api/segments');\n  if (!response.ok) {\n    throw new Error('Failed to fetch segments');\n  }\n  return response.json();\n};\n\nexport const getSegmentById = async (id: string) => {\n  const response = await fetch(`/api/segments/${id}`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch segment');\n  }\n  return response.json();\n};\n\nexport const getSegmentsWithContactCount = async () => {\n  const response = await fetch('/api/segments?includeCount=true');\n  if (!response.ok) {\n    throw new Error('Failed to fetch segments with contact count');\n  }\n  return response.json();\n};\n\n// Email Templates\nexport const getEmailTemplates = async () => {\n  const response = await fetch('/api/email/templates');\n  if (!response.ok) {\n    throw new Error('Failed to fetch email templates');\n  }\n  return response.json();\n};\n\nexport const getEmailTemplateById = async (id: string) => {\n  const response = await fetch(`/api/email/templates/${id}`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch email template');\n  }\n  return response.json();\n};\n\n// Email Campaigns\nexport const getEmailCampaigns = async () => {\n  const response = await fetch('/api/email/campaigns');\n  if (!response.ok) {\n    throw new Error('Failed to fetch email campaigns');\n  }\n  return response.json();\n};\n\nexport const getEmailCampaignById = async (id: string) => {\n  const response = await fetch(`/api/email/campaigns/${id}`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch email campaign');\n  }\n  return response.json();\n};\n\nexport const getEmailCampaignStats = async (id: string) => {\n  const response = await fetch(`/api/email/campaigns/${id}/stats`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch email campaign statistics');\n  }\n  return response.json();\n};\n\n// SMS Templates\nexport const getSMSTemplates = async () => {\n  const response = await fetch('/api/sms/templates');\n  if (!response.ok) {\n    throw new Error('Failed to fetch SMS templates');\n  }\n  return response.json();\n};\n\nexport const getSMSTemplateById = async (id: string) => {\n  const response = await fetch(`/api/sms/templates/${id}`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch SMS template');\n  }\n  return response.json();\n};\n\n// SMS Campaigns\nexport const getSMSCampaigns = async () => {\n  const response = await fetch('/api/sms/campaigns');\n  if (!response.ok) {\n    throw new Error('Failed to fetch SMS campaigns');\n  }\n  const data = await response.json();\n  // Return the campaigns array if the response is an object with campaigns property\n  return Array.isArray(data) ? data : (data?.campaigns || []);\n};\n\nexport const getSMSCampaignById = async (id: string) => {\n  try {\n    const response = await fetch(`/api/sms/campaigns/${id}`);\n    \n    if (response.status === 404) {\n      return null; // Return null for not found\n    }\n    \n    if (!response.ok) {\n      throw new Error('Failed to fetch SMS campaign');\n    }\n    \n    return response.json();\n  } catch (error) {\n    console.error(\"Error fetching SMS campaign:\", error);\n    throw error;\n  }\n};\n\nexport const getSMSCampaignStats = async (id: string) => {\n  const response = await fetch(`/api/sms/campaigns/${id}/stats`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch SMS campaign statistics');\n  }\n  return response.json();\n};\n\n// Contacts\nexport const getContacts = async () => {\n  const response = await fetch('/api/contacts');\n  if (!response.ok) {\n    throw new Error('Failed to fetch contacts');\n  }\n  return response.json();\n};\n\nexport const getContactById = async (id: string) => {\n  const response = await fetch(`/api/contacts/${id}`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch contact');\n  }\n  return response.json();\n};\n\n// WhatsApp Templates\nexport const getWhatsAppTemplates = async () => {\n  try {\n    const response = await fetch('/api/whatsapp/templates');\n    \n    if (response.status === 404) {\n      console.warn('WhatsApp templates endpoint not found, returning empty array');\n      return []; // Return empty array if endpoint not found\n    }\n    \n    if (!response.ok) {\n      throw new Error(`Failed to fetch WhatsApp templates: ${response.status} ${response.statusText}`);\n    }\n    \n    return response.json();\n  } catch (error) {\n    console.error(\"Error fetching WhatsApp templates:\", error);\n    // Return empty array instead of throwing to prevent UI failures\n    return [];\n  }\n};\n\nexport const getWhatsAppTemplateById = async (id: string) => {\n  const response = await fetch(`/api/whatsapp/templates/${id}`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch WhatsApp template');\n  }\n  return response.json();\n};\n\n// WhatsApp Campaigns\nexport const getWhatsAppCampaigns = async () => {\n  const response = await fetch('/api/whatsapp/campaigns');\n  if (!response.ok) {\n    throw new Error('Failed to fetch WhatsApp campaigns');\n  }\n  const data = await response.json();\n  // Return the campaigns array if the response is an object with campaigns property\n  return Array.isArray(data) ? data : (data?.campaigns || []);\n};\n\nexport const getWhatsAppCampaignById = async (id: string) => {\n  try {\n    const response = await fetch(`/api/whatsapp/campaigns/${id}`);\n    \n    if (response.status === 404) {\n      return null; // Return null for not found\n    }\n    \n    if (!response.ok) {\n      throw new Error('Failed to fetch WhatsApp campaign');\n    }\n    \n    return response.json();\n  } catch (error) {\n    console.error(\"Error fetching WhatsApp campaign:\", error);\n    throw error;\n  }\n};\n\nexport const getWhatsAppCampaignStats = async (id: string) => {\n  const response = await fetch(`/api/whatsapp/campaigns/${id}/statistics`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch WhatsApp campaign statistics');\n  }\n  return response.json();\n};\n\nexport const sendWhatsAppCampaign = async (id: string) => {\n  const response = await fetch(`/api/whatsapp/campaigns/${id}/send`, {\n    method: 'POST'\n  });\n  \n  if (!response.ok) {\n    throw new Error('Failed to send WhatsApp campaign');\n  }\n  \n  return response.json();\n};\n\nexport const scheduleWhatsAppCampaign = async (id: string, scheduledFor: string) => {\n  const response = await fetch(`/api/whatsapp/campaigns/${id}/schedule`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ scheduledFor })\n  });\n  \n  if (!response.ok) {\n    throw new Error('Failed to schedule WhatsApp campaign');\n  }\n  \n  return response.json();\n};\n\nexport const cancelScheduledWhatsAppCampaign = async (id: string) => {\n  const response = await fetch(`/api/whatsapp/campaigns/${id}/schedule`, {\n    method: 'DELETE'\n  });\n  \n  if (!response.ok) {\n    throw new Error('Failed to cancel scheduled WhatsApp campaign');\n  }\n  \n  return response.json();\n}; "],"names":["cancelScheduledWhatsAppCampaign","getContactById","getContacts","getEmailCampaignById","getEmailCampaignStats","getEmailCampaigns","getEmailTemplateById","getEmailTemplates","getListById","getLists","getListsWithContactCount","getSMSCampaignById","getSMSCampaignStats","getSMSCampaigns","getSMSTemplateById","getSMSTemplates","getSegmentById","getSegments","getSegmentsWithContactCount","getWhatsAppCampaignById","getWhatsAppCampaignStats","getWhatsAppCampaigns","getWhatsAppTemplateById","getWhatsAppTemplates","scheduleWhatsAppCampaign","sendWhatsAppCampaign","response","fetch","ok","Error","json","id","data","Array","isArray","campaigns","status","error","console","warn","statusText","method","scheduledFor","headers","body","JSON","stringify"],"mappings":"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"}