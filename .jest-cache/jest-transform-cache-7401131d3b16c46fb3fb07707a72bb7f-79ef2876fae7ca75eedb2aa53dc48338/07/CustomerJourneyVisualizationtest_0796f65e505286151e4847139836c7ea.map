{"version":3,"sources":["/Users/supreme/Desktop/marketsage/src/__tests__/components/leadpulse/CustomerJourneyVisualization.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent, waitFor } from '../../utils/test-utils';\nimport { CustomerJourneyVisualization } from '../../../components/leadpulse/CustomerJourneyVisualization';\nimport { \n  mockCustomerJourney, \n  measureComponentPerformance, \n  checkAccessibility,\n  PERFORMANCE_THRESHOLDS,\n  createMockMCPData\n} from '../../utils/test-utils';\n\n// Mock the CSS import\njest.mock('../../../styles/journey-animations.css', () => ({}));\n\ndescribe('CustomerJourneyVisualization', () => {\n  const mockJourneys = [\n    mockCustomerJourney({\n      sessionId: 'session_1',\n      outcome: 'converted',\n      engagementScore: 92,\n    }),\n    mockCustomerJourney({\n      sessionId: 'session_2',\n      outcome: 'abandoned',\n      engagementScore: 45,\n      steps: [\n        {\n          id: 'step_1',\n          timestamp: '2024-07-18T10:00:00Z',\n          action: 'Landing Page Visit',\n          page: '/',\n          duration: 120,\n          type: 'page_view' as const,\n          metadata: {\n            device: 'mobile' as const,\n            location: 'Abuja, Nigeria',\n            engagement: 60\n          }\n        },\n        {\n          id: 'step_2',\n          timestamp: '2024-07-18T10:02:00Z',\n          action: 'Exit Intent',\n          page: '/',\n          duration: 30,\n          type: 'exit' as const,\n          metadata: {\n            device: 'mobile' as const,\n            location: 'Abuja, Nigeria',\n            engagement: 30\n          }\n        }\n      ]\n    }),\n  ];\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('Rendering', () => {\n    it('renders loading state correctly', async () => {\n      const renderTime = await measureComponentPerformance(\n        () => render(<CustomerJourneyVisualization isLoading={true} />),\n        'CustomerJourneyVisualization Loading'\n      );\n\n      expect(screen.getByText('Loading journey data...')).toBeInTheDocument();\n      expect(renderTime).toBeLessThan(PERFORMANCE_THRESHOLDS.COMPONENT_RENDER);\n    });\n\n    it('renders with demo data when no journeys provided', async () => {\n      render(<CustomerJourneyVisualization />);\n\n      await waitFor(() => {\n        expect(screen.getByText('Customer Journey Visualization')).toBeInTheDocument();\n        expect(screen.getByText('Total Journeys')).toBeInTheDocument();\n      });\n    });\n\n    it('renders journey statistics correctly', async () => {\n      render(<CustomerJourneyVisualization journeys={mockJourneys} />);\n\n      await waitFor(() => {\n        expect(screen.getByText('Total Journeys')).toBeInTheDocument();\n        expect(screen.getByText('Converted')).toBeInTheDocument();\n        expect(screen.getByText('Abandoned')).toBeInTheDocument();\n        expect(screen.getByText('Conversion')).toBeInTheDocument();\n        expect(screen.getByText('Avg Duration')).toBeInTheDocument();\n        expect(screen.getByText('Engagement')).toBeInTheDocument();\n      });\n    });\n\n    it('displays correct journey counts', async () => {\n      render(<CustomerJourneyVisualization journeys={mockJourneys} />);\n\n      await waitFor(() => {\n        // Should show 2 total journeys\n        expect(screen.getByText('2')).toBeInTheDocument();\n        // Should show 1 converted and 1 abandoned\n        expect(screen.getByText('1')).toBeInTheDocument();\n      });\n    });\n  });\n\n  describe('Interactions', () => {\n    it('switches between view modes', async () => {\n      render(<CustomerJourneyVisualization journeys={mockJourneys} />);\n\n      // Test overview mode (default)\n      expect(screen.getByRole('button', { name: /overview/i })).toHaveClass('bg-blue-500');\n\n      // Switch to detailed mode\n      fireEvent.click(screen.getByRole('button', { name: /detailed/i }));\n      await waitFor(() => {\n        expect(screen.getByRole('button', { name: /detailed/i })).toHaveClass('bg-blue-500');\n      });\n\n      // Switch to timeline mode\n      fireEvent.click(screen.getByRole('button', { name: /timeline/i }));\n      await waitFor(() => {\n        expect(screen.getByRole('button', { name: /timeline/i })).toHaveClass('bg-blue-500');\n      });\n    });\n\n    it('filters journeys by outcome', async () => {\n      render(<CustomerJourneyVisualization journeys={mockJourneys} />);\n\n      const filterSelect = screen.getByDisplayValue('All Journeys');\n      \n      // Filter to converted only\n      fireEvent.change(filterSelect, { target: { value: 'converted' } });\n      await waitFor(() => {\n        expect(filterSelect).toHaveValue('converted');\n      });\n\n      // Filter to abandoned only\n      fireEvent.change(filterSelect, { target: { value: 'abandoned' } });\n      await waitFor(() => {\n        expect(filterSelect).toHaveValue('abandoned');\n      });\n    });\n\n    it('selects journey for detailed view', async () => {\n      render(<CustomerJourneyVisualization journeys={mockJourneys} />);\n\n      // Click on a journey card\n      const journeyCard = screen.getAllByText(/Session/)[0];\n      fireEvent.click(journeyCard.closest('div')!);\n\n      // Switch to detailed view\n      fireEvent.click(screen.getByRole('button', { name: /detailed/i }));\n\n      await waitFor(() => {\n        expect(screen.getByText('Journey Details')).toBeInTheDocument();\n      });\n    });\n\n    it('plays journey animation', async () => {\n      render(<CustomerJourneyVisualization journeys={mockJourneys} />);\n\n      // Select first journey\n      const journeyCard = screen.getAllByText(/Session/)[0];\n      fireEvent.click(journeyCard.closest('div')!);\n\n      // Switch to detailed view\n      fireEvent.click(screen.getByRole('button', { name: /detailed/i }));\n\n      await waitFor(() => {\n        const playButton = screen.getByRole('button', { name: /play/i });\n        expect(playButton).toBeInTheDocument();\n        \n        // Click play button\n        fireEvent.click(playButton);\n        \n        // Should show pause button\n        expect(screen.getByRole('button', { name: /pause/i })).toBeInTheDocument();\n      });\n    });\n\n    it('resets journey animation', async () => {\n      render(<CustomerJourneyVisualization journeys={mockJourneys} />);\n\n      // Select first journey and switch to detailed view\n      const journeyCard = screen.getAllByText(/Session/)[0];\n      fireEvent.click(journeyCard.closest('div')!);\n      fireEvent.click(screen.getByRole('button', { name: /detailed/i }));\n\n      await waitFor(() => {\n        const resetButton = screen.getByRole('button', { name: /rotateccw/i });\n        expect(resetButton).toBeInTheDocument();\n        \n        fireEvent.click(resetButton);\n      });\n    });\n  });\n\n  describe('Performance', () => {\n    it('renders within performance threshold', async () => {\n      const renderTime = await measureComponentPerformance(\n        () => render(<CustomerJourneyVisualization journeys={mockJourneys} />),\n        'CustomerJourneyVisualization with data'\n      );\n\n      expect(renderTime).toBeLessThan(PERFORMANCE_THRESHOLDS.COMPONENT_RENDER);\n    });\n\n    it('handles large datasets efficiently', async () => {\n      const largeDataset = Array.from({ length: 100 }, (_, i) => \n        mockCustomerJourney({\n          sessionId: `session_${i}`,\n          engagementScore: Math.floor(Math.random() * 100),\n        })\n      );\n\n      const renderTime = await measureComponentPerformance(\n        () => render(<CustomerJourneyVisualization journeys={largeDataset} />),\n        'CustomerJourneyVisualization with large dataset'\n      );\n\n      expect(renderTime).toBeLessThan(PERFORMANCE_THRESHOLDS.COMPONENT_RENDER * 2);\n    });\n  });\n\n  describe('Accessibility', () => {\n    it('meets accessibility standards', async () => {\n      const { container } = render(<CustomerJourneyVisualization journeys={mockJourneys} />);\n\n      await waitFor(() => {\n        checkAccessibility(container);\n      });\n\n      // Check for proper ARIA labels\n      expect(screen.getByRole('button', { name: /overview/i })).toBeInTheDocument();\n      expect(screen.getByRole('button', { name: /detailed/i })).toBeInTheDocument();\n      expect(screen.getByRole('button', { name: /timeline/i })).toBeInTheDocument();\n    });\n\n    it('supports keyboard navigation', async () => {\n      render(<CustomerJourneyVisualization journeys={mockJourneys} />);\n\n      const overviewButton = screen.getByRole('button', { name: /overview/i });\n      const detailedButton = screen.getByRole('button', { name: /detailed/i });\n\n      // Test tab navigation\n      overviewButton.focus();\n      expect(overviewButton).toHaveFocus();\n\n      // Test Enter key activation\n      fireEvent.keyDown(detailedButton, { key: 'Enter', code: 'Enter' });\n      // Note: This would require additional keyboard event handling in the component\n    });\n  });\n\n  describe('Data Visualization', () => {\n    it('displays engagement scores correctly', async () => {\n      render(<CustomerJourneyVisualization journeys={mockJourneys} />);\n\n      await waitFor(() => {\n        expect(screen.getByText('92% engagement')).toBeInTheDocument();\n        expect(screen.getByText('45% engagement')).toBeInTheDocument();\n      });\n    });\n\n    it('shows correct journey duration formatting', async () => {\n      const journeyWithCustomDuration = mockCustomerJourney({\n        totalDuration: 3665, // 1 hour, 1 minute, 5 seconds\n      });\n\n      render(<CustomerJourneyVisualization journeys={[journeyWithCustomDuration]} />);\n\n      await waitFor(() => {\n        expect(screen.getByText('61m 5s')).toBeInTheDocument();\n      });\n    });\n\n    it('displays device and location information', async () => {\n      render(<CustomerJourneyVisualization journeys={mockJourneys} />);\n\n      await waitFor(() => {\n        expect(screen.getByText(/desktop/i)).toBeInTheDocument();\n        expect(screen.getByText(/mobile/i)).toBeInTheDocument();\n        expect(screen.getByText(/Lagos, Nigeria/i)).toBeInTheDocument();\n        expect(screen.getByText(/Abuja, Nigeria/i)).toBeInTheDocument();\n      });\n    });\n  });\n\n  describe('Edge Cases', () => {\n    it('handles empty journey array', async () => {\n      render(<CustomerJourneyVisualization journeys={[]} />);\n\n      await waitFor(() => {\n        expect(screen.getByText('Customer Journey Visualization')).toBeInTheDocument();\n        // Should still show interface elements\n        expect(screen.getByText('Total Journeys')).toBeInTheDocument();\n      });\n    });\n\n    it('handles journey with no steps', async () => {\n      const journeyWithNoSteps = mockCustomerJourney({\n        steps: [],\n      });\n\n      render(<CustomerJourneyVisualization journeys={[journeyWithNoSteps]} />);\n\n      await waitFor(() => {\n        expect(screen.getByText('Customer Journey Visualization')).toBeInTheDocument();\n      });\n    });\n\n    it('handles invalid timestamp formats gracefully', async () => {\n      const journeyWithInvalidTimestamp = mockCustomerJourney({\n        startTime: 'invalid-timestamp',\n      });\n\n      expect(() => {\n        render(<CustomerJourneyVisualization journeys={[journeyWithInvalidTimestamp]} />);\n      }).not.toThrow();\n    });\n  });\n\n  describe('Visual States', () => {\n    it('shows correct outcome indicators', async () => {\n      render(<CustomerJourneyVisualization journeys={mockJourneys} />);\n\n      await waitFor(() => {\n        const journeyCards = screen.getAllByText(/Session/);\n        expect(journeyCards).toHaveLength(2);\n        \n        // Check for outcome indicators (colored dots)\n        const dots = document.querySelectorAll('.w-3.h-3.rounded-full');\n        expect(dots).toHaveLength(2);\n      });\n    });\n\n    it('applies correct step type colors', async () => {\n      render(<CustomerJourneyVisualization journeys={mockJourneys} />);\n\n      await waitFor(() => {\n        // Check for step icons with different colors\n        const stepIcons = document.querySelectorAll('.w-8.h-8.rounded-full');\n        expect(stepIcons.length).toBeGreaterThan(0);\n      });\n    });\n  });\n});"],"names":["jest","mock","describe","mockJourneys","mockCustomerJourney","sessionId","outcome","engagementScore","steps","id","timestamp","action","page","duration","type","metadata","device","location","engagement","beforeEach","clearAllMocks","it","renderTime","measureComponentPerformance","render","CustomerJourneyVisualization","isLoading","expect","screen","getByText","toBeInTheDocument","toBeLessThan","PERFORMANCE_THRESHOLDS","COMPONENT_RENDER","waitFor","journeys","getByRole","name","toHaveClass","fireEvent","click","filterSelect","getByDisplayValue","change","target","value","toHaveValue","journeyCard","getAllByText","closest","playButton","resetButton","largeDataset","Array","from","length","_","i","Math","floor","random","container","checkAccessibility","overviewButton","detailedButton","focus","toHaveFocus","keyDown","key","code","journeyWithCustomDuration","totalDuration","journeyWithNoSteps","journeyWithInvalidTimestamp","startTime","not","toThrow","journeyCards","toHaveLength","dots","document","querySelectorAll","stepIcons","toBeGreaterThan"],"mappings":"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"}