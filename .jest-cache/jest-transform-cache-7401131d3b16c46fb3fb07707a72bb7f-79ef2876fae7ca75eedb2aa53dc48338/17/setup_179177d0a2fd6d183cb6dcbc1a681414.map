{"version":3,"sources":["/Users/supreme/Desktop/marketsage/src/lib/ai/__tests__/setup.ts"],"sourcesContent":["import type { PrismaClient } from '@prisma/client';\nimport { mockDeep, type DeepMockProxy } from 'jest-mock-extended';\n\n// Mock logger\njest.mock('@/lib/logger', () => ({\n  logger: {\n    error: jest.fn(),\n    info: jest.fn(),\n    warn: jest.fn(),\n    debug: jest.fn()\n  }\n}));\n\n// Mock Prisma with proper enums\njest.mock('@prisma/client', () => ({\n  PrismaClient: jest.fn(() => mockDeep<PrismaClient>()),\n  UserRole: {\n    USER: 'USER',\n    ADMIN: 'ADMIN',\n    IT_ADMIN: 'IT_ADMIN',\n    SUPER_ADMIN: 'SUPER_ADMIN'\n  },\n  ActivityType: {\n    SENT: 'SENT',\n    DELIVERED: 'DELIVERED',\n    OPENED: 'OPENED',\n    CLICKED: 'CLICKED',\n    BOUNCED: 'BOUNCED',\n    UNSUBSCRIBED: 'UNSUBSCRIBED',\n    REPLIED: 'REPLIED',\n    FAILED: 'FAILED'\n  }\n}));\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var mockPrisma: DeepMockProxy<PrismaClient>;\n}\n\nbeforeEach(() => {\n  const mockPrisma = mockDeep<PrismaClient>();\n  global.mockPrisma = mockPrisma;\n}); "],"names":["jest","mock","logger","error","fn","info","warn","debug","PrismaClient","mockDeep","UserRole","USER","ADMIN","IT_ADMIN","SUPER_ADMIN","ActivityType","SENT","DELIVERED","OPENED","CLICKED","BOUNCED","UNSUBSCRIBED","REPLIED","FAILED","beforeEach","mockPrisma","global"],"mappings":";AAGA,cAAc;AACdA,KAAKC,IAAI,CAAC,gBAAgB,IAAO,CAAA;QAC/BC,QAAQ;YACNC,OAAOH,KAAKI,EAAE;YACdC,MAAML,KAAKI,EAAE;YACbE,MAAMN,KAAKI,EAAE;YACbG,OAAOP,KAAKI,EAAE;QAChB;IACF,CAAA;AAEA,gCAAgC;AAChCJ,KAAKC,IAAI,CAAC,kBAAkB,IAAO,CAAA;QACjCO,cAAcR,KAAKI,EAAE,CAAC,IAAMK,IAAAA,0BAAQ;QACpCC,UAAU;YACRC,MAAM;YACNC,OAAO;YACPC,UAAU;YACVC,aAAa;QACf;QACAC,cAAc;YACZC,MAAM;YACNC,WAAW;YACXC,QAAQ;YACRC,SAAS;YACTC,SAAS;YACTC,cAAc;YACdC,SAAS;YACTC,QAAQ;QACV;IACF,CAAA;;;;kCA/B6C;AAsC7CC,WAAW;IACT,MAAMC,aAAahB,IAAAA,0BAAQ;IAC3BiB,OAAOD,UAAU,GAAGA;AACtB"}