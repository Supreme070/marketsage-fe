d0cd4aca5a07559990ec0feea359e31c
"use strict";
// Mock logger
jest.mock('@/lib/logger', ()=>({
        logger: {
            error: jest.fn(),
            info: jest.fn(),
            warn: jest.fn(),
            debug: jest.fn()
        }
    }));
// Mock Prisma with proper enums
jest.mock('@prisma/client', ()=>({
        PrismaClient: jest.fn(()=>(0, _jestmockextended.mockDeep)()),
        UserRole: {
            USER: 'USER',
            ADMIN: 'ADMIN',
            IT_ADMIN: 'IT_ADMIN',
            SUPER_ADMIN: 'SUPER_ADMIN'
        },
        ActivityType: {
            SENT: 'SENT',
            DELIVERED: 'DELIVERED',
            OPENED: 'OPENED',
            CLICKED: 'CLICKED',
            BOUNCED: 'BOUNCED',
            UNSUBSCRIBED: 'UNSUBSCRIBED',
            REPLIED: 'REPLIED',
            FAILED: 'FAILED'
        }
    }));
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jestmockextended = require("jest-mock-extended");
beforeEach(()=>{
    const mockPrisma = (0, _jestmockextended.mockDeep)();
    global.mockPrisma = mockPrisma;
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zdXByZW1lL0Rlc2t0b3AvbWFya2V0c2FnZS9zcmMvbGliL2FpL19fdGVzdHNfXy9zZXR1cC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IFByaXNtYUNsaWVudCB9IGZyb20gJ0BwcmlzbWEvY2xpZW50JztcbmltcG9ydCB7IG1vY2tEZWVwLCB0eXBlIERlZXBNb2NrUHJveHkgfSBmcm9tICdqZXN0LW1vY2stZXh0ZW5kZWQnO1xuXG4vLyBNb2NrIGxvZ2dlclxuamVzdC5tb2NrKCdAL2xpYi9sb2dnZXInLCAoKSA9PiAoe1xuICBsb2dnZXI6IHtcbiAgICBlcnJvcjogamVzdC5mbigpLFxuICAgIGluZm86IGplc3QuZm4oKSxcbiAgICB3YXJuOiBqZXN0LmZuKCksXG4gICAgZGVidWc6IGplc3QuZm4oKVxuICB9XG59KSk7XG5cbi8vIE1vY2sgUHJpc21hIHdpdGggcHJvcGVyIGVudW1zXG5qZXN0Lm1vY2soJ0BwcmlzbWEvY2xpZW50JywgKCkgPT4gKHtcbiAgUHJpc21hQ2xpZW50OiBqZXN0LmZuKCgpID0+IG1vY2tEZWVwPFByaXNtYUNsaWVudD4oKSksXG4gIFVzZXJSb2xlOiB7XG4gICAgVVNFUjogJ1VTRVInLFxuICAgIEFETUlOOiAnQURNSU4nLFxuICAgIElUX0FETUlOOiAnSVRfQURNSU4nLFxuICAgIFNVUEVSX0FETUlOOiAnU1VQRVJfQURNSU4nXG4gIH0sXG4gIEFjdGl2aXR5VHlwZToge1xuICAgIFNFTlQ6ICdTRU5UJyxcbiAgICBERUxJVkVSRUQ6ICdERUxJVkVSRUQnLFxuICAgIE9QRU5FRDogJ09QRU5FRCcsXG4gICAgQ0xJQ0tFRDogJ0NMSUNLRUQnLFxuICAgIEJPVU5DRUQ6ICdCT1VOQ0VEJyxcbiAgICBVTlNVQlNDUklCRUQ6ICdVTlNVQlNDUklCRUQnLFxuICAgIFJFUExJRUQ6ICdSRVBMSUVEJyxcbiAgICBGQUlMRUQ6ICdGQUlMRUQnXG4gIH1cbn0pKTtcblxuZGVjbGFyZSBnbG9iYWwge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdmFyXG4gIHZhciBtb2NrUHJpc21hOiBEZWVwTW9ja1Byb3h5PFByaXNtYUNsaWVudD47XG59XG5cbmJlZm9yZUVhY2goKCkgPT4ge1xuICBjb25zdCBtb2NrUHJpc21hID0gbW9ja0RlZXA8UHJpc21hQ2xpZW50PigpO1xuICBnbG9iYWwubW9ja1ByaXNtYSA9IG1vY2tQcmlzbWE7XG59KTsgIl0sIm5hbWVzIjpbImplc3QiLCJtb2NrIiwibG9nZ2VyIiwiZXJyb3IiLCJmbiIsImluZm8iLCJ3YXJuIiwiZGVidWciLCJQcmlzbWFDbGllbnQiLCJtb2NrRGVlcCIsIlVzZXJSb2xlIiwiVVNFUiIsIkFETUlOIiwiSVRfQURNSU4iLCJTVVBFUl9BRE1JTiIsIkFjdGl2aXR5VHlwZSIsIlNFTlQiLCJERUxJVkVSRUQiLCJPUEVORUQiLCJDTElDS0VEIiwiQk9VTkNFRCIsIlVOU1VCU0NSSUJFRCIsIlJFUExJRUQiLCJGQUlMRUQiLCJiZWZvcmVFYWNoIiwibW9ja1ByaXNtYSIsImdsb2JhbCJdLCJtYXBwaW5ncyI6IjtBQUdBLGNBQWM7QUFDZEEsS0FBS0MsSUFBSSxDQUFDLGdCQUFnQixJQUFPLENBQUE7UUFDL0JDLFFBQVE7WUFDTkMsT0FBT0gsS0FBS0ksRUFBRTtZQUNkQyxNQUFNTCxLQUFLSSxFQUFFO1lBQ2JFLE1BQU1OLEtBQUtJLEVBQUU7WUFDYkcsT0FBT1AsS0FBS0ksRUFBRTtRQUNoQjtJQUNGLENBQUE7QUFFQSxnQ0FBZ0M7QUFDaENKLEtBQUtDLElBQUksQ0FBQyxrQkFBa0IsSUFBTyxDQUFBO1FBQ2pDTyxjQUFjUixLQUFLSSxFQUFFLENBQUMsSUFBTUssSUFBQUEsMEJBQVE7UUFDcENDLFVBQVU7WUFDUkMsTUFBTTtZQUNOQyxPQUFPO1lBQ1BDLFVBQVU7WUFDVkMsYUFBYTtRQUNmO1FBQ0FDLGNBQWM7WUFDWkMsTUFBTTtZQUNOQyxXQUFXO1lBQ1hDLFFBQVE7WUFDUkMsU0FBUztZQUNUQyxTQUFTO1lBQ1RDLGNBQWM7WUFDZEMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7SUFDRixDQUFBOzs7O2tDQS9CNkM7QUFzQzdDQyxXQUFXO0lBQ1QsTUFBTUMsYUFBYWhCLElBQUFBLDBCQUFRO0lBQzNCaUIsT0FBT0QsVUFBVSxHQUFHQTtBQUN0QiJ9