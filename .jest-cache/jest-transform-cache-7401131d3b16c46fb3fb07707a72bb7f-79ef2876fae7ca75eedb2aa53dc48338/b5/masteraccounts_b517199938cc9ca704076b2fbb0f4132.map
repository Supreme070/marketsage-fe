{"version":3,"sources":["/Users/supreme/Desktop/marketsage/src/lib/config/master-accounts.ts"],"sourcesContent":["/**\n * Master API Account Configuration for Unified Messaging Service\n * \n * This configuration manages platform-owned API accounts for customers\n * who prefer the unified service model over managing their own APIs.\n */\n\nexport interface MasterAccountConfig {\n  provider: string;\n  accountId: string;\n  apiKey: string;\n  apiSecret?: string;\n  fromNumber?: string;\n  fromEmail?: string;\n  isActive: boolean;\n  region?: string;\n  rateLimit?: {\n    perMinute: number;\n    perHour: number;\n    perDay: number;\n  };\n  costPerMessage?: {\n    sms: number;\n    email: number;\n    whatsapp: number;\n  };\n}\n\nexport interface MasterAccountsConfig {\n  sms: {\n    twilio: MasterAccountConfig;\n    africasTalking: MasterAccountConfig;\n    termii: MasterAccountConfig;\n  };\n  email: {\n    sendgrid: MasterAccountConfig;\n    mailgun: MasterAccountConfig;\n    postmark: MasterAccountConfig;\n  };\n  whatsapp: {\n    twilioWhatsApp: MasterAccountConfig;\n    whatsappBusiness: MasterAccountConfig;\n  };\n}\n\n// Master accounts configuration\nexport const masterAccountsConfig: MasterAccountsConfig = {\n  sms: {\n    twilio: {\n      provider: 'twilio',\n      accountId: process.env.MASTER_TWILIO_ACCOUNT_SID || '',\n      apiKey: process.env.MASTER_TWILIO_AUTH_TOKEN || '',\n      fromNumber: process.env.MASTER_TWILIO_FROM_NUMBER || '',\n      isActive: !!process.env.MASTER_TWILIO_ACCOUNT_SID,\n      region: 'us-east-1',\n      rateLimit: {\n        perMinute: 60,\n        perHour: 3600,\n        perDay: 86400\n      },\n      costPerMessage: {\n        sms: 0.0075, // $0.0075 per SMS\n        email: 0,\n        whatsapp: 0\n      }\n    },\n    africasTalking: {\n      provider: 'africas-talking',\n      accountId: process.env.MASTER_AT_USERNAME || '',\n      apiKey: process.env.MASTER_AT_API_KEY || '',\n      fromNumber: process.env.MASTER_AT_FROM_NUMBER || '',\n      isActive: !!process.env.MASTER_AT_API_KEY,\n      region: 'africa',\n      rateLimit: {\n        perMinute: 100,\n        perHour: 6000,\n        perDay: 144000\n      },\n      costPerMessage: {\n        sms: 0.05, // 5 cents per SMS in African markets\n        email: 0,\n        whatsapp: 0\n      }\n    },\n    termii: {\n      provider: 'termii',\n      accountId: process.env.MASTER_TERMII_SENDER_ID || '',\n      apiKey: process.env.MASTER_TERMII_API_KEY || '',\n      fromNumber: process.env.MASTER_TERMII_FROM_NUMBER || '',\n      isActive: !!process.env.MASTER_TERMII_API_KEY,\n      region: 'nigeria',\n      rateLimit: {\n        perMinute: 120,\n        perHour: 7200,\n        perDay: 172800\n      },\n      costPerMessage: {\n        sms: 0.04, // 4 cents per SMS in Nigeria\n        email: 0,\n        whatsapp: 0\n      }\n    }\n  },\n  email: {\n    sendgrid: {\n      provider: 'sendgrid',\n      accountId: process.env.MASTER_SENDGRID_USERNAME || '',\n      apiKey: process.env.MASTER_SENDGRID_API_KEY || '',\n      fromEmail: process.env.MASTER_SENDGRID_FROM_EMAIL || '',\n      isActive: !!process.env.MASTER_SENDGRID_API_KEY,\n      region: 'global',\n      rateLimit: {\n        perMinute: 600,\n        perHour: 36000,\n        perDay: 864000\n      },\n      costPerMessage: {\n        sms: 0,\n        email: 0.0012, // $0.0012 per email\n        whatsapp: 0\n      }\n    },\n    mailgun: {\n      provider: 'mailgun',\n      accountId: process.env.MASTER_MAILGUN_DOMAIN || '',\n      apiKey: process.env.MASTER_MAILGUN_API_KEY || '',\n      fromEmail: process.env.MASTER_MAILGUN_FROM_EMAIL || '',\n      isActive: !!process.env.MASTER_MAILGUN_API_KEY,\n      region: 'us',\n      rateLimit: {\n        perMinute: 1000,\n        perHour: 60000,\n        perDay: 1440000\n      },\n      costPerMessage: {\n        sms: 0,\n        email: 0.001, // $0.001 per email\n        whatsapp: 0\n      }\n    },\n    postmark: {\n      provider: 'postmark',\n      accountId: process.env.MASTER_POSTMARK_ACCOUNT_ID || '',\n      apiKey: process.env.MASTER_POSTMARK_API_KEY || '',\n      fromEmail: process.env.MASTER_POSTMARK_FROM_EMAIL || '',\n      isActive: !!process.env.MASTER_POSTMARK_API_KEY,\n      region: 'us',\n      rateLimit: {\n        perMinute: 300,\n        perHour: 18000,\n        perDay: 432000\n      },\n      costPerMessage: {\n        sms: 0,\n        email: 0.0025, // $0.0025 per email\n        whatsapp: 0\n      }\n    }\n  },\n  whatsapp: {\n    twilioWhatsApp: {\n      provider: 'twilio-whatsapp',\n      accountId: process.env.MASTER_TWILIO_WHATSAPP_ACCOUNT_SID || '',\n      apiKey: process.env.MASTER_TWILIO_WHATSAPP_AUTH_TOKEN || '',\n      fromNumber: process.env.MASTER_TWILIO_WHATSAPP_FROM_NUMBER || '',\n      isActive: !!process.env.MASTER_TWILIO_WHATSAPP_ACCOUNT_SID,\n      region: 'global',\n      rateLimit: {\n        perMinute: 80,\n        perHour: 4800,\n        perDay: 115200\n      },\n      costPerMessage: {\n        sms: 0,\n        email: 0,\n        whatsapp: 0.005 // $0.005 per WhatsApp message\n      }\n    },\n    whatsappBusiness: {\n      provider: 'whatsapp-business',\n      accountId: process.env.MASTER_WHATSAPP_BUSINESS_ACCOUNT_ID || '',\n      apiKey: process.env.MASTER_WHATSAPP_BUSINESS_ACCESS_TOKEN || '',\n      fromNumber: process.env.MASTER_WHATSAPP_BUSINESS_PHONE_NUMBER || '',\n      isActive: !!process.env.MASTER_WHATSAPP_BUSINESS_ACCESS_TOKEN,\n      region: 'global',\n      rateLimit: {\n        perMinute: 60,\n        perHour: 3600,\n        perDay: 86400\n      },\n      costPerMessage: {\n        sms: 0,\n        email: 0,\n        whatsapp: 0.004 // $0.004 per WhatsApp message\n      }\n    }\n  }\n};\n\n// Helper functions for master account management\nexport class MasterAccountManager {\n  /**\n   * Get the best available master account for a specific channel\n   */\n  static getBestMasterAccount(channel: 'sms' | 'email' | 'whatsapp', region?: string): MasterAccountConfig | null {\n    const channelAccounts = masterAccountsConfig[channel];\n    \n    // Filter active accounts\n    const activeAccounts = Object.values(channelAccounts).filter(account => account.isActive);\n    \n    if (activeAccounts.length === 0) {\n      return null;\n    }\n    \n    // Prioritize by region if specified\n    if (region) {\n      const regionMatch = activeAccounts.find(account => account.region === region);\n      if (regionMatch) {\n        return regionMatch;\n      }\n    }\n    \n    // For African markets, prioritize Africa's Talking for SMS\n    if (channel === 'sms' && (region === 'africa' || region === 'nigeria' || region === 'kenya')) {\n      const africasTalking = activeAccounts.find(account => account.provider === 'africas-talking');\n      if (africasTalking) {\n        return africasTalking;\n      }\n    }\n    \n    // Default to first active account\n    return activeAccounts[0];\n  }\n  \n  /**\n   * Calculate cost for a message campaign\n   */\n  static calculateCost(\n    channel: 'sms' | 'email' | 'whatsapp',\n    messageCount: number,\n    region?: string\n  ): { cost: number; provider: string } {\n    const account = this.getBestMasterAccount(channel, region);\n    \n    if (!account) {\n      return { cost: 0, provider: 'none' };\n    }\n    \n    const costPerMessage = account.costPerMessage?.[channel] || 0;\n    const cost = messageCount * costPerMessage;\n    \n    return { cost, provider: account.provider };\n  }\n  \n  /**\n   * Check if we have capacity for a message campaign\n   */\n  static checkCapacity(\n    channel: 'sms' | 'email' | 'whatsapp',\n    messageCount: number,\n    region?: string\n  ): { canSend: boolean; provider: string; rateLimit: any } {\n    const account = this.getBestMasterAccount(channel, region);\n    \n    if (!account) {\n      return { canSend: false, provider: 'none', rateLimit: null };\n    }\n    \n    const rateLimit = account.rateLimit;\n    \n    // For now, assume we can send if we have an active account\n    // In production, this would check against usage tracking\n    const canSend = rateLimit ? messageCount <= rateLimit.perDay : true;\n    \n    return { canSend, provider: account.provider, rateLimit };\n  }\n  \n  /**\n   * Get all active master accounts\n   */\n  static getAllActiveAccounts(): { channel: string; provider: string; config: MasterAccountConfig }[] {\n    const accounts = [];\n    \n    for (const [channel, providers] of Object.entries(masterAccountsConfig)) {\n      for (const [provider, config] of Object.entries(providers)) {\n        if (config.isActive) {\n          accounts.push({ channel, provider, config });\n        }\n      }\n    }\n    \n    return accounts;\n  }\n  \n  /**\n   * Validate master account configuration\n   */\n  static validateConfiguration(): { isValid: boolean; errors: string[] } {\n    const errors: string[] = [];\n    \n    // Check if we have at least one active account per channel\n    const channels = ['sms', 'email', 'whatsapp'] as const;\n    \n    for (const channel of channels) {\n      const channelAccounts = masterAccountsConfig[channel];\n      const activeAccounts = Object.values(channelAccounts).filter(account => account.isActive);\n      \n      if (activeAccounts.length === 0) {\n        errors.push(`No active master accounts configured for ${channel}`);\n      }\n    }\n    \n    // Check for missing environment variables\n    const requiredEnvVars = [\n      'MASTER_TWILIO_ACCOUNT_SID',\n      'MASTER_TWILIO_AUTH_TOKEN',\n      'MASTER_SENDGRID_API_KEY'\n    ];\n    \n    for (const envVar of requiredEnvVars) {\n      if (!process.env[envVar]) {\n        errors.push(`Missing environment variable: ${envVar}`);\n      }\n    }\n    \n    return { isValid: errors.length === 0, errors };\n  }\n}\n\n// Cost markup configuration for reselling\nexport const COST_MARKUP = {\n  sms: 2.5, // 2.5x markup on SMS costs\n  email: 3.0, // 3x markup on email costs\n  whatsapp: 2.0 // 2x markup on WhatsApp costs\n};\n\n// Credit conversion rates (1 credit = base cost)\nexport const CREDIT_RATES = {\n  sms: 0.1, // 10 cents per SMS credit\n  email: 0.01, // 1 cent per email credit\n  whatsapp: 0.08 // 8 cents per WhatsApp credit\n};"],"names":["COST_MARKUP","CREDIT_RATES","MasterAccountManager","masterAccountsConfig","sms","twilio","provider","accountId","process","env","MASTER_TWILIO_ACCOUNT_SID","apiKey","MASTER_TWILIO_AUTH_TOKEN","fromNumber","MASTER_TWILIO_FROM_NUMBER","isActive","region","rateLimit","perMinute","perHour","perDay","costPerMessage","email","whatsapp","africasTalking","MASTER_AT_USERNAME","MASTER_AT_API_KEY","MASTER_AT_FROM_NUMBER","termii","MASTER_TERMII_SENDER_ID","MASTER_TERMII_API_KEY","MASTER_TERMII_FROM_NUMBER","sendgrid","MASTER_SENDGRID_USERNAME","MASTER_SENDGRID_API_KEY","fromEmail","MASTER_SENDGRID_FROM_EMAIL","mailgun","MASTER_MAILGUN_DOMAIN","MASTER_MAILGUN_API_KEY","MASTER_MAILGUN_FROM_EMAIL","postmark","MASTER_POSTMARK_ACCOUNT_ID","MASTER_POSTMARK_API_KEY","MASTER_POSTMARK_FROM_EMAIL","twilioWhatsApp","MASTER_TWILIO_WHATSAPP_ACCOUNT_SID","MASTER_TWILIO_WHATSAPP_AUTH_TOKEN","MASTER_TWILIO_WHATSAPP_FROM_NUMBER","whatsappBusiness","MASTER_WHATSAPP_BUSINESS_ACCOUNT_ID","MASTER_WHATSAPP_BUSINESS_ACCESS_TOKEN","MASTER_WHATSAPP_BUSINESS_PHONE_NUMBER","getBestMasterAccount","channel","channelAccounts","activeAccounts","Object","values","filter","account","length","regionMatch","find","calculateCost","messageCount","cost","checkCapacity","canSend","getAllActiveAccounts","accounts","providers","entries","config","push","validateConfiguration","errors","channels","requiredEnvVars","envVar","isValid"],"mappings":"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"}