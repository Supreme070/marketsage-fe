{"version":3,"sources":["/Users/supreme/Desktop/marketsage/src/lib/sms-providers/base-provider.ts"],"sourcesContent":["// Base SMS provider interface for extensibility\nexport interface SMSResult {\n  success: boolean;\n  messageId?: string;\n  error?: {\n    message: string;\n    code?: string;\n  };\n}\n\nexport interface SMSProvider {\n  name: string;\n  sendSMS(phoneNumber: string, message: string): Promise<SMSResult>;\n  validatePhoneNumber(phoneNumber: string): boolean;\n  isConfigured(): boolean;\n}\n\nexport abstract class BaseSMSProvider implements SMSProvider {\n  abstract name: string;\n  \n  abstract sendSMS(phoneNumber: string, message: string): Promise<SMSResult>;\n  \n  // Enhanced phone number validation for African markets\n  validatePhoneNumber(phoneNumber: string): boolean {\n    if (!phoneNumber || typeof phoneNumber !== 'string') {\n      return false;\n    }\n    \n    const cleanPhoneNumber = phoneNumber.replace(/\\D/g, '');\n    \n    // Check if it's a valid length (typically 10-15 digits)\n    if (cleanPhoneNumber.length < 10 || cleanPhoneNumber.length > 15) {\n      return false;\n    }\n    \n    // Enhanced country codes with specific validations (African + US)\n    const countryValidation = [\n      { code: '234', minLength: 13, maxLength: 13 }, // Nigeria: +234XXXXXXXXXX\n      { code: '254', minLength: 12, maxLength: 12 }, // Kenya: +254XXXXXXXXX\n      { code: '27', minLength: 11, maxLength: 11 },   // South Africa: +27XXXXXXXXX\n      { code: '233', minLength: 12, maxLength: 12 },  // Ghana: +233XXXXXXXXX\n      { code: '256', minLength: 12, maxLength: 12 },  // Uganda: +256XXXXXXXXX\n      { code: '255', minLength: 12, maxLength: 12 },  // Tanzania: +255XXXXXXXXX\n      { code: '237', minLength: 12, maxLength: 12 },  // Cameroon: +237XXXXXXXXX\n      { code: '225', minLength: 12, maxLength: 12 },  // Ivory Coast: +225XXXXXXXXX\n      { code: '223', minLength: 11, maxLength: 11 },  // Mali: +223XXXXXXXX\n      { code: '221', minLength: 12, maxLength: 12 },  // Senegal: +221XXXXXXXXX\n      { code: '1', minLength: 11, maxLength: 11 },     // US/Canada: +1XXXXXXXXXX\n    ];\n    \n    // Check for international format with country codes\n    for (const country of countryValidation) {\n      if (cleanPhoneNumber.startsWith(country.code)) {\n        return cleanPhoneNumber.length >= country.minLength && \n               cleanPhoneNumber.length <= country.maxLength;\n      }\n    }\n    \n    // Check for local Nigerian numbers (most common market)\n    if (cleanPhoneNumber.startsWith('0') && cleanPhoneNumber.length === 11) {\n      // Validate Nigerian network prefixes (080, 081, 070, 090, 091, etc.)\n      const nigerianPrefixes = ['080', '081', '070', '090', '091', '071', '082', '083', '084', '085', '086', '087', '088', '089'];\n      const prefix = cleanPhoneNumber.substring(1, 4); // Get digits 1-3 (after removing 0)\n      return nigerianPrefixes.includes(prefix);\n    }\n    \n    // Check for Nigerian numbers without leading 0\n    if (!cleanPhoneNumber.startsWith('0') && cleanPhoneNumber.length === 10) {\n      const nigerianPrefixes = ['80', '81', '70', '90', '91', '71', '82', '83', '84', '85', '86', '87', '88', '89'];\n      const prefix = cleanPhoneNumber.substring(0, 2);\n      return nigerianPrefixes.includes(prefix);\n    }\n    \n    return false;\n  }\n  \n  abstract isConfigured(): boolean;\n}"],"names":["BaseSMSProvider","validatePhoneNumber","phoneNumber","cleanPhoneNumber","replace","length","countryValidation","code","minLength","maxLength","country","startsWith","nigerianPrefixes","prefix","substring","includes"],"mappings":"AAAA,gDAAgD;;;;;+BAiB1BA;;;eAAAA;;;AAAf,MAAeA;IAKpB,uDAAuD;IACvDC,oBAAoBC,WAAmB,EAAW;QAChD,IAAI,CAACA,eAAe,OAAOA,gBAAgB,UAAU;YACnD,OAAO;QACT;QAEA,MAAMC,mBAAmBD,YAAYE,OAAO,CAAC,OAAO;QAEpD,wDAAwD;QACxD,IAAID,iBAAiBE,MAAM,GAAG,MAAMF,iBAAiBE,MAAM,GAAG,IAAI;YAChE,OAAO;QACT;QAEA,kEAAkE;QAClE,MAAMC,oBAAoB;YACxB;gBAAEC,MAAM;gBAAOC,WAAW;gBAAIC,WAAW;YAAG;YAC5C;gBAAEF,MAAM;gBAAOC,WAAW;gBAAIC,WAAW;YAAG;YAC5C;gBAAEF,MAAM;gBAAMC,WAAW;gBAAIC,WAAW;YAAG;YAC3C;gBAAEF,MAAM;gBAAOC,WAAW;gBAAIC,WAAW;YAAG;YAC5C;gBAAEF,MAAM;gBAAOC,WAAW;gBAAIC,WAAW;YAAG;YAC5C;gBAAEF,MAAM;gBAAOC,WAAW;gBAAIC,WAAW;YAAG;YAC5C;gBAAEF,MAAM;gBAAOC,WAAW;gBAAIC,WAAW;YAAG;YAC5C;gBAAEF,MAAM;gBAAOC,WAAW;gBAAIC,WAAW;YAAG;YAC5C;gBAAEF,MAAM;gBAAOC,WAAW;gBAAIC,WAAW;YAAG;YAC5C;gBAAEF,MAAM;gBAAOC,WAAW;gBAAIC,WAAW;YAAG;YAC5C;gBAAEF,MAAM;gBAAKC,WAAW;gBAAIC,WAAW;YAAG;SAC3C;QAED,oDAAoD;QACpD,KAAK,MAAMC,WAAWJ,kBAAmB;YACvC,IAAIH,iBAAiBQ,UAAU,CAACD,QAAQH,IAAI,GAAG;gBAC7C,OAAOJ,iBAAiBE,MAAM,IAAIK,QAAQF,SAAS,IAC5CL,iBAAiBE,MAAM,IAAIK,QAAQD,SAAS;YACrD;QACF;QAEA,wDAAwD;QACxD,IAAIN,iBAAiBQ,UAAU,CAAC,QAAQR,iBAAiBE,MAAM,KAAK,IAAI;YACtE,qEAAqE;YACrE,MAAMO,mBAAmB;gBAAC;gBAAO;gBAAO;gBAAO;gBAAO;gBAAO;gBAAO;gBAAO;gBAAO;gBAAO;gBAAO;gBAAO;gBAAO;gBAAO;aAAM;YAC3H,MAAMC,SAASV,iBAAiBW,SAAS,CAAC,GAAG,IAAI,oCAAoC;YACrF,OAAOF,iBAAiBG,QAAQ,CAACF;QACnC;QAEA,+CAA+C;QAC/C,IAAI,CAACV,iBAAiBQ,UAAU,CAAC,QAAQR,iBAAiBE,MAAM,KAAK,IAAI;YACvE,MAAMO,mBAAmB;gBAAC;gBAAM;gBAAM;gBAAM;gBAAM;gBAAM;gBAAM;gBAAM;gBAAM;gBAAM;gBAAM;gBAAM;gBAAM;gBAAM;aAAK;YAC7G,MAAMC,SAASV,iBAAiBW,SAAS,CAAC,GAAG;YAC7C,OAAOF,iBAAiBG,QAAQ,CAACF;QACnC;QAEA,OAAO;IACT;AAGF"}