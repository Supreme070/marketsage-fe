{"version":3,"sources":["/Users/supreme/Desktop/marketsage/src/mcp/config/mcp-config.ts"],"sourcesContent":["/**\n * MCP Configuration for MarketSage\n * \n * This configuration provides centralized settings for all MCP servers\n * including authentication, rate limiting, and feature flags.\n */\n\nexport interface MCPServerConfig {\n  name: string;\n  version: string;\n  port?: number;\n  enabled: boolean;\n  authentication: {\n    required: boolean;\n    methods: ('session' | 'api-key' | 'jwt')[];\n  };\n  rateLimit: {\n    windowMs: number;\n    maxRequests: number;\n  };\n  fallback: {\n    enabled: boolean;\n    timeout: number;\n  };\n}\n\nexport interface MCPConfig {\n  servers: {\n    customer: MCPServerConfig;\n    campaign: MCPServerConfig;\n    leadpulse: MCPServerConfig;\n    services: MCPServerConfig;\n    monitoring: MCPServerConfig;\n  };\n  client: {\n    timeout: number;\n    retries: number;\n    fallbackEnabled: boolean;\n  };\n  features: {\n    customerDataEnabled: boolean;\n    campaignAnalyticsEnabled: boolean;\n    leadpulseEnabled: boolean;\n    externalServicesEnabled: boolean;\n    monitoringEnabled: boolean;\n  };\n}\n\n/**\n * Default MCP configuration for MarketSage\n */\nexport const defaultMCPConfig: MCPConfig = {\n  servers: {\n    customer: {\n      name: \"marketsage-customer-server\",\n      version: \"1.0.0\",\n      port: 3001,\n      enabled: process.env.MCP_CUSTOMER_DATA_ENABLED === 'true',\n      authentication: {\n        required: true,\n        methods: ['session', 'jwt']\n      },\n      rateLimit: {\n        windowMs: 60 * 1000, // 1 minute\n        maxRequests: 100\n      },\n      fallback: {\n        enabled: true,\n        timeout: 5000\n      }\n    },\n    campaign: {\n      name: \"marketsage-campaign-server\",\n      version: \"1.0.0\",\n      port: 3002,\n      enabled: process.env.MCP_CAMPAIGN_ANALYTICS_ENABLED === 'true',\n      authentication: {\n        required: true,\n        methods: ['session', 'jwt']\n      },\n      rateLimit: {\n        windowMs: 60 * 1000,\n        maxRequests: 100\n      },\n      fallback: {\n        enabled: true,\n        timeout: 5000\n      }\n    },\n    leadpulse: {\n      name: \"marketsage-leadpulse-server\",\n      version: \"1.0.0\",\n      port: 3003,\n      enabled: process.env.MCP_LEADPULSE_ENABLED === 'true',\n      authentication: {\n        required: true,\n        methods: ['session', 'jwt']\n      },\n      rateLimit: {\n        windowMs: 60 * 1000,\n        maxRequests: 150\n      },\n      fallback: {\n        enabled: true,\n        timeout: 5000\n      }\n    },\n    services: {\n      name: \"marketsage-services-server\",\n      version: \"1.0.0\",\n      port: 3004,\n      enabled: process.env.MCP_EXTERNAL_SERVICES_ENABLED === 'true',\n      authentication: {\n        required: true,\n        methods: ['session', 'api-key']\n      },\n      rateLimit: {\n        windowMs: 60 * 1000,\n        maxRequests: 50\n      },\n      fallback: {\n        enabled: true,\n        timeout: 10000\n      }\n    },\n    monitoring: {\n      name: \"marketsage-monitoring-server\",\n      version: \"1.0.0\",\n      port: 3005,\n      enabled: process.env.MCP_MONITORING_ENABLED === 'true',\n      authentication: {\n        required: true,\n        methods: ['session', 'jwt']\n      },\n      rateLimit: {\n        windowMs: 60 * 1000,\n        maxRequests: 200\n      },\n      fallback: {\n        enabled: true,\n        timeout: 5000\n      }\n    }\n  },\n  client: {\n    timeout: 30000,\n    retries: 3,\n    fallbackEnabled: true\n  },\n  features: {\n    customerDataEnabled: process.env.MCP_CUSTOMER_DATA_ENABLED === 'true',\n    campaignAnalyticsEnabled: process.env.MCP_CAMPAIGN_ANALYTICS_ENABLED === 'true',\n    leadpulseEnabled: process.env.MCP_LEADPULSE_ENABLED === 'true',\n    externalServicesEnabled: process.env.MCP_EXTERNAL_SERVICES_ENABLED === 'true',\n    monitoringEnabled: process.env.MCP_MONITORING_ENABLED === 'true'\n  }\n};\n\n/**\n * Get MCP configuration with environment variable overrides\n */\nexport function getMCPConfig(): MCPConfig {\n  return {\n    ...defaultMCPConfig,\n    // Environment-specific overrides can be added here\n    servers: {\n      ...defaultMCPConfig.servers,\n      customer: {\n        ...defaultMCPConfig.servers.customer,\n        enabled: process.env.MCP_CUSTOMER_DATA_ENABLED === 'true'\n      },\n      campaign: {\n        ...defaultMCPConfig.servers.campaign,\n        enabled: process.env.MCP_CAMPAIGN_ANALYTICS_ENABLED === 'true'\n      },\n      leadpulse: {\n        ...defaultMCPConfig.servers.leadpulse,\n        enabled: process.env.MCP_LEADPULSE_ENABLED === 'true'\n      },\n      services: {\n        ...defaultMCPConfig.servers.services,\n        enabled: process.env.MCP_EXTERNAL_SERVICES_ENABLED === 'true'\n      },\n      monitoring: {\n        ...defaultMCPConfig.servers.monitoring,\n        enabled: process.env.MCP_MONITORING_ENABLED === 'true'\n      }\n    }\n  };\n}\n\n/**\n * Check if MCP is enabled globally\n */\nexport function isMCPEnabled(): boolean {\n  return process.env.MCP_ENABLED === 'true';\n}\n\n/**\n * Get enabled MCP servers\n */\nexport function getEnabledMCPServers(): string[] {\n  const config = getMCPConfig();\n  return Object.entries(config.servers)\n    .filter(([_, serverConfig]) => serverConfig.enabled)\n    .map(([name, _]) => name);\n}"],"names":["defaultMCPConfig","getEnabledMCPServers","getMCPConfig","isMCPEnabled","servers","customer","name","version","port","enabled","process","env","MCP_CUSTOMER_DATA_ENABLED","authentication","required","methods","rateLimit","windowMs","maxRequests","fallback","timeout","campaign","MCP_CAMPAIGN_ANALYTICS_ENABLED","leadpulse","MCP_LEADPULSE_ENABLED","services","MCP_EXTERNAL_SERVICES_ENABLED","monitoring","MCP_MONITORING_ENABLED","client","retries","fallbackEnabled","features","customerDataEnabled","campaignAnalyticsEnabled","leadpulseEnabled","externalServicesEnabled","monitoringEnabled","MCP_ENABLED","config","Object","entries","filter","_","serverConfig","map"],"mappings":"AAAA;;;;;CAKC;;;;;;;;;;;IA8CYA,gBAAgB;eAAhBA;;IAsJGC,oBAAoB;eAApBA;;IAxCAC,YAAY;eAAZA;;IAiCAC,YAAY;eAAZA;;;AA/IT,MAAMH,mBAA8B;IACzCI,SAAS;QACPC,UAAU;YACRC,MAAM;YACNC,SAAS;YACTC,MAAM;YACNC,SAASC,QAAQC,GAAG,CAACC,yBAAyB,KAAK;YACnDC,gBAAgB;gBACdC,UAAU;gBACVC,SAAS;oBAAC;oBAAW;iBAAM;YAC7B;YACAC,WAAW;gBACTC,UAAU,KAAK;gBACfC,aAAa;YACf;YACAC,UAAU;gBACRV,SAAS;gBACTW,SAAS;YACX;QACF;QACAC,UAAU;YACRf,MAAM;YACNC,SAAS;YACTC,MAAM;YACNC,SAASC,QAAQC,GAAG,CAACW,8BAA8B,KAAK;YACxDT,gBAAgB;gBACdC,UAAU;gBACVC,SAAS;oBAAC;oBAAW;iBAAM;YAC7B;YACAC,WAAW;gBACTC,UAAU,KAAK;gBACfC,aAAa;YACf;YACAC,UAAU;gBACRV,SAAS;gBACTW,SAAS;YACX;QACF;QACAG,WAAW;YACTjB,MAAM;YACNC,SAAS;YACTC,MAAM;YACNC,SAASC,QAAQC,GAAG,CAACa,qBAAqB,KAAK;YAC/CX,gBAAgB;gBACdC,UAAU;gBACVC,SAAS;oBAAC;oBAAW;iBAAM;YAC7B;YACAC,WAAW;gBACTC,UAAU,KAAK;gBACfC,aAAa;YACf;YACAC,UAAU;gBACRV,SAAS;gBACTW,SAAS;YACX;QACF;QACAK,UAAU;YACRnB,MAAM;YACNC,SAAS;YACTC,MAAM;YACNC,SAASC,QAAQC,GAAG,CAACe,6BAA6B,KAAK;YACvDb,gBAAgB;gBACdC,UAAU;gBACVC,SAAS;oBAAC;oBAAW;iBAAU;YACjC;YACAC,WAAW;gBACTC,UAAU,KAAK;gBACfC,aAAa;YACf;YACAC,UAAU;gBACRV,SAAS;gBACTW,SAAS;YACX;QACF;QACAO,YAAY;YACVrB,MAAM;YACNC,SAAS;YACTC,MAAM;YACNC,SAASC,QAAQC,GAAG,CAACiB,sBAAsB,KAAK;YAChDf,gBAAgB;gBACdC,UAAU;gBACVC,SAAS;oBAAC;oBAAW;iBAAM;YAC7B;YACAC,WAAW;gBACTC,UAAU,KAAK;gBACfC,aAAa;YACf;YACAC,UAAU;gBACRV,SAAS;gBACTW,SAAS;YACX;QACF;IACF;IACAS,QAAQ;QACNT,SAAS;QACTU,SAAS;QACTC,iBAAiB;IACnB;IACAC,UAAU;QACRC,qBAAqBvB,QAAQC,GAAG,CAACC,yBAAyB,KAAK;QAC/DsB,0BAA0BxB,QAAQC,GAAG,CAACW,8BAA8B,KAAK;QACzEa,kBAAkBzB,QAAQC,GAAG,CAACa,qBAAqB,KAAK;QACxDY,yBAAyB1B,QAAQC,GAAG,CAACe,6BAA6B,KAAK;QACvEW,mBAAmB3B,QAAQC,GAAG,CAACiB,sBAAsB,KAAK;IAC5D;AACF;AAKO,SAAS1B;IACd,OAAO;QACL,GAAGF,gBAAgB;QACnB,mDAAmD;QACnDI,SAAS;YACP,GAAGJ,iBAAiBI,OAAO;YAC3BC,UAAU;gBACR,GAAGL,iBAAiBI,OAAO,CAACC,QAAQ;gBACpCI,SAASC,QAAQC,GAAG,CAACC,yBAAyB,KAAK;YACrD;YACAS,UAAU;gBACR,GAAGrB,iBAAiBI,OAAO,CAACiB,QAAQ;gBACpCZ,SAASC,QAAQC,GAAG,CAACW,8BAA8B,KAAK;YAC1D;YACAC,WAAW;gBACT,GAAGvB,iBAAiBI,OAAO,CAACmB,SAAS;gBACrCd,SAASC,QAAQC,GAAG,CAACa,qBAAqB,KAAK;YACjD;YACAC,UAAU;gBACR,GAAGzB,iBAAiBI,OAAO,CAACqB,QAAQ;gBACpChB,SAASC,QAAQC,GAAG,CAACe,6BAA6B,KAAK;YACzD;YACAC,YAAY;gBACV,GAAG3B,iBAAiBI,OAAO,CAACuB,UAAU;gBACtClB,SAASC,QAAQC,GAAG,CAACiB,sBAAsB,KAAK;YAClD;QACF;IACF;AACF;AAKO,SAASzB;IACd,OAAOO,QAAQC,GAAG,CAAC2B,WAAW,KAAK;AACrC;AAKO,SAASrC;IACd,MAAMsC,SAASrC;IACf,OAAOsC,OAAOC,OAAO,CAACF,OAAOnC,OAAO,EACjCsC,MAAM,CAAC,CAAC,CAACC,GAAGC,aAAa,GAAKA,aAAanC,OAAO,EAClDoC,GAAG,CAAC,CAAC,CAACvC,MAAMqC,EAAE,GAAKrC;AACxB"}