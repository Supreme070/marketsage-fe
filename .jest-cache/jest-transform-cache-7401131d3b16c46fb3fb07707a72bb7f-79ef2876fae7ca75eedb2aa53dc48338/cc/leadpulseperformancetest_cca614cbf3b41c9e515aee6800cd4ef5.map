{"version":3,"sources":["/Users/supreme/Desktop/marketsage/src/__tests__/performance/leadpulse-performance.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport { performance } from 'perf_hooks';\nimport { \n  CustomerJourneyVisualization \n} from '../../components/leadpulse/CustomerJourneyVisualization';\nimport { BasicVisitorMap } from '../../components/leadpulse/BasicVisitorMap';\nimport { EngagementMetrics } from '../../components/leadpulse/EngagementMetrics';\nimport { FormTracker } from '../../components/leadpulse/FormTracker';\nimport { CoreAnalyticsDashboard } from '../../components/leadpulse/CoreAnalyticsDashboard';\nimport { \n  mockCustomerJourney, \n  mockVisitorLocation, \n  mockVisitorJourney,\n  PERFORMANCE_THRESHOLDS \n} from '../utils/test-utils';\n\n// Performance testing utilities\nconst measureRenderTime = async (renderFn: () => void): Promise<number> => {\n  const start = performance.now();\n  renderFn();\n  const end = performance.now();\n  return end - start;\n};\n\nconst measureInteractionTime = async (interactionFn: () => void): Promise<number> => {\n  const start = performance.now();\n  interactionFn();\n  const end = performance.now();\n  return end - start;\n};\n\ndescribe('LeadPulse Components Performance Tests', () => {\n  describe('CustomerJourneyVisualization Performance', () => {\n    it('renders within performance threshold with small dataset', async () => {\n      const smallDataset = Array.from({ length: 10 }, (_, i) => \n        mockCustomerJourney({ sessionId: `session_${i}` })\n      );\n\n      const renderTime = await measureRenderTime(() => {\n        render(<CustomerJourneyVisualization journeys={smallDataset} />);\n      });\n\n      expect(renderTime).toBeLessThan(PERFORMANCE_THRESHOLDS.COMPONENT_RENDER);\n      console.log(`CustomerJourneyVisualization (10 items): ${renderTime.toFixed(2)}ms`);\n    });\n\n    it('handles medium dataset efficiently', async () => {\n      const mediumDataset = Array.from({ length: 100 }, (_, i) => \n        mockCustomerJourney({ sessionId: `session_${i}` })\n      );\n\n      const renderTime = await measureRenderTime(() => {\n        render(<CustomerJourneyVisualization journeys={mediumDataset} />);\n      });\n\n      expect(renderTime).toBeLessThan(PERFORMANCE_THRESHOLDS.COMPONENT_RENDER * 2);\n      console.log(`CustomerJourneyVisualization (100 items): ${renderTime.toFixed(2)}ms`);\n    });\n\n    it('handles large dataset without performance degradation', async () => {\n      const largeDataset = Array.from({ length: 1000 }, (_, i) => \n        mockCustomerJourney({ sessionId: `session_${i}` })\n      );\n\n      const renderTime = await measureRenderTime(() => {\n        render(<CustomerJourneyVisualization journeys={largeDataset} />);\n      });\n\n      expect(renderTime).toBeLessThan(PERFORMANCE_THRESHOLDS.COMPONENT_RENDER * 5);\n      console.log(`CustomerJourneyVisualization (1000 items): ${renderTime.toFixed(2)}ms`);\n    });\n\n    it('view mode switching is fast', async () => {\n      const dataset = Array.from({ length: 50 }, (_, i) => \n        mockCustomerJourney({ sessionId: `session_${i}` })\n      );\n\n      render(<CustomerJourneyVisualization journeys={dataset} />);\n\n      const interactionTime = await measureInteractionTime(() => {\n        const detailedButton = screen.getByRole('button', { name: /detailed/i });\n        fireEvent.click(detailedButton);\n      });\n\n      expect(interactionTime).toBeLessThan(PERFORMANCE_THRESHOLDS.INTERACTION_RESPONSE);\n      console.log(`View mode switch: ${interactionTime.toFixed(2)}ms`);\n    });\n\n    it('filtering operations are performant', async () => {\n      const dataset = Array.from({ length: 500 }, (_, i) => \n        mockCustomerJourney({ \n          sessionId: `session_${i}`,\n          outcome: i % 2 === 0 ? 'converted' : 'abandoned'\n        })\n      );\n\n      render(<CustomerJourneyVisualization journeys={dataset} />);\n\n      const interactionTime = await measureInteractionTime(() => {\n        const filterSelect = screen.getByDisplayValue('All Journeys');\n        fireEvent.change(filterSelect, { target: { value: 'converted' } });\n      });\n\n      expect(interactionTime).toBeLessThan(PERFORMANCE_THRESHOLDS.INTERACTION_RESPONSE * 2);\n      console.log(`Filter operation (500 items): ${interactionTime.toFixed(2)}ms`);\n    });\n  });\n\n  describe('BasicVisitorMap Performance', () => {\n    it('renders efficiently with multiple locations', async () => {\n      const locations = Array.from({ length: 100 }, (_, i) => \n        mockVisitorLocation({ city: `City${i}`, visitors: Math.floor(Math.random() * 100) })\n      );\n\n      const renderTime = await measureRenderTime(() => {\n        render(<BasicVisitorMap locations={locations} />);\n      });\n\n      expect(renderTime).toBeLessThan(PERFORMANCE_THRESHOLDS.COMPONENT_RENDER);\n      console.log(`BasicVisitorMap (100 locations): ${renderTime.toFixed(2)}ms`);\n    });\n\n    it('handles map interactions smoothly', async () => {\n      const locations = Array.from({ length: 50 }, (_, i) => \n        mockVisitorLocation({ city: `City${i}` })\n      );\n\n      render(<BasicVisitorMap locations={locations} />);\n\n      const interactionTime = await measureInteractionTime(() => {\n        const firstDot = document.querySelector('.group');\n        if (firstDot) {\n          fireEvent.mouseEnter(firstDot);\n          fireEvent.mouseLeave(firstDot);\n        }\n      });\n\n      expect(interactionTime).toBeLessThan(PERFORMANCE_THRESHOLDS.INTERACTION_RESPONSE);\n      console.log(`Map hover interaction: ${interactionTime.toFixed(2)}ms`);\n    });\n  });\n\n  describe('EngagementMetrics Performance', () => {\n    it('processes large journey datasets efficiently', async () => {\n      const journeys = Array.from({ length: 500 }, (_, i) => \n        mockVisitorJourney({ engagementScore: Math.floor(Math.random() * 100) })\n      );\n\n      const renderTime = await measureRenderTime(() => {\n        render(<EngagementMetrics journeys={journeys} />);\n      });\n\n      expect(renderTime).toBeLessThan(PERFORMANCE_THRESHOLDS.COMPONENT_RENDER * 2);\n      console.log(`EngagementMetrics (500 journeys): ${renderTime.toFixed(2)}ms`);\n    });\n\n    it('calculations complete quickly', async () => {\n      const journeys = Array.from({ length: 1000 }, (_, i) => \n        mockVisitorJourney({ \n          engagementScore: Math.floor(Math.random() * 100),\n          totalPages: Math.floor(Math.random() * 20),\n        })\n      );\n\n      const start = performance.now();\n      render(<EngagementMetrics journeys={journeys} />);\n      const end = performance.now();\n\n      const calculationTime = end - start;\n      expect(calculationTime).toBeLessThan(PERFORMANCE_THRESHOLDS.COMPONENT_RENDER * 3);\n      console.log(`EngagementMetrics calculations (1000 journeys): ${calculationTime.toFixed(2)}ms`);\n    });\n  });\n\n  describe('FormTracker Performance', () => {\n    it('renders form data efficiently', async () => {\n      const renderTime = await measureRenderTime(() => {\n        render(<FormTracker isLoading={false} />);\n      });\n\n      expect(renderTime).toBeLessThan(PERFORMANCE_THRESHOLDS.COMPONENT_RENDER);\n      console.log(`FormTracker render: ${renderTime.toFixed(2)}ms`);\n    });\n  });\n\n  describe('CoreAnalyticsDashboard Performance', () => {\n    it('renders analytics dashboard efficiently', async () => {\n      const renderTime = await measureRenderTime(() => {\n        render(<CoreAnalyticsDashboard isLoading={false} />);\n      });\n\n      expect(renderTime).toBeLessThan(PERFORMANCE_THRESHOLDS.COMPONENT_RENDER);\n      console.log(`CoreAnalyticsDashboard render: ${renderTime.toFixed(2)}ms`);\n    });\n\n    it('chart rendering is performant', async () => {\n      render(<CoreAnalyticsDashboard isLoading={false} />);\n\n      // Test hourly traffic chart interaction\n      const interactionTime = await measureInteractionTime(() => {\n        const chartBar = document.querySelector('.bg-blue-500');\n        if (chartBar) {\n          fireEvent.mouseEnter(chartBar);\n          fireEvent.mouseLeave(chartBar);\n        }\n      });\n\n      expect(interactionTime).toBeLessThan(PERFORMANCE_THRESHOLDS.INTERACTION_RESPONSE);\n      console.log(`Chart interaction: ${interactionTime.toFixed(2)}ms`);\n    });\n  });\n\n  describe('Memory Usage Performance', () => {\n    it('components clean up properly on unmount', async () => {\n      const dataset = Array.from({ length: 100 }, (_, i) => \n        mockCustomerJourney({ sessionId: `session_${i}` })\n      );\n\n      const { unmount } = render(<CustomerJourneyVisualization journeys={dataset} />);\n\n      // Measure memory before and after unmount\n      const memoryBefore = (performance as any).memory?.usedJSHeapSize || 0;\n      unmount();\n      \n      // Force garbage collection if available\n      if (global.gc) {\n        global.gc();\n      }\n      \n      const memoryAfter = (performance as any).memory?.usedJSHeapSize || 0;\n      \n      console.log(`Memory before unmount: ${memoryBefore}`);\n      console.log(`Memory after unmount: ${memoryAfter}`);\n      \n      // Memory should not continuously grow\n      expect(memoryAfter).toBeLessThanOrEqual(memoryBefore * 1.1);\n    });\n\n    it('handles rapid re-renders without memory leaks', async () => {\n      const datasets = Array.from({ length: 10 }, (_, i) => \n        Array.from({ length: 50 }, (_, j) => \n          mockCustomerJourney({ sessionId: `session_${i}_${j}` })\n        )\n      );\n\n      const { rerender } = render(<CustomerJourneyVisualization journeys={datasets[0]} />);\n\n      const memoryBefore = (performance as any).memory?.usedJSHeapSize || 0;\n\n      // Rapidly re-render with different datasets\n      for (let i = 1; i < datasets.length; i++) {\n        rerender(<CustomerJourneyVisualization journeys={datasets[i]} />);\n      }\n\n      const memoryAfter = (performance as any).memory?.usedJSHeapSize || 0;\n      const memoryGrowth = memoryAfter - memoryBefore;\n\n      console.log(`Memory growth after 10 re-renders: ${memoryGrowth} bytes`);\n      \n      // Memory growth should be reasonable\n      expect(memoryGrowth).toBeLessThan(10 * 1024 * 1024); // Less than 10MB growth\n    });\n  });\n\n  describe('Animation Performance', () => {\n    it('animations run at acceptable frame rates', async () => {\n      const dataset = Array.from({ length: 20 }, (_, i) => \n        mockCustomerJourney({ sessionId: `session_${i}` })\n      );\n\n      render(<CustomerJourneyVisualization journeys={dataset} />);\n\n      // Select first journey and switch to detailed view\n      const journeyCard = screen.getAllByText(/Session/)[0];\n      fireEvent.click(journeyCard.closest('div')!);\n      fireEvent.click(screen.getByRole('button', { name: /detailed/i }));\n\n      // Measure animation frame time\n      const animationTime = await measureInteractionTime(() => {\n        const playButton = screen.getByRole('button', { name: /play/i });\n        fireEvent.click(playButton);\n      });\n\n      expect(animationTime).toBeLessThan(PERFORMANCE_THRESHOLDS.ANIMATION_FRAME * 5);\n      console.log(`Animation trigger time: ${animationTime.toFixed(2)}ms`);\n    });\n  });\n\n  describe('Concurrent Performance', () => {\n    it('handles multiple components rendering simultaneously', async () => {\n      const journeys = Array.from({ length: 50 }, (_, i) => \n        mockCustomerJourney({ sessionId: `session_${i}` })\n      );\n      const locations = Array.from({ length: 20 }, (_, i) => \n        mockVisitorLocation({ city: `City${i}` })\n      );\n      const visitorJourneys = Array.from({ length: 30 }, (_, i) => \n        mockVisitorJourney({ id: `journey_${i}` })\n      );\n\n      const renderTime = await measureRenderTime(() => {\n        render(\n          <div>\n            <CustomerJourneyVisualization journeys={journeys} />\n            <BasicVisitorMap locations={locations} />\n            <EngagementMetrics journeys={visitorJourneys} />\n            <FormTracker />\n            <CoreAnalyticsDashboard />\n          </div>\n        );\n      });\n\n      expect(renderTime).toBeLessThan(PERFORMANCE_THRESHOLDS.COMPONENT_RENDER * 3);\n      console.log(`All components together: ${renderTime.toFixed(2)}ms`);\n    });\n  });\n});"],"names":["measureRenderTime","renderFn","start","performance","now","end","measureInteractionTime","interactionFn","describe","it","smallDataset","Array","from","length","_","i","mockCustomerJourney","sessionId","renderTime","render","CustomerJourneyVisualization","journeys","expect","toBeLessThan","PERFORMANCE_THRESHOLDS","COMPONENT_RENDER","console","log","toFixed","mediumDataset","largeDataset","dataset","interactionTime","detailedButton","screen","getByRole","name","fireEvent","click","INTERACTION_RESPONSE","outcome","filterSelect","getByDisplayValue","change","target","value","locations","mockVisitorLocation","city","visitors","Math","floor","random","BasicVisitorMap","firstDot","document","querySelector","mouseEnter","mouseLeave","mockVisitorJourney","engagementScore","EngagementMetrics","totalPages","calculationTime","FormTracker","isLoading","CoreAnalyticsDashboard","chartBar","unmount","memoryBefore","memory","usedJSHeapSize","global","gc","memoryAfter","toBeLessThanOrEqual","datasets","j","rerender","memoryGrowth","journeyCard","getAllByText","closest","animationTime","playButton","ANIMATION_FRAME","visitorJourneys","id","div"],"mappings":"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"}