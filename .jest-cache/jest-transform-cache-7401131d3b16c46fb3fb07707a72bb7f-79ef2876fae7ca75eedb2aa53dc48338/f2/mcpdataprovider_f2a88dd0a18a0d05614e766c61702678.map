{"version":3,"sources":["/Users/supreme/Desktop/marketsage/src/lib/leadpulse/mcp-data-provider.ts"],"sourcesContent":["/**\n * MCP-Integrated LeadPulse Data Provider\n * \n * This provider integrates with MCP servers to provide real visitor data\n * while maintaining backward compatibility with fallback mechanisms.\n */\n\nimport { cache } from 'react';\nimport { MarketSageMCPClient } from '../../mcp/clients/mcp-client';\nimport { \n  type MCPAuthContext, \n  type LeadPulseQuery,\n  type MCPClientResponse \n} from '../../mcp/types/mcp-types';\nimport { \n  type VisitorJourney,\n  type VisitorPath,\n  type InsightItem,\n  type VisitorSegment,\n  type VisitorLocation,\n  type PulseDataPoint,\n  type LeadPulseTouchpointType,\n  type LeadPulseInsightType,\n  type LeadPulseImportance\n} from './dataProvider';\n\n/**\n * Enhanced visitor data with MCP integration\n */\ninterface MCPVisitorData {\n  id: string;\n  sessionId: string;\n  currentPage: string;\n  timeOnPage: number;\n  sessionDuration: number;\n  pageViews: number;\n  interactions: number;\n  intentScore: number;\n  isReturning: boolean;\n  location: {\n    country: string;\n    city: string;\n    region?: string;\n    timezone?: string;\n  };\n  device: {\n    type: string;\n    browser: string;\n    os: string;\n    screenSize?: string;\n  };\n  profile: {\n    totalSessions: number;\n    totalPageViews: number;\n    averageSessionDuration: number;\n    preferredChannel: string;\n    lastSeen: string;\n  };\n  journey?: Array<{\n    timestamp: string;\n    action: string;\n    page: string;\n    duration?: number;\n    element?: string;\n  }>;\n  heatmapData?: {\n    clicks: number;\n    scrollDepth: number;\n    timeOnPage: number;\n    exitIntent: boolean;\n  };\n}\n\n/**\n * MCP-integrated data provider class\n */\nexport class MCPLeadPulseDataProvider {\n  private mcpClient: MarketSageMCPClient;\n  private authContext: MCPAuthContext | null = null;\n\n  constructor(authContext?: MCPAuthContext) {\n    this.mcpClient = new MarketSageMCPClient(authContext);\n    this.authContext = authContext || null;\n  }\n\n  /**\n   * Set authentication context\n   */\n  setAuthContext(authContext: MCPAuthContext): void {\n    this.authContext = authContext;\n    this.mcpClient.setAuthContext(authContext);\n  }\n\n  /**\n   * Get real-time visitor data from MCP server\n   */\n  async getRealTimeVisitors(options: {\n    includeLocation?: boolean;\n    includeDevice?: boolean;\n    limit?: number;\n  } = {}): Promise<MCPVisitorData[]> {\n    try {\n      // Try to get data from MCP LeadPulse server first\n      if (this.mcpClient.isEnabled() && this.authContext) {\n        const response = await this.mcpClient.readResource(\n          `leadpulse://visitors?limit=${options.limit || 50}&includeLocation=${options.includeLocation !== false}&includeDevice=${options.includeDevice !== false}`,\n          this.authContext\n        );\n\n        if (response.success && response.data) {\n          return this.transformMCPVisitorData(response.data);\n        }\n      }\n\n      // If MCP is not enabled or fails, try direct database query\n      if (this.authContext?.organizationId) {\n        return await this.getVisitorsFromDatabase(options);\n      }\n\n      // Last resort: fallback to demo data\n      return this.getFallbackVisitors(options);\n    } catch (error) {\n      console.error('MCP getRealTimeVisitors failed:', error);\n      \n      // Try database fallback\n      if (this.authContext?.organizationId) {\n        try {\n          return await this.getVisitorsFromDatabase(options);\n        } catch (dbError) {\n          console.error('Database fallback failed:', dbError);\n        }\n      }\n      \n      return this.getFallbackVisitors(options);\n    }\n  }\n\n  /**\n   * Get visitor data directly from database\n   */\n  private async getVisitorsFromDatabase(options: {\n    includeLocation?: boolean;\n    includeDevice?: boolean;\n    limit?: number;\n  }): Promise<MCPVisitorData[]> {\n    if (!this.authContext?.organizationId) {\n      throw new Error('No organization context for database query');\n    }\n\n    try {\n      // Import prisma dynamically to avoid build issues\n      const { prisma } = await import('../../lib/db/prisma');\n      \n      // Get recent visitor sessions from MCP data\n      const sessions = await prisma.mCPVisitorSessions.findMany({\n        where: {\n          organizationId: this.authContext.organizationId,\n          sessionStart: {\n            gte: new Date(Date.now() - 24 * 60 * 60 * 1000) // Last 24 hours\n          }\n        },\n        orderBy: { sessionStart: 'desc' },\n        take: options.limit || 50\n      });\n\n      // Transform database data to MCPVisitorData format\n      return sessions.map((session, index) => ({\n        id: session.id,\n        sessionId: session.id,\n        currentPage: session.currentPage || '/home',\n        timeOnPage: session.timeOnPage || 0,\n        sessionDuration: session.sessionDuration || 0,\n        pageViews: session.pageViews || 0,\n        interactions: session.interactions || 0,\n        intentScore: session.intentScore || 0,\n        isReturning: session.isReturning || false,\n        location: {\n          country: session.location?.country || 'Nigeria',\n          city: session.location?.city || 'Lagos',\n          region: session.location?.region,\n          timezone: session.location?.timezone || 'Africa/Lagos'\n        },\n        device: {\n          type: session.device?.type || 'desktop',\n          browser: session.device?.browser || 'Chrome',\n          os: session.device?.os || 'Windows',\n          screenSize: session.device?.screenSize\n        },\n        profile: {\n          totalSessions: session.profile?.totalSessions || 1,\n          totalPageViews: session.profile?.totalPageViews || 1,\n          averageSessionDuration: session.profile?.averageSessionDuration || 0,\n          preferredChannel: session.profile?.preferredChannel || 'web',\n          lastSeen: session.sessionEnd?.toISOString() || new Date().toISOString()\n        },\n        journey: session.journey as any[] || [],\n        heatmapData: session.heatmapData as any || {}\n      }));\n    } catch (error) {\n      console.error('Database query failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get visitor analytics from MCP server\n   */\n  async getVisitorAnalytics(visitorId: string): Promise<{\n    behaviorAnalysis: any;\n    predictions: any;\n    recommendations: string[];\n  }> {\n    if (!this.mcpClient.isEnabled()) {\n      return this.getFallbackAnalytics(visitorId);\n    }\n\n    try {\n      const response = await this.mcpClient.getVisitorBehavior(visitorId);\n      \n      if (response.success && response.data) {\n        return this.transformMCPAnalytics(response.data);\n      }\n\n      return this.getFallbackAnalytics(visitorId);\n    } catch (error) {\n      console.error('MCP getVisitorAnalytics failed:', error);\n      return this.getFallbackAnalytics(visitorId);\n    }\n  }\n\n  /**\n   * Get high-intent visitors from MCP server\n   */\n  async getHighIntentVisitors(threshold: number = 70, limit: number = 20): Promise<MCPVisitorData[]> {\n    if (!this.mcpClient.isEnabled()) {\n      return this.getFallbackHighIntentVisitors(threshold, limit);\n    }\n\n    try {\n      // This would call the MCP server's identify_high_intent_visitors tool\n      // For now, return fallback data\n      return this.getFallbackHighIntentVisitors(threshold, limit);\n    } catch (error) {\n      console.error('MCP getHighIntentVisitors failed:', error);\n      return this.getFallbackHighIntentVisitors(threshold, limit);\n    }\n  }\n\n  /**\n   * Get conversion funnel data from MCP server\n   */\n  async getConversionFunnel(options: {\n    funnelId?: string;\n    dateRange?: '7d' | '30d' | '90d';\n    includeSegments?: boolean;\n  } = {}): Promise<{\n    steps: Array<{\n      step: number;\n      name: string;\n      visitors: number;\n      conversionRate: number;\n      dropOffRate: number;\n    }>;\n    segments?: Array<{\n      name: string;\n      overallConversion: number;\n      dropOffPoints: string[];\n    }>;\n    insights: string[];\n  }> {\n    if (!this.mcpClient.isEnabled()) {\n      return this.getFallbackFunnelData(options);\n    }\n\n    try {\n      // This would call the MCP server's get_conversion_funnel tool\n      // For now, return fallback data\n      return this.getFallbackFunnelData(options);\n    } catch (error) {\n      console.error('MCP getConversionFunnel failed:', error);\n      return this.getFallbackFunnelData(options);\n    }\n  }\n\n  /**\n   * Get page analytics from MCP server\n   */\n  async getPageAnalytics(pageUrl: string, options: {\n    includeHeatmap?: boolean;\n    dateRange?: '1d' | '7d' | '30d';\n  } = {}): Promise<{\n    metrics: {\n      pageViews: number;\n      uniqueVisitors: number;\n      averageTimeOnPage: number;\n      bounceRate: number;\n      exitRate: number;\n      scrollDepth: number;\n      clickThroughRate: number;\n    };\n    heatmapData?: any;\n    insights: string[];\n  }> {\n    if (!this.mcpClient.isEnabled()) {\n      return this.getFallbackPageAnalytics(pageUrl, options);\n    }\n\n    try {\n      // This would call the MCP server's get_page_analytics tool\n      // For now, return fallback data\n      return this.getFallbackPageAnalytics(pageUrl, options);\n    } catch (error) {\n      console.error('MCP getPageAnalytics failed:', error);\n      return this.getFallbackPageAnalytics(pageUrl, options);\n    }\n  }\n\n  /**\n   * Transform MCP visitor data to our format\n   */\n  private transformMCPVisitorData(mcpData: any): MCPVisitorData[] {\n    if (!mcpData || !Array.isArray(mcpData)) {\n      return [];\n    }\n\n    return mcpData.map((visitor: any) => ({\n      id: visitor.id || visitor.visitorId,\n      sessionId: visitor.sessionId || `session-${visitor.id}`,\n      currentPage: visitor.currentPage || '/home',\n      timeOnPage: visitor.timeOnPage || 0,\n      sessionDuration: visitor.sessionDuration || 0,\n      pageViews: visitor.pageViews || 0,\n      interactions: visitor.interactions || 0,\n      intentScore: visitor.intentScore || 0,\n      isReturning: visitor.isReturning || false,\n      location: {\n        country: visitor.location?.country || 'Unknown',\n        city: visitor.location?.city || 'Unknown',\n        region: visitor.location?.region,\n        timezone: visitor.location?.timezone\n      },\n      device: {\n        type: visitor.device?.type || 'Unknown',\n        browser: visitor.device?.browser || 'Unknown',\n        os: visitor.device?.os || 'Unknown',\n        screenSize: visitor.device?.screenSize\n      },\n      profile: {\n        totalSessions: visitor.profile?.totalSessions || 1,\n        totalPageViews: visitor.profile?.totalPageViews || 1,\n        averageSessionDuration: visitor.profile?.averageSessionDuration || 0,\n        preferredChannel: visitor.profile?.preferredChannel || 'web',\n        lastSeen: visitor.profile?.lastSeen || new Date().toISOString()\n      },\n      journey: visitor.journey,\n      heatmapData: visitor.heatmapData\n    }));\n  }\n\n  /**\n   * Transform MCP analytics data to our format\n   */\n  private transformMCPAnalytics(mcpData: any): any {\n    return {\n      behaviorAnalysis: mcpData.behaviorPattern || {},\n      predictions: mcpData.predictions || {},\n      recommendations: mcpData.insights || []\n    };\n  }\n\n  /**\n   * Fallback visitor data (enhanced demo data)\n   */\n  private getFallbackVisitors(options: any): MCPVisitorData[] {\n    const cities = ['Lagos', 'Abuja', 'Kano', 'Port Harcourt', 'Ibadan', 'Nairobi', 'Accra', 'Cape Town'];\n    const countries = ['Nigeria', 'Kenya', 'Ghana', 'South Africa'];\n    const browsers = ['Chrome', 'Safari', 'Firefox', 'Edge'];\n    const devices = ['desktop', 'mobile', 'tablet'];\n    const pages = ['/home', '/products', '/pricing', '/contact', '/about'];\n\n    return Array.from({ length: options.limit || 20 }, (_, i) => ({\n      id: `visitor-${i + 1}`,\n      sessionId: `session-${i + 1}`,\n      currentPage: pages[i % pages.length],\n      timeOnPage: Math.floor(Math.random() * 300) + 30,\n      sessionDuration: Math.floor(Math.random() * 1800) + 60,\n      pageViews: Math.floor(Math.random() * 10) + 1,\n      interactions: Math.floor(Math.random() * 20) + 1,\n      intentScore: Math.floor(Math.random() * 100) + 1,\n      isReturning: Math.random() < 0.4,\n      location: {\n        country: countries[i % countries.length],\n        city: cities[i % cities.length],\n        region: 'State/Province',\n        timezone: 'Africa/Lagos'\n      },\n      device: {\n        type: devices[i % devices.length],\n        browser: browsers[i % browsers.length],\n        os: ['Windows', 'macOS', 'iOS', 'Android'][i % 4],\n        screenSize: '1920x1080'\n      },\n      profile: {\n        totalSessions: Math.floor(Math.random() * 10) + 1,\n        totalPageViews: Math.floor(Math.random() * 50) + 1,\n        averageSessionDuration: Math.floor(Math.random() * 600) + 120,\n        preferredChannel: ['web', 'mobile', 'email'][i % 3],\n        lastSeen: new Date(Date.now() - Math.random() * 86400000).toISOString()\n      },\n      journey: [\n        {\n          timestamp: new Date(Date.now() - Math.random() * 3600000).toISOString(),\n          action: 'page_view',\n          page: '/home',\n          duration: 45\n        },\n        {\n          timestamp: new Date(Date.now() - Math.random() * 1800000).toISOString(),\n          action: 'click',\n          page: '/products',\n          element: 'product-button'\n        }\n      ],\n      heatmapData: {\n        clicks: Math.floor(Math.random() * 20) + 1,\n        scrollDepth: Math.random() * 0.5 + 0.5,\n        timeOnPage: Math.floor(Math.random() * 300) + 30,\n        exitIntent: Math.random() < 0.3\n      }\n    }));\n  }\n\n  /**\n   * Fallback analytics data\n   */\n  private getFallbackAnalytics(visitorId: string): any {\n    return {\n      behaviorAnalysis: {\n        pageViewsPerSession: 6.5,\n        averageSessionDuration: 420,\n        bounceRate: 0.15,\n        conversionRate: 0.08,\n        engagementScore: 78\n      },\n      predictions: {\n        likelihoodToConvert: 0.74,\n        timeToConversion: '2-3 days',\n        preferredChannel: 'email',\n        nextBestAction: 'Send targeted offer'\n      },\n      recommendations: [\n        'Visitor shows high engagement with premium content',\n        'Multiple return sessions indicate strong interest',\n        'Behavior pattern suggests readiness to purchase'\n      ]\n    };\n  }\n\n  /**\n   * Fallback high-intent visitors data\n   */\n  private getFallbackHighIntentVisitors(threshold: number, limit: number): MCPVisitorData[] {\n    return this.getFallbackVisitors({ limit })\n      .filter(visitor => visitor.intentScore >= threshold)\n      .slice(0, limit);\n  }\n\n  /**\n   * Fallback funnel data\n   */\n  private getFallbackFunnelData(options: any): any {\n    return {\n      steps: [\n        { step: 1, name: 'Landing Page Visit', visitors: 10000, conversionRate: 100, dropOffRate: 0 },\n        { step: 2, name: 'Product Page View', visitors: 6500, conversionRate: 65, dropOffRate: 35 },\n        { step: 3, name: 'Pricing Page View', visitors: 3250, conversionRate: 32.5, dropOffRate: 50 },\n        { step: 4, name: 'Contact Form', visitors: 1300, conversionRate: 13, dropOffRate: 60 },\n        { step: 5, name: 'Purchase', visitors: 260, conversionRate: 2.6, dropOffRate: 80 }\n      ],\n      segments: options.includeSegments ? [\n        { name: 'New Visitors', overallConversion: 1.8, dropOffPoints: ['Product Page View', 'Contact Form'] },\n        { name: 'Returning Visitors', overallConversion: 4.2, dropOffPoints: ['Pricing Page View'] }\n      ] : undefined,\n      insights: [\n        'Biggest drop-off occurs at Product Page View (35%)',\n        'Pricing page needs optimization - 50% drop-off rate',\n        'Contact form conversion is strong for those who reach it'\n      ]\n    };\n  }\n\n  /**\n   * Fallback page analytics data\n   */\n  private getFallbackPageAnalytics(pageUrl: string, options: any): any {\n    return {\n      metrics: {\n        pageViews: 2500,\n        uniqueVisitors: 1800,\n        averageTimeOnPage: 180,\n        bounceRate: 0.35,\n        exitRate: 0.42,\n        scrollDepth: 0.68,\n        clickThroughRate: 0.15\n      },\n      heatmapData: options.includeHeatmap ? {\n        clickMap: { headerNav: 45, primaryCTA: 120, secondaryCTA: 67, footer: 23 },\n        scrollMap: { '0-25%': 100, '25-50%': 85, '50-75%': 68, '75-100%': 42 },\n        attentionMap: { hero: 8.5, features: 6.2, pricing: 7.8, testimonials: 4.1 }\n      } : undefined,\n      insights: [\n        'Primary CTA has good engagement (120 clicks)',\n        'Users tend to drop off at 50% scroll depth',\n        'Pricing section gets high attention (7.8 seconds average)'\n      ]\n    };\n  }\n}\n\n/**\n * Cached MCP data provider instance\n */\nconst mcpDataProvider = new MCPLeadPulseDataProvider();\n\n/**\n * Get visitor data with MCP integration\n */\nexport const getMCPVisitorData = cache(async (options: {\n  includeLocation?: boolean;\n  includeDevice?: boolean;\n  limit?: number;\n  authContext?: MCPAuthContext;\n} = {}): Promise<VisitorJourney[]> => {\n  if (options.authContext) {\n    mcpDataProvider.setAuthContext(options.authContext);\n  }\n\n  const mcpVisitors = await mcpDataProvider.getRealTimeVisitors(options);\n  \n  // Transform MCP data to VisitorJourney format\n  return mcpVisitors.map(visitor => ({\n    id: visitor.id,\n    visitorId: visitor.id,\n    fingerprint: `fp_${visitor.id}`,\n    location: `${visitor.location.city}, ${visitor.location.country}`,\n    device: `${visitor.device.type}, ${visitor.device.browser}`,\n    browser: visitor.device.browser,\n    engagementScore: visitor.intentScore,\n    lastActive: formatLastActive(new Date(visitor.profile.lastSeen)),\n    pulseData: visitor.journey ? visitor.journey.map(j => ({\n      timestamp: j.timestamp,\n      value: j.duration || 60,\n      type: mapActionToType(j.action),\n      url: j.page,\n      title: j.page\n    })) : []\n  }));\n});\n\n/**\n * Get visitor insights with MCP integration\n */\nexport const getMCPVisitorInsights = cache(async (authContext?: MCPAuthContext): Promise<InsightItem[]> => {\n  if (authContext) {\n    mcpDataProvider.setAuthContext(authContext);\n  }\n\n  try {\n    // Try to get real visitor data for insights calculation\n    const visitors = await mcpDataProvider.getRealTimeVisitors({ limit: 100 });\n    \n    if (visitors.length === 0) {\n      return []; // Return empty if no data\n    }\n\n    const insights: InsightItem[] = [];\n    const now = Date.now();\n    \n    // Calculate mobile traffic percentage\n    const mobileVisitors = visitors.filter(v => \n      v.device.type.toLowerCase().includes('mobile') || \n      v.device.browser.toLowerCase().includes('mobile')\n    );\n    const mobilePercentage = Math.round((mobileVisitors.length / visitors.length) * 100);\n    \n    if (mobilePercentage > 60) {\n      insights.push({\n        id: '1',\n        type: 'TREND' as LeadPulseInsightType,\n        title: `Mobile traffic represents ${mobilePercentage}%`,\n        description: `${mobileVisitors.length} of ${visitors.length} visitors are using mobile devices`,\n        importance: mobilePercentage > 70 ? 'HIGH' as LeadPulseImportance : 'MEDIUM' as LeadPulseImportance,\n        createdAt: new Date().toISOString(),\n        recommendation: mobilePercentage > 70 ? \n          'Mobile-first optimization is critical for your audience' :\n          'Continue optimizing mobile experience'\n      });\n    }\n\n    // Calculate high-intent visitors\n    const highIntentVisitors = visitors.filter(v => v.intentScore > 70);\n    const activeHighIntentVisitors = highIntentVisitors.filter(v => {\n      const lastSeen = new Date(v.profile.lastSeen).getTime();\n      return now - lastSeen < 30 * 60 * 1000; // Last 30 minutes\n    });\n    \n    if (activeHighIntentVisitors.length > 0) {\n      insights.push({\n        id: '2',\n        type: 'OPPORTUNITY' as LeadPulseInsightType,\n        title: `${activeHighIntentVisitors.length} high-intent visitors active`,\n        description: `Visitors with >70% intent score currently browsing your site`,\n        importance: 'HIGH' as LeadPulseImportance,\n        createdAt: new Date().toISOString(),\n        recommendation: 'Engage with personalized offers or live chat immediately'\n      });\n    }\n\n    // Calculate page engagement patterns\n    const pricingPageVisitors = visitors.filter(v => \n      v.currentPage.toLowerCase().includes('pricing') ||\n      v.journey?.some(j => j.page.toLowerCase().includes('pricing'))\n    );\n    const pricingEngagementRate = Math.round((pricingPageVisitors.length / visitors.length) * 100);\n    \n    if (pricingEngagementRate > 20) {\n      insights.push({\n        id: '3',\n        type: 'BEHAVIOR' as LeadPulseInsightType,\n        title: `${pricingEngagementRate}% of visitors viewed pricing`,\n        description: `${pricingPageVisitors.length} visitors engaged with pricing content`,\n        importance: 'MEDIUM' as LeadPulseImportance,\n        createdAt: new Date().toISOString(),\n        recommendation: pricingEngagementRate > 30 ? \n          'High pricing interest - consider adding special offers' :\n          'Good pricing engagement - monitor conversion rates'\n      });\n    }\n\n    // Calculate bounce rate insights\n    const bouncedVisitors = visitors.filter(v => \n      v.pageViews <= 1 && v.sessionDuration < 30\n    );\n    const bounceRate = Math.round((bouncedVisitors.length / visitors.length) * 100);\n    \n    if (bounceRate > 40) {\n      insights.push({\n        id: '4',\n        type: 'ALERT' as LeadPulseInsightType,\n        title: `Bounce rate is ${bounceRate}%`,\n        description: `${bouncedVisitors.length} visitors left quickly without engagement`,\n        importance: bounceRate > 60 ? 'HIGH' as LeadPulseImportance : 'MEDIUM' as LeadPulseImportance,\n        createdAt: new Date().toISOString(),\n        recommendation: 'Review landing page content and loading speed'\n      });\n    }\n\n    // Return calculated insights or empty array\n    return insights.length > 0 ? insights : [];\n    \n  } catch (error) {\n    console.error('Failed to generate real insights:', error);\n    return []; // Return empty array instead of demo data\n  }\n});\n\n/**\n * Get visitor locations with MCP integration\n */\nexport const getMCPVisitorLocations = cache(async (authContext?: MCPAuthContext): Promise<VisitorLocation[]> => {\n  if (authContext) {\n    mcpDataProvider.setAuthContext(authContext);\n  }\n\n  const visitors = await mcpDataProvider.getRealTimeVisitors({\n    includeLocation: true,\n    limit: 50\n  });\n\n  // Aggregate locations from visitor data\n  const locationMap = new Map<string, {\n    city: string;\n    country: string;\n    count: number;\n    activeCount: number;\n    lastActive: Date;\n  }>();\n\n  visitors.forEach(visitor => {\n    const key = `${visitor.location.city}-${visitor.location.country}`;\n    const existing = locationMap.get(key);\n    const lastSeen = new Date(visitor.profile.lastSeen);\n    const isActive = Date.now() - lastSeen.getTime() < 300000; // 5 minutes\n\n    if (existing) {\n      existing.count++;\n      if (isActive) existing.activeCount++;\n      if (lastSeen > existing.lastActive) existing.lastActive = lastSeen;\n    } else {\n      locationMap.set(key, {\n        city: visitor.location.city,\n        country: visitor.location.country,\n        count: 1,\n        activeCount: isActive ? 1 : 0,\n        lastActive: lastSeen\n      });\n    }\n  });\n\n  // Convert to VisitorLocation format\n  return Array.from(locationMap.entries()).map(([key, location]) => ({\n    id: key,\n    city: location.city,\n    country: location.country,\n    isActive: location.activeCount > 0,\n    lastActive: formatLastActive(location.lastActive),\n    visitCount: location.count,\n    latitude: getCityLatitude(location.city),\n    longitude: getCityLongitude(location.city)\n  }));\n});\n\n/**\n * Helper functions\n */\nfunction formatLastActive(date: Date): string {\n  const now = new Date();\n  const diffMs = now.getTime() - date.getTime();\n  const diffMins = Math.floor(diffMs / 60000);\n  \n  if (diffMins < 1) return 'just now';\n  if (diffMins < 60) return `${diffMins} min ago`;\n  \n  const diffHours = Math.floor(diffMins / 60);\n  if (diffHours < 24) return `${diffHours}h ago`;\n  \n  const diffDays = Math.floor(diffHours / 24);\n  return `${diffDays}d ago`;\n}\n\nfunction mapActionToType(action: string): LeadPulseTouchpointType {\n  switch (action.toLowerCase()) {\n    case 'page_view': return 'PAGEVIEW';\n    case 'click': return 'CLICK';\n    case 'form_view': return 'FORM_VIEW';\n    case 'form_start': return 'FORM_START';\n    case 'form_submit': return 'FORM_SUBMIT';\n    case 'conversion': return 'CONVERSION';\n    default: return 'PAGEVIEW';\n  }\n}\n\nfunction getCityLatitude(city: string): number {\n  const coordinates: { [key: string]: number } = {\n    'Lagos': 6.5244,\n    'Abuja': 9.0765,\n    'Kano': 12.0022,\n    'Port Harcourt': 4.8156,\n    'Ibadan': 7.3775,\n    'Nairobi': -1.2921,\n    'Accra': 5.6037,\n    'Cape Town': -33.9249\n  };\n  return coordinates[city] || 0;\n}\n\nfunction getCityLongitude(city: string): number {\n  const coordinates: { [key: string]: number } = {\n    'Lagos': 3.3792,\n    'Abuja': 7.3986,\n    'Kano': 8.5919,\n    'Port Harcourt': 7.0498,\n    'Ibadan': 3.9470,\n    'Nairobi': 36.8219,\n    'Accra': -0.1870,\n    'Cape Town': 18.4241\n  };\n  return coordinates[city] || 0;\n}\n\nexport default mcpDataProvider;"],"names":["MCPLeadPulseDataProvider","getMCPVisitorData","getMCPVisitorInsights","getMCPVisitorLocations","constructor","authContext","mcpClient","MarketSageMCPClient","setAuthContext","getRealTimeVisitors","options","isEnabled","response","readResource","limit","includeLocation","includeDevice","success","data","transformMCPVisitorData","organizationId","getVisitorsFromDatabase","getFallbackVisitors","error","console","dbError","Error","prisma","sessions","mCPVisitorSessions","findMany","where","sessionStart","gte","Date","now","orderBy","take","map","session","index","id","sessionId","currentPage","timeOnPage","sessionDuration","pageViews","interactions","intentScore","isReturning","location","country","city","region","timezone","device","type","browser","os","screenSize","profile","totalSessions","totalPageViews","averageSessionDuration","preferredChannel","lastSeen","sessionEnd","toISOString","journey","heatmapData","getVisitorAnalytics","visitorId","getFallbackAnalytics","getVisitorBehavior","transformMCPAnalytics","getHighIntentVisitors","threshold","getFallbackHighIntentVisitors","getConversionFunnel","getFallbackFunnelData","getPageAnalytics","pageUrl","getFallbackPageAnalytics","mcpData","Array","isArray","visitor","behaviorAnalysis","behaviorPattern","predictions","recommendations","insights","cities","countries","browsers","devices","pages","from","length","_","i","Math","floor","random","timestamp","action","page","duration","element","clicks","scrollDepth","exitIntent","pageViewsPerSession","bounceRate","conversionRate","engagementScore","likelihoodToConvert","timeToConversion","nextBestAction","filter","slice","steps","step","name","visitors","dropOffRate","segments","includeSegments","overallConversion","dropOffPoints","undefined","metrics","uniqueVisitors","averageTimeOnPage","exitRate","clickThroughRate","includeHeatmap","clickMap","headerNav","primaryCTA","secondaryCTA","footer","scrollMap","attentionMap","hero","features","pricing","testimonials","mcpDataProvider","cache","mcpVisitors","fingerprint","lastActive","formatLastActive","pulseData","j","value","mapActionToType","url","title","mobileVisitors","v","toLowerCase","includes","mobilePercentage","round","push","description","importance","createdAt","recommendation","highIntentVisitors","activeHighIntentVisitors","getTime","pricingPageVisitors","some","pricingEngagementRate","bouncedVisitors","locationMap","Map","forEach","key","existing","get","isActive","count","activeCount","set","entries","visitCount","latitude","getCityLatitude","longitude","getCityLongitude","date","diffMs","diffMins","diffHours","diffDays","coordinates"],"mappings":"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"}