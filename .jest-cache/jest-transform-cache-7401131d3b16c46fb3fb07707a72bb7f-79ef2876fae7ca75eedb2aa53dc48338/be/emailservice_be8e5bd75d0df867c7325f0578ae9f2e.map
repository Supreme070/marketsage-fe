{"version":3,"sources":["/Users/supreme/Desktop/marketsage/src/lib/email-service.ts"],"sourcesContent":["/**\n * Email Service\n * \n * This module provides email sending functionality with integrated tracking\n * for opens and clicks. It works with the API client to communicate with\n * the backend email service.\n */\n\nimport { apiClient } from '@/lib/api';\nimport type {\n  EmailOptions,\n  EmailSendResult,\n  CampaignSendResult,\n  ContactInfo,\n} from '@/lib/api/types/communications';\nimport { logger } from '@/lib/logger';\nimport { addTrackingPixel, addLinkTracking } from '@/lib/trackingUtils';\nimport { randomUUID } from 'crypto';\n\n// Re-export types from API client for backward compatibility\nexport type {\n  EmailOptions,\n  EmailAttachment,\n  EmailSendResult,\n  CampaignSendResult,\n} from '@/lib/api/types/communications';\n\n/**\n * Apply contact-specific personalization to content\n * \n * @param content The email content (HTML or text)\n * @param contact The contact data for personalization\n * @returns The personalized content\n */\nfunction personalizeContent(content: string, contact: any): string {\n  if (!content || !contact) return content;\n  \n  // Replace contact variables like {{firstName}}, {{lastName}}, etc.\n  let personalized = content;\n  \n  Object.entries(contact).forEach(([key, value]) => {\n    if (typeof value === 'string') {\n      const regex = new RegExp(`{{${key}}}`, 'g');\n      personalized = personalized.replace(regex, value);\n    }\n  });\n  \n  // Remove any remaining template variables\n  personalized = personalized.replace(/{{[^{}]+}}/g, '');\n  \n  return personalized;\n}\n\n/**\n * Send an email to a single contact with tracking\n * \n * @param contact The contact to send to\n * @param campaignId The ID of the email campaign\n * @param options The email options\n * @param organizationId The organization ID for provider selection\n * @returns The result of the send operation\n */\nexport async function sendTrackedEmail(\n  contact: ContactInfo,\n  campaignId: string,\n  options: Omit<EmailOptions, 'to'>,\n  organizationId?: string\n): Promise<EmailSendResult> {\n  try {\n    if (!contact.email) {\n      logger.warn('Cannot send email to contact without email address', { \n        contactId: contact.id \n      });\n      return {\n        success: false,\n        error: new Error('Contact has no email address'),\n        provider: 'none',\n      };\n    }\n    \n    // Personalize the content\n    let personalizedHtml = personalizeContent(options.html, contact);\n    const personalizedText = options.text ? personalizeContent(options.text, contact) : undefined;\n    \n    // Add tracking pixel for open tracking\n    personalizedHtml = addTrackingPixel(personalizedHtml, contact.id, campaignId);\n    \n    // Add link tracking\n    personalizedHtml = addLinkTracking(personalizedHtml, contact.id, campaignId);\n    \n    // Enhance HTML with anti-spam structure\n    personalizedHtml = enhanceEmailForDeliverability(personalizedHtml);\n    \n    // Generate plain text version for better deliverability  \n    const finalPersonalizedText = personalizedText || generatePlainTextVersion(personalizedHtml, contact);\n    \n    // Send the email via API client\n    const result = await apiClient.communications.sendEmail(\n      contact,\n      campaignId,\n      {\n        ...options,\n        html: personalizedHtml,\n        text: finalPersonalizedText,\n      },\n      organizationId\n    );\n    \n    if (result.success) {\n      logger.info('Email sent and activity recorded', {\n        contactId: contact.id,\n        campaignId,\n        messageId: result.messageId,\n      });\n    }\n    \n    return result;\n  } catch (error) {\n    logger.error('Error sending tracked email', error);\n    return {\n      success: false,\n      error: error as Error,\n      provider: 'error',\n    };\n  }\n}\n\n/**\n * Send a campaign to multiple contacts with tracking\n * \n * @param campaignId The ID of the campaign\n * @param useOptimalSendTime Whether to use optimal send time for each contact\n * @returns Summary of the send operation\n */\nexport async function sendCampaign(\n  campaignId: string,\n  useOptimalSendTime = false\n): Promise<CampaignSendResult> {\n  try {\n    // Send the campaign via API client\n    const result = await apiClient.communications.sendCampaign({\n      campaignId,\n      useOptimalSendTime,\n    });\n    \n    return result;\n  } catch (error) {\n    logger.error('Error sending campaign', error);\n    throw error;\n  }\n}\n\n/**\n * Send email using organization-specific provider\n * \n * @param organizationId The organization ID\n * @param options The email options\n * @returns The result of the send operation\n */\nexport async function sendOrganizationEmail(\n  organizationId: string,\n  options: EmailOptions\n): Promise<EmailSendResult> {\n  try {\n    const result = await apiClient.communications.sendOrganizationEmail(\n      organizationId,\n      options\n    );\n    \n    return result;\n  } catch (error) {\n    logger.error('Error sending organization email:', { error, organizationId });\n    return {\n      success: false,\n      error: error instanceof Error ? error : new Error('Unknown error'),\n      provider: 'error'\n    };\n  }\n}\n\n// Enhance email HTML for better deliverability\nfunction enhanceEmailForDeliverability(html: string): string {\n  // If it's plain text or very simple HTML, wrap it properly\n  if (!html.includes('<html') && !html.includes('<body')) {\n    const enhancedHtml = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>MarketSage Email</title>\n    <style>\n        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px; }\n        .header { border-bottom: 2px solid #007bff; padding-bottom: 20px; margin-bottom: 20px; }\n        .footer { border-top: 1px solid #eee; padding-top: 20px; margin-top: 30px; font-size: 12px; color: #666; }\n        .content { margin: 20px 0; }\n        .unsubscribe { font-size: 11px; color: #999; text-align: center; margin-top: 20px; }\n        a { color: #007bff; text-decoration: none; }\n        a:hover { text-decoration: underline; }\n    </style>\n</head>\n<body>\n    <div class=\"header\">\n        <h2 style=\"color: #007bff; margin: 0;\">MarketSage</h2>\n        <p style=\"margin: 5px 0 0 0; color: #666;\">Smart Marketing Solutions for African Businesses</p>\n    </div>\n    <div class=\"content\">\n        ${html}\n    </div>\n    <div class=\"footer\">\n        <p><strong>MarketSage</strong><br>\n        Smart Marketing Solutions<br>\n        üìß info@marketsage.africa | üåê www.marketsage.africa</p>\n        \n        <div class=\"unsubscribe\">\n            <p>You received this email because you are subscribed to our marketing communications.<br>\n            <a href=\"mailto:unsubscribe@marketsage.africa?subject=Unsubscribe\">Click here to unsubscribe</a> | \n            <a href=\"mailto:info@marketsage.africa\">Contact us</a></p>\n        </div>\n    </div>\n</body>\n</html>`;\n    return enhancedHtml;\n  }\n  \n  // If it already has HTML structure, just add unsubscribe link if missing\n  if (!html.includes('unsubscribe')) {\n    const unsubscribeFooter = `\n    <div style=\"margin-top: 30px; padding-top: 20px; border-top: 1px solid #eee; font-size: 11px; color: #999; text-align: center;\">\n        <p>You received this email from MarketSage. \n        <a href=\"mailto:unsubscribe@marketsage.africa?subject=Unsubscribe\" style=\"color: #666;\">Unsubscribe</a> | \n        <a href=\"mailto:info@marketsage.africa\" style=\"color: #666;\">Contact us</a></p>\n    </div>\n    `;\n    \n    if (html.includes('</body>')) {\n      return html.replace('</body>', unsubscribeFooter + '</body>');\n    } else {\n      return html + unsubscribeFooter;\n    }\n  }\n  \n  return html;\n}\n\n// Generate plain text version from HTML for better deliverability\nfunction generatePlainTextVersion(html: string, contact: any): string {\n  // Remove HTML tags and convert to plain text\n  let plainText = html\n    .replace(/<style[^>]*>.*?<\\/style>/gis, '') // Remove style tags\n    .replace(/<script[^>]*>.*?<\\/script>/gis, '') // Remove script tags\n    .replace(/<[^>]+>/g, '') // Remove all HTML tags\n    .replace(/&nbsp;/g, ' ') // Replace non-breaking spaces\n    .replace(/&amp;/g, '&') // Replace encoded ampersands\n    .replace(/&lt;/g, '<') // Replace encoded less than\n    .replace(/&gt;/g, '>') // Replace encoded greater than\n    .replace(/&quot;/g, '\"') // Replace encoded quotes\n    .replace(/&#39;/g, \"'\") // Replace encoded apostrophes\n    .replace(/\\s+/g, ' ') // Replace multiple spaces with single space\n    .trim();\n\n  // Add better formatting for plain text\n  plainText = `\nDear ${contact.firstName || contact.name?.split(' ')[0] || 'there'},\n\nTransform Your Marketing Today! üéØ\n\nAre you ready to revolutionize your marketing strategy? MarketSage is the complete marketing automation platform designed specifically for African businesses like yours.\n\nüî• KEY FEATURES:\n\nüìß Email Marketing Mastery\nCreate stunning email campaigns with our visual editor. Advanced automation, A/B testing, and detailed analytics included.\n\nüì± SMS & WhatsApp Campaigns  \nReach your customers instantly with SMS and WhatsApp marketing. Perfect for time-sensitive promotions and updates.\n\nü§ñ AI-Powered Intelligence\nOur Supreme-AI engine provides intelligent insights, customer segmentation, and predictive analytics tailored for African markets.\n\nüìä LeadPulse Analytics\nReal-time visitor tracking, conversion analytics, and customer journey mapping to optimize your marketing funnel.\n\n‚ö° Workflow Automation\nBuild sophisticated marketing workflows with our drag-and-drop editor. Automate everything from lead nurturing to customer retention.\n\nüéâ EXCLUSIVE LAUNCH OFFER FOR ${contact.firstName || 'YOU'}!\n\nGet started with MarketSage today and receive 3 months FREE on any annual plan, plus personalized setup assistance!\n\nüëâ Claim Your Offer: https://marketsage.africa/pricing?ref=${contact.email}\n\nüåç BUILT FOR AFRICAN MARKETS:\n‚úì Multi-currency support (NGN, KES, ZAR, GHS)\n‚úì Local payment gateway integrations (Paystack, Flutterwave)  \n‚úì Cultural intelligence for personalized messaging\n‚úì Mobile-first design for high mobile penetration\n‚úì Multi-language support for diverse markets\n\nüìÖ Book Your Personal Demo: https://marketsage.africa/demo?ref=${contact.email}\n\nNo credit card required ‚Ä¢ 14-day free trial ‚Ä¢ Cancel anytime\n\nReady to Get Started, ${contact.firstName || 'friend'}?\n\nJoin thousands of African businesses already using MarketSage to grow their customer base and increase revenue.\n\nüìß info@marketsage.africa\nüåê www.marketsage.africa\n\nThis email was sent to ${contact.email}. Questions? Just reply to this email.\n\nTo unsubscribe: mailto:unsubscribe@marketsage.africa?subject=Unsubscribe\n  `.trim();\n\n  return plainText;\n}"],"names":["sendCampaign","sendOrganizationEmail","sendTrackedEmail","personalizeContent","content","contact","personalized","Object","entries","forEach","key","value","regex","RegExp","replace","campaignId","options","organizationId","email","logger","warn","contactId","id","success","error","Error","provider","personalizedHtml","html","personalizedText","text","undefined","addTrackingPixel","addLinkTracking","enhanceEmailForDeliverability","finalPersonalizedText","generatePlainTextVersion","result","apiClient","communications","sendEmail","info","messageId","useOptimalSendTime","includes","enhancedHtml","unsubscribeFooter","plainText","trim","firstName","name","split"],"mappings":"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"}