{"version":3,"sources":["/Users/supreme/Desktop/marketsage/src/lib/security/input-validation.ts"],"sourcesContent":["/**\n * Comprehensive Input Validation System\n * ====================================\n * Centralizes all input validation with security-first approach\n * Prevents SQL injection, XSS, and other injection attacks\n */\n\nimport { z } from 'zod';\nimport DOMPurify from 'isomorphic-dompurify';\nimport { logger } from '@/lib/logger';\n\n// Base validation schemas\nconst baseSchemas = {\n  // Email validation with strict format\n  email: z.string()\n    .email('Invalid email format')\n    .max(254, 'Email too long')\n    .refine(email => !email.includes('<script'), 'Invalid email format')\n    .refine(email => !email.includes('javascript:'), 'Invalid email format'),\n  \n  // Safe string validation (without default max to allow chaining)\n  safeString: z.string()\n    .refine(str => !/<script|javascript:|data:|vbscript:|onload=/i.test(str), 'Invalid content detected'),\n    \n  // Safe string with max length helper\n  safeStringWithMax: (maxLength: number, message?: string) => z.string()\n    .max(maxLength, message || `String too long (max ${maxLength})`)\n    .refine(str => !/<script|javascript:|data:|vbscript:|onload=/i.test(str), 'Invalid content detected'),\n  \n  // ID validation (UUID or CUID)\n  id: z.string()\n    .min(1, 'ID required')\n    .max(50, 'ID too long')\n    .regex(/^[a-zA-Z0-9_-]+$/, 'Invalid ID format'),\n  \n  // Name validation\n  name: z.string()\n    .min(1, 'Name required')\n    .max(100, 'Name too long')\n    .regex(/^[a-zA-Z0-9\\s\\-'.,]+$/, 'Invalid name format'),\n  \n  // Phone validation (international format)\n  phone: z.string()\n    .regex(/^\\+?[\\d\\s\\-()]{7,20}$/, 'Invalid phone format')\n    .optional(),\n  \n  // URL validation\n  url: z.string()\n    .url('Invalid URL format')\n    .max(2000, 'URL too long')\n    .refine(url => !url.includes('javascript:'), 'Invalid URL protocol')\n    .optional(),\n  \n  // Password validation\n  password: z.string()\n    .min(8, 'Password must be at least 8 characters')\n    .max(128, 'Password too long')\n    .regex(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]/, \n           'Password must contain uppercase, lowercase, number, and special character'),\n  \n  // Role validation\n  role: z.enum(['USER', 'ADMIN', 'IT_ADMIN', 'SUPER_ADMIN'], {\n    errorMap: () => ({ message: 'Invalid role' })\n  }),\n  \n  // Pagination validation\n  pagination: z.object({\n    page: z.coerce.number().min(1, 'Page must be at least 1').max(1000, 'Page too high').default(1),\n    limit: z.coerce.number().min(1, 'Limit must be at least 1').max(100, 'Limit too high').default(10),\n    sortBy: z.string().max(50, 'Sort field too long').optional(),\n    sortOrder: z.enum(['asc', 'desc']).default('asc')\n  }),\n  \n  // Search validation\n  search: z.string()\n    .max(200, 'Search term too long')\n    .refine(str => !/<script|javascript:|data:|vbscript:|onload=/i.test(str), 'Invalid search term')\n    .optional()\n};\n\n// Entity-specific validation schemas\nexport const validationSchemas = {\n  // User validation\n  user: {\n    create: z.object({\n      name: baseSchemas.name,\n      email: baseSchemas.email,\n      password: baseSchemas.password,\n      role: baseSchemas.role.default('USER'),\n      organizationId: baseSchemas.id.optional(),\n      company: baseSchemas.safeStringWithMax(100, 'Company name too long').optional()\n    }),\n    update: z.object({\n      id: baseSchemas.id,\n      name: baseSchemas.name.optional(),\n      email: baseSchemas.email.optional(),\n      role: baseSchemas.role.optional(),\n      isActive: z.boolean().optional(),\n      company: baseSchemas.safeStringWithMax(100, 'Company name too long').optional()\n    }),\n    delete: z.object({\n      id: baseSchemas.id\n    })\n  },\n  \n  // Organization validation\n  organization: {\n    create: z.object({\n      name: baseSchemas.name,\n      plan: z.enum(['FREE', 'BASIC', 'PROFESSIONAL', 'ENTERPRISE']).default('FREE'),\n      websiteUrl: baseSchemas.url,\n      address: baseSchemas.safeStringWithMax(500, 'Address too long').optional(),\n      billingEmail: baseSchemas.email.optional(),\n      billingName: baseSchemas.name.optional(),\n      billingAddress: baseSchemas.safeStringWithMax(500, 'Billing address too long').optional(),\n      vatNumber: baseSchemas.safeStringWithMax(50, 'VAT number too long').optional()\n    }),\n    update: z.object({\n      id: baseSchemas.id,\n      name: baseSchemas.name.optional(),\n      plan: z.enum(['FREE', 'BASIC', 'PROFESSIONAL', 'ENTERPRISE']).optional(),\n      websiteUrl: baseSchemas.url,\n      address: baseSchemas.safeStringWithMax(500, 'Address too long').optional(),\n      billingEmail: baseSchemas.email.optional(),\n      billingName: baseSchemas.name.optional(),\n      billingAddress: baseSchemas.safeStringWithMax(500, 'Billing address too long').optional(),\n      vatNumber: baseSchemas.safeStringWithMax(50, 'VAT number too long').optional()\n    })\n  },\n  \n  // Contact validation\n  contact: {\n    create: z.object({\n      firstName: baseSchemas.name,\n      lastName: baseSchemas.name,\n      email: baseSchemas.email,\n      phone: baseSchemas.phone,\n      company: baseSchemas.safeStringWithMax(100, 'Company name too long').optional(),\n      jobTitle: baseSchemas.safeStringWithMax(100, 'Job title too long').optional(),\n      tags: z.array(baseSchemas.safeStringWithMax(50, 'Tag too long')).max(10, 'Too many tags').optional(),\n      customFields: z.record(z.string().max(50, 'Field name too long'), z.any()).optional()\n    }),\n    update: z.object({\n      id: baseSchemas.id,\n      firstName: baseSchemas.name.optional(),\n      lastName: baseSchemas.name.optional(),\n      email: baseSchemas.email.optional(),\n      phone: baseSchemas.phone,\n      company: baseSchemas.safeStringWithMax(100, 'Company name too long').optional(),\n      jobTitle: baseSchemas.safeStringWithMax(100, 'Job title too long').optional(),\n      tags: z.array(baseSchemas.safeStringWithMax(50, 'Tag too long')).max(10, 'Too many tags').optional(),\n      customFields: z.record(z.string().max(50, 'Field name too long'), z.any()).optional(),\n      isActive: z.boolean().optional()\n    }),\n    bulkUpdate: z.object({\n      contactIds: z.array(baseSchemas.id).min(1, 'At least one contact required').max(1000, 'Too many contacts'),\n      updates: z.object({\n        tags: z.array(baseSchemas.safeStringWithMax(50, 'Tag too long')).max(10, 'Too many tags').optional(),\n        customFields: z.record(z.string().max(50, 'Field name too long'), z.any()).optional(),\n        isActive: z.boolean().optional()\n      })\n    })\n  },\n  \n  // Campaign validation\n  campaign: {\n    create: z.object({\n      name: baseSchemas.name,\n      subject: baseSchemas.safeStringWithMax(200, 'Subject too long'),\n      content: baseSchemas.safeStringWithMax(50000, 'Content too long'),\n      type: z.enum(['EMAIL', 'SMS', 'WHATSAPP']),\n      audienceType: z.enum(['ALL', 'SEGMENT', 'LIST', 'CUSTOM']),\n      audienceIds: z.array(baseSchemas.id).optional(),\n      scheduledAt: z.coerce.date().optional(),\n      fromName: baseSchemas.name.optional(),\n      fromEmail: baseSchemas.email.optional()\n    }),\n    update: z.object({\n      id: baseSchemas.id,\n      name: baseSchemas.name.optional(),\n      subject: baseSchemas.safeStringWithMax(200, 'Subject too long').optional(),\n      content: baseSchemas.safeStringWithMax(50000, 'Content too long').optional(),\n      status: z.enum(['DRAFT', 'SCHEDULED', 'SENDING', 'SENT', 'PAUSED', 'CANCELLED']).optional(),\n      scheduledAt: z.coerce.date().optional(),\n      fromName: baseSchemas.name.optional(),\n      fromEmail: baseSchemas.email.optional()\n    })\n  },\n  \n  // Task validation\n  task: {\n    create: z.object({\n      title: baseSchemas.safeStringWithMax(200, 'Title too long'),\n      description: baseSchemas.safeStringWithMax(5000, 'Description too long').optional(),\n      priority: z.enum(['LOW', 'MEDIUM', 'HIGH', 'URGENT']).default('MEDIUM'),\n      dueDate: z.coerce.date().optional(),\n      assigneeId: baseSchemas.id.optional(),\n      categoryId: baseSchemas.id.optional(),\n      tags: z.array(baseSchemas.safeStringWithMax(50, 'Tag too long')).max(10, 'Too many tags').optional()\n    }),\n    update: z.object({\n      id: baseSchemas.id,\n      title: baseSchemas.safeStringWithMax(200, 'Title too long').optional(),\n      description: baseSchemas.safeStringWithMax(5000, 'Description too long').optional(),\n      priority: z.enum(['LOW', 'MEDIUM', 'HIGH', 'URGENT']).optional(),\n      status: z.enum(['OPEN', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED']).optional(),\n      dueDate: z.coerce.date().optional(),\n      assigneeId: baseSchemas.id.optional(),\n      categoryId: baseSchemas.id.optional(),\n      tags: z.array(baseSchemas.safeStringWithMax(50, 'Tag too long')).max(10, 'Too many tags').optional()\n    })\n  },\n  \n  // AI Command validation\n  aiCommand: {\n    execute: z.object({\n      command: baseSchemas.safeStringWithMax(2000, 'Command too long'),\n      context: z.object({\n        businessContext: z.object({\n          industry: baseSchemas.safeStringWithMax(100, 'Industry too long').optional(),\n          market: baseSchemas.safeStringWithMax(100, 'Market too long').optional(),\n          organizationSize: baseSchemas.safeStringWithMax(50, 'Organization size too long').optional(),\n          currentGoals: z.array(baseSchemas.safeStringWithMax(200, 'Goal too long')).max(10, 'Too many goals').optional()\n        }).optional(),\n        userPreferences: z.object({\n          communicationStyle: z.enum(['FORMAL', 'CASUAL', 'PROFESSIONAL']).optional(),\n          riskTolerance: z.enum(['LOW', 'MEDIUM', 'HIGH']).optional(),\n          automationLevel: z.enum(['MANUAL', 'ASSISTED', 'AUTOMATIC']).optional()\n        }).optional()\n      }).optional(),\n      enableTaskExecution: z.boolean().default(false),\n      dryRun: z.boolean().default(false)\n    })\n  },\n  \n  // Common validation\n  common: {\n    pagination: baseSchemas.pagination,\n    search: baseSchemas.search,\n    id: baseSchemas.id,\n    ids: z.array(baseSchemas.id).min(1, 'At least one ID required').max(100, 'Too many IDs')\n  }\n};\n\n// Security validation functions\nexport class SecurityValidator {\n  /**\n   * Sanitize HTML content to prevent XSS\n   */\n  static sanitizeHtml(content: string): string {\n    return DOMPurify.sanitize(content, {\n      ALLOWED_TAGS: ['b', 'i', 'em', 'strong', 'p', 'br', 'ul', 'ol', 'li', 'a'],\n      ALLOWED_ATTR: ['href', 'target'],\n      ALLOW_DATA_ATTR: false\n    });\n  }\n  \n  /**\n   * Validate and sanitize user input\n   */\n  static validateInput<T>(schema: z.ZodSchema<T>, data: unknown, context?: string): {\n    success: boolean;\n    data?: T;\n    errors?: string[];\n  } {\n    try {\n      const result = schema.safeParse(data);\n      \n      if (!result.success) {\n        const errors = result.error.errors.map(err => \n          `${err.path.join('.')}: ${err.message}`\n        );\n        \n        logger.warn('Input validation failed', {\n          context,\n          errors,\n          inputType: typeof data\n        });\n        \n        return {\n          success: false,\n          errors\n        };\n      }\n      \n      return {\n        success: true,\n        data: result.data\n      };\n    } catch (error) {\n      logger.error('Input validation error', {\n        context,\n        error: error instanceof Error ? error.message : String(error)\n      });\n      \n      return {\n        success: false,\n        errors: ['Validation failed']\n      };\n    }\n  }\n  \n  /**\n   * Check for SQL injection patterns\n   */\n  static checkSqlInjection(input: string): boolean {\n    const sqlPatterns = [\n      /(\\b(SELECT|INSERT|UPDATE|DELETE|DROP|CREATE|ALTER|EXEC|UNION|SCRIPT)\\b)/i,\n      /(\\b(OR|AND)\\s+\\d+\\s*=\\s*\\d+)/i,\n      /['\";].*(-{2}|\\/\\*)/i,\n      /\\b(xp_|sp_|exec|execute)\\b/i\n    ];\n    \n    return sqlPatterns.some(pattern => pattern.test(input));\n  }\n  \n  /**\n   * Validate file upload security\n   */\n  static validateFileUpload(file: {\n    name: string;\n    size: number;\n    type: string;\n  }): {\n    valid: boolean;\n    error?: string;\n  } {\n    const allowedTypes = [\n      'image/jpeg',\n      'image/png',\n      'image/gif',\n      'image/webp',\n      'application/pdf',\n      'text/csv',\n      'application/vnd.ms-excel',\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    ];\n    \n    const maxSize = 10 * 1024 * 1024; // 10MB\n    \n    if (!allowedTypes.includes(file.type)) {\n      return {\n        valid: false,\n        error: 'File type not allowed'\n      };\n    }\n    \n    if (file.size > maxSize) {\n      return {\n        valid: false,\n        error: 'File size too large'\n      };\n    }\n    \n    // Check for double extensions\n    const nameParts = file.name.split('.');\n    if (nameParts.length > 2) {\n      return {\n        valid: false,\n        error: 'Invalid file name format'\n      };\n    }\n    \n    return { valid: true };\n  }\n  \n  /**\n   * Rate limiting validation\n   */\n  static validateRateLimit(identifier: string, action: string, limit = 100): {\n    allowed: boolean;\n    resetTime?: number;\n  } {\n    // This would integrate with a rate limiting service\n    // For now, returning allowed=true as placeholder\n    return { allowed: true };\n  }\n}\n\n// Export validation helper\nexport function validateRequest<T>(\n  schema: z.ZodSchema<T>,\n  data: unknown,\n  context?: string\n) {\n  return SecurityValidator.validateInput(schema, data, context);\n}\n\n// Export commonly used schemas\nexport const commonSchemas = baseSchemas;"],"names":["SecurityValidator","commonSchemas","validateRequest","validationSchemas","baseSchemas","email","z","string","max","refine","includes","safeString","str","test","safeStringWithMax","maxLength","message","id","min","regex","name","phone","optional","url","password","role","enum","errorMap","pagination","object","page","coerce","number","default","limit","sortBy","sortOrder","search","user","create","organizationId","company","update","isActive","boolean","delete","organization","plan","websiteUrl","address","billingEmail","billingName","billingAddress","vatNumber","contact","firstName","lastName","jobTitle","tags","array","customFields","record","any","bulkUpdate","contactIds","updates","campaign","subject","content","type","audienceType","audienceIds","scheduledAt","date","fromName","fromEmail","status","task","title","description","priority","dueDate","assigneeId","categoryId","aiCommand","execute","command","context","businessContext","industry","market","organizationSize","currentGoals","userPreferences","communicationStyle","riskTolerance","automationLevel","enableTaskExecution","dryRun","common","ids","sanitizeHtml","DOMPurify","sanitize","ALLOWED_TAGS","ALLOWED_ATTR","ALLOW_DATA_ATTR","validateInput","schema","data","result","safeParse","success","errors","error","map","err","path","join","logger","warn","inputType","Error","String","checkSqlInjection","input","sqlPatterns","some","pattern","validateFileUpload","file","allowedTypes","maxSize","valid","size","nameParts","split","length","validateRateLimit","identifier","action","allowed"],"mappings":"AAAA;;;;;CAKC;;;;;;;;;;;IAgPYA,iBAAiB;eAAjBA;;IAgJAC,aAAa;eAAbA;;IATGC,eAAe;eAAfA;;IA3SHC,iBAAiB;eAAjBA;;;qBA1EK;4EACI;wBACC;;;;;;AAEvB,0BAA0B;AAC1B,MAAMC,cAAc;IAClB,sCAAsC;IACtCC,OAAOC,MAAC,CAACC,MAAM,GACZF,KAAK,CAAC,wBACNG,GAAG,CAAC,KAAK,kBACTC,MAAM,CAACJ,CAAAA,QAAS,CAACA,MAAMK,QAAQ,CAAC,YAAY,wBAC5CD,MAAM,CAACJ,CAAAA,QAAS,CAACA,MAAMK,QAAQ,CAAC,gBAAgB;IAEnD,iEAAiE;IACjEC,YAAYL,MAAC,CAACC,MAAM,GACjBE,MAAM,CAACG,CAAAA,MAAO,CAAC,+CAA+CC,IAAI,CAACD,MAAM;IAE5E,qCAAqC;IACrCE,mBAAmB,CAACC,WAAmBC,UAAqBV,MAAC,CAACC,MAAM,GACjEC,GAAG,CAACO,WAAWC,WAAW,CAAC,qBAAqB,EAAED,UAAU,CAAC,CAAC,EAC9DN,MAAM,CAACG,CAAAA,MAAO,CAAC,+CAA+CC,IAAI,CAACD,MAAM;IAE5E,+BAA+B;IAC/BK,IAAIX,MAAC,CAACC,MAAM,GACTW,GAAG,CAAC,GAAG,eACPV,GAAG,CAAC,IAAI,eACRW,KAAK,CAAC,oBAAoB;IAE7B,kBAAkB;IAClBC,MAAMd,MAAC,CAACC,MAAM,GACXW,GAAG,CAAC,GAAG,iBACPV,GAAG,CAAC,KAAK,iBACTW,KAAK,CAAC,yBAAyB;IAElC,0CAA0C;IAC1CE,OAAOf,MAAC,CAACC,MAAM,GACZY,KAAK,CAAC,yBAAyB,wBAC/BG,QAAQ;IAEX,iBAAiB;IACjBC,KAAKjB,MAAC,CAACC,MAAM,GACVgB,GAAG,CAAC,sBACJf,GAAG,CAAC,MAAM,gBACVC,MAAM,CAACc,CAAAA,MAAO,CAACA,IAAIb,QAAQ,CAAC,gBAAgB,wBAC5CY,QAAQ;IAEX,sBAAsB;IACtBE,UAAUlB,MAAC,CAACC,MAAM,GACfW,GAAG,CAAC,GAAG,0CACPV,GAAG,CAAC,KAAK,qBACTW,KAAK,CAAC,mEACA;IAET,kBAAkB;IAClBM,MAAMnB,MAAC,CAACoB,IAAI,CAAC;QAAC;QAAQ;QAAS;QAAY;KAAc,EAAE;QACzDC,UAAU,IAAO,CAAA;gBAAEX,SAAS;YAAe,CAAA;IAC7C;IAEA,wBAAwB;IACxBY,YAAYtB,MAAC,CAACuB,MAAM,CAAC;QACnBC,MAAMxB,MAAC,CAACyB,MAAM,CAACC,MAAM,GAAGd,GAAG,CAAC,GAAG,2BAA2BV,GAAG,CAAC,MAAM,iBAAiByB,OAAO,CAAC;QAC7FC,OAAO5B,MAAC,CAACyB,MAAM,CAACC,MAAM,GAAGd,GAAG,CAAC,GAAG,4BAA4BV,GAAG,CAAC,KAAK,kBAAkByB,OAAO,CAAC;QAC/FE,QAAQ7B,MAAC,CAACC,MAAM,GAAGC,GAAG,CAAC,IAAI,uBAAuBc,QAAQ;QAC1Dc,WAAW9B,MAAC,CAACoB,IAAI,CAAC;YAAC;YAAO;SAAO,EAAEO,OAAO,CAAC;IAC7C;IAEA,oBAAoB;IACpBI,QAAQ/B,MAAC,CAACC,MAAM,GACbC,GAAG,CAAC,KAAK,wBACTC,MAAM,CAACG,CAAAA,MAAO,CAAC,+CAA+CC,IAAI,CAACD,MAAM,uBACzEU,QAAQ;AACb;AAGO,MAAMnB,oBAAoB;IAC/B,kBAAkB;IAClBmC,MAAM;QACJC,QAAQjC,MAAC,CAACuB,MAAM,CAAC;YACfT,MAAMhB,YAAYgB,IAAI;YACtBf,OAAOD,YAAYC,KAAK;YACxBmB,UAAUpB,YAAYoB,QAAQ;YAC9BC,MAAMrB,YAAYqB,IAAI,CAACQ,OAAO,CAAC;YAC/BO,gBAAgBpC,YAAYa,EAAE,CAACK,QAAQ;YACvCmB,SAASrC,YAAYU,iBAAiB,CAAC,KAAK,yBAAyBQ,QAAQ;QAC/E;QACAoB,QAAQpC,MAAC,CAACuB,MAAM,CAAC;YACfZ,IAAIb,YAAYa,EAAE;YAClBG,MAAMhB,YAAYgB,IAAI,CAACE,QAAQ;YAC/BjB,OAAOD,YAAYC,KAAK,CAACiB,QAAQ;YACjCG,MAAMrB,YAAYqB,IAAI,CAACH,QAAQ;YAC/BqB,UAAUrC,MAAC,CAACsC,OAAO,GAAGtB,QAAQ;YAC9BmB,SAASrC,YAAYU,iBAAiB,CAAC,KAAK,yBAAyBQ,QAAQ;QAC/E;QACAuB,QAAQvC,MAAC,CAACuB,MAAM,CAAC;YACfZ,IAAIb,YAAYa,EAAE;QACpB;IACF;IAEA,0BAA0B;IAC1B6B,cAAc;QACZP,QAAQjC,MAAC,CAACuB,MAAM,CAAC;YACfT,MAAMhB,YAAYgB,IAAI;YACtB2B,MAAMzC,MAAC,CAACoB,IAAI,CAAC;gBAAC;gBAAQ;gBAAS;gBAAgB;aAAa,EAAEO,OAAO,CAAC;YACtEe,YAAY5C,YAAYmB,GAAG;YAC3B0B,SAAS7C,YAAYU,iBAAiB,CAAC,KAAK,oBAAoBQ,QAAQ;YACxE4B,cAAc9C,YAAYC,KAAK,CAACiB,QAAQ;YACxC6B,aAAa/C,YAAYgB,IAAI,CAACE,QAAQ;YACtC8B,gBAAgBhD,YAAYU,iBAAiB,CAAC,KAAK,4BAA4BQ,QAAQ;YACvF+B,WAAWjD,YAAYU,iBAAiB,CAAC,IAAI,uBAAuBQ,QAAQ;QAC9E;QACAoB,QAAQpC,MAAC,CAACuB,MAAM,CAAC;YACfZ,IAAIb,YAAYa,EAAE;YAClBG,MAAMhB,YAAYgB,IAAI,CAACE,QAAQ;YAC/ByB,MAAMzC,MAAC,CAACoB,IAAI,CAAC;gBAAC;gBAAQ;gBAAS;gBAAgB;aAAa,EAAEJ,QAAQ;YACtE0B,YAAY5C,YAAYmB,GAAG;YAC3B0B,SAAS7C,YAAYU,iBAAiB,CAAC,KAAK,oBAAoBQ,QAAQ;YACxE4B,cAAc9C,YAAYC,KAAK,CAACiB,QAAQ;YACxC6B,aAAa/C,YAAYgB,IAAI,CAACE,QAAQ;YACtC8B,gBAAgBhD,YAAYU,iBAAiB,CAAC,KAAK,4BAA4BQ,QAAQ;YACvF+B,WAAWjD,YAAYU,iBAAiB,CAAC,IAAI,uBAAuBQ,QAAQ;QAC9E;IACF;IAEA,qBAAqB;IACrBgC,SAAS;QACPf,QAAQjC,MAAC,CAACuB,MAAM,CAAC;YACf0B,WAAWnD,YAAYgB,IAAI;YAC3BoC,UAAUpD,YAAYgB,IAAI;YAC1Bf,OAAOD,YAAYC,KAAK;YACxBgB,OAAOjB,YAAYiB,KAAK;YACxBoB,SAASrC,YAAYU,iBAAiB,CAAC,KAAK,yBAAyBQ,QAAQ;YAC7EmC,UAAUrD,YAAYU,iBAAiB,CAAC,KAAK,sBAAsBQ,QAAQ;YAC3EoC,MAAMpD,MAAC,CAACqD,KAAK,CAACvD,YAAYU,iBAAiB,CAAC,IAAI,iBAAiBN,GAAG,CAAC,IAAI,iBAAiBc,QAAQ;YAClGsC,cAActD,MAAC,CAACuD,MAAM,CAACvD,MAAC,CAACC,MAAM,GAAGC,GAAG,CAAC,IAAI,wBAAwBF,MAAC,CAACwD,GAAG,IAAIxC,QAAQ;QACrF;QACAoB,QAAQpC,MAAC,CAACuB,MAAM,CAAC;YACfZ,IAAIb,YAAYa,EAAE;YAClBsC,WAAWnD,YAAYgB,IAAI,CAACE,QAAQ;YACpCkC,UAAUpD,YAAYgB,IAAI,CAACE,QAAQ;YACnCjB,OAAOD,YAAYC,KAAK,CAACiB,QAAQ;YACjCD,OAAOjB,YAAYiB,KAAK;YACxBoB,SAASrC,YAAYU,iBAAiB,CAAC,KAAK,yBAAyBQ,QAAQ;YAC7EmC,UAAUrD,YAAYU,iBAAiB,CAAC,KAAK,sBAAsBQ,QAAQ;YAC3EoC,MAAMpD,MAAC,CAACqD,KAAK,CAACvD,YAAYU,iBAAiB,CAAC,IAAI,iBAAiBN,GAAG,CAAC,IAAI,iBAAiBc,QAAQ;YAClGsC,cAActD,MAAC,CAACuD,MAAM,CAACvD,MAAC,CAACC,MAAM,GAAGC,GAAG,CAAC,IAAI,wBAAwBF,MAAC,CAACwD,GAAG,IAAIxC,QAAQ;YACnFqB,UAAUrC,MAAC,CAACsC,OAAO,GAAGtB,QAAQ;QAChC;QACAyC,YAAYzD,MAAC,CAACuB,MAAM,CAAC;YACnBmC,YAAY1D,MAAC,CAACqD,KAAK,CAACvD,YAAYa,EAAE,EAAEC,GAAG,CAAC,GAAG,iCAAiCV,GAAG,CAAC,MAAM;YACtFyD,SAAS3D,MAAC,CAACuB,MAAM,CAAC;gBAChB6B,MAAMpD,MAAC,CAACqD,KAAK,CAACvD,YAAYU,iBAAiB,CAAC,IAAI,iBAAiBN,GAAG,CAAC,IAAI,iBAAiBc,QAAQ;gBAClGsC,cAActD,MAAC,CAACuD,MAAM,CAACvD,MAAC,CAACC,MAAM,GAAGC,GAAG,CAAC,IAAI,wBAAwBF,MAAC,CAACwD,GAAG,IAAIxC,QAAQ;gBACnFqB,UAAUrC,MAAC,CAACsC,OAAO,GAAGtB,QAAQ;YAChC;QACF;IACF;IAEA,sBAAsB;IACtB4C,UAAU;QACR3B,QAAQjC,MAAC,CAACuB,MAAM,CAAC;YACfT,MAAMhB,YAAYgB,IAAI;YACtB+C,SAAS/D,YAAYU,iBAAiB,CAAC,KAAK;YAC5CsD,SAAShE,YAAYU,iBAAiB,CAAC,OAAO;YAC9CuD,MAAM/D,MAAC,CAACoB,IAAI,CAAC;gBAAC;gBAAS;gBAAO;aAAW;YACzC4C,cAAchE,MAAC,CAACoB,IAAI,CAAC;gBAAC;gBAAO;gBAAW;gBAAQ;aAAS;YACzD6C,aAAajE,MAAC,CAACqD,KAAK,CAACvD,YAAYa,EAAE,EAAEK,QAAQ;YAC7CkD,aAAalE,MAAC,CAACyB,MAAM,CAAC0C,IAAI,GAAGnD,QAAQ;YACrCoD,UAAUtE,YAAYgB,IAAI,CAACE,QAAQ;YACnCqD,WAAWvE,YAAYC,KAAK,CAACiB,QAAQ;QACvC;QACAoB,QAAQpC,MAAC,CAACuB,MAAM,CAAC;YACfZ,IAAIb,YAAYa,EAAE;YAClBG,MAAMhB,YAAYgB,IAAI,CAACE,QAAQ;YAC/B6C,SAAS/D,YAAYU,iBAAiB,CAAC,KAAK,oBAAoBQ,QAAQ;YACxE8C,SAAShE,YAAYU,iBAAiB,CAAC,OAAO,oBAAoBQ,QAAQ;YAC1EsD,QAAQtE,MAAC,CAACoB,IAAI,CAAC;gBAAC;gBAAS;gBAAa;gBAAW;gBAAQ;gBAAU;aAAY,EAAEJ,QAAQ;YACzFkD,aAAalE,MAAC,CAACyB,MAAM,CAAC0C,IAAI,GAAGnD,QAAQ;YACrCoD,UAAUtE,YAAYgB,IAAI,CAACE,QAAQ;YACnCqD,WAAWvE,YAAYC,KAAK,CAACiB,QAAQ;QACvC;IACF;IAEA,kBAAkB;IAClBuD,MAAM;QACJtC,QAAQjC,MAAC,CAACuB,MAAM,CAAC;YACfiD,OAAO1E,YAAYU,iBAAiB,CAAC,KAAK;YAC1CiE,aAAa3E,YAAYU,iBAAiB,CAAC,MAAM,wBAAwBQ,QAAQ;YACjF0D,UAAU1E,MAAC,CAACoB,IAAI,CAAC;gBAAC;gBAAO;gBAAU;gBAAQ;aAAS,EAAEO,OAAO,CAAC;YAC9DgD,SAAS3E,MAAC,CAACyB,MAAM,CAAC0C,IAAI,GAAGnD,QAAQ;YACjC4D,YAAY9E,YAAYa,EAAE,CAACK,QAAQ;YACnC6D,YAAY/E,YAAYa,EAAE,CAACK,QAAQ;YACnCoC,MAAMpD,MAAC,CAACqD,KAAK,CAACvD,YAAYU,iBAAiB,CAAC,IAAI,iBAAiBN,GAAG,CAAC,IAAI,iBAAiBc,QAAQ;QACpG;QACAoB,QAAQpC,MAAC,CAACuB,MAAM,CAAC;YACfZ,IAAIb,YAAYa,EAAE;YAClB6D,OAAO1E,YAAYU,iBAAiB,CAAC,KAAK,kBAAkBQ,QAAQ;YACpEyD,aAAa3E,YAAYU,iBAAiB,CAAC,MAAM,wBAAwBQ,QAAQ;YACjF0D,UAAU1E,MAAC,CAACoB,IAAI,CAAC;gBAAC;gBAAO;gBAAU;gBAAQ;aAAS,EAAEJ,QAAQ;YAC9DsD,QAAQtE,MAAC,CAACoB,IAAI,CAAC;gBAAC;gBAAQ;gBAAe;gBAAa;aAAY,EAAEJ,QAAQ;YAC1E2D,SAAS3E,MAAC,CAACyB,MAAM,CAAC0C,IAAI,GAAGnD,QAAQ;YACjC4D,YAAY9E,YAAYa,EAAE,CAACK,QAAQ;YACnC6D,YAAY/E,YAAYa,EAAE,CAACK,QAAQ;YACnCoC,MAAMpD,MAAC,CAACqD,KAAK,CAACvD,YAAYU,iBAAiB,CAAC,IAAI,iBAAiBN,GAAG,CAAC,IAAI,iBAAiBc,QAAQ;QACpG;IACF;IAEA,wBAAwB;IACxB8D,WAAW;QACTC,SAAS/E,MAAC,CAACuB,MAAM,CAAC;YAChByD,SAASlF,YAAYU,iBAAiB,CAAC,MAAM;YAC7CyE,SAASjF,MAAC,CAACuB,MAAM,CAAC;gBAChB2D,iBAAiBlF,MAAC,CAACuB,MAAM,CAAC;oBACxB4D,UAAUrF,YAAYU,iBAAiB,CAAC,KAAK,qBAAqBQ,QAAQ;oBAC1EoE,QAAQtF,YAAYU,iBAAiB,CAAC,KAAK,mBAAmBQ,QAAQ;oBACtEqE,kBAAkBvF,YAAYU,iBAAiB,CAAC,IAAI,8BAA8BQ,QAAQ;oBAC1FsE,cAActF,MAAC,CAACqD,KAAK,CAACvD,YAAYU,iBAAiB,CAAC,KAAK,kBAAkBN,GAAG,CAAC,IAAI,kBAAkBc,QAAQ;gBAC/G,GAAGA,QAAQ;gBACXuE,iBAAiBvF,MAAC,CAACuB,MAAM,CAAC;oBACxBiE,oBAAoBxF,MAAC,CAACoB,IAAI,CAAC;wBAAC;wBAAU;wBAAU;qBAAe,EAAEJ,QAAQ;oBACzEyE,eAAezF,MAAC,CAACoB,IAAI,CAAC;wBAAC;wBAAO;wBAAU;qBAAO,EAAEJ,QAAQ;oBACzD0E,iBAAiB1F,MAAC,CAACoB,IAAI,CAAC;wBAAC;wBAAU;wBAAY;qBAAY,EAAEJ,QAAQ;gBACvE,GAAGA,QAAQ;YACb,GAAGA,QAAQ;YACX2E,qBAAqB3F,MAAC,CAACsC,OAAO,GAAGX,OAAO,CAAC;YACzCiE,QAAQ5F,MAAC,CAACsC,OAAO,GAAGX,OAAO,CAAC;QAC9B;IACF;IAEA,oBAAoB;IACpBkE,QAAQ;QACNvE,YAAYxB,YAAYwB,UAAU;QAClCS,QAAQjC,YAAYiC,MAAM;QAC1BpB,IAAIb,YAAYa,EAAE;QAClBmF,KAAK9F,MAAC,CAACqD,KAAK,CAACvD,YAAYa,EAAE,EAAEC,GAAG,CAAC,GAAG,4BAA4BV,GAAG,CAAC,KAAK;IAC3E;AACF;AAGO,MAAMR;IACX;;GAEC,GACD,OAAOqG,aAAajC,OAAe,EAAU;QAC3C,OAAOkC,4BAAS,CAACC,QAAQ,CAACnC,SAAS;YACjCoC,cAAc;gBAAC;gBAAK;gBAAK;gBAAM;gBAAU;gBAAK;gBAAM;gBAAM;gBAAM;gBAAM;aAAI;YAC1EC,cAAc;gBAAC;gBAAQ;aAAS;YAChCC,iBAAiB;QACnB;IACF;IAEA;;GAEC,GACD,OAAOC,cAAiBC,MAAsB,EAAEC,IAAa,EAAEtB,OAAgB,EAI7E;QACA,IAAI;YACF,MAAMuB,SAASF,OAAOG,SAAS,CAACF;YAEhC,IAAI,CAACC,OAAOE,OAAO,EAAE;gBACnB,MAAMC,SAASH,OAAOI,KAAK,CAACD,MAAM,CAACE,GAAG,CAACC,CAAAA,MACrC,GAAGA,IAAIC,IAAI,CAACC,IAAI,CAAC,KAAK,EAAE,EAAEF,IAAIpG,OAAO,EAAE;gBAGzCuG,cAAM,CAACC,IAAI,CAAC,2BAA2B;oBACrCjC;oBACA0B;oBACAQ,WAAW,OAAOZ;gBACpB;gBAEA,OAAO;oBACLG,SAAS;oBACTC;gBACF;YACF;YAEA,OAAO;gBACLD,SAAS;gBACTH,MAAMC,OAAOD,IAAI;YACnB;QACF,EAAE,OAAOK,OAAO;YACdK,cAAM,CAACL,KAAK,CAAC,0BAA0B;gBACrC3B;gBACA2B,OAAOA,iBAAiBQ,QAAQR,MAAMlG,OAAO,GAAG2G,OAAOT;YACzD;YAEA,OAAO;gBACLF,SAAS;gBACTC,QAAQ;oBAAC;iBAAoB;YAC/B;QACF;IACF;IAEA;;GAEC,GACD,OAAOW,kBAAkBC,KAAa,EAAW;QAC/C,MAAMC,cAAc;YAClB;YACA;YACA;YACA;SACD;QAED,OAAOA,YAAYC,IAAI,CAACC,CAAAA,UAAWA,QAAQnH,IAAI,CAACgH;IAClD;IAEA;;GAEC,GACD,OAAOI,mBAAmBC,IAIzB,EAGC;QACA,MAAMC,eAAe;YACnB;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QAED,MAAMC,UAAU,KAAK,OAAO,MAAM,OAAO;QAEzC,IAAI,CAACD,aAAazH,QAAQ,CAACwH,KAAK7D,IAAI,GAAG;YACrC,OAAO;gBACLgE,OAAO;gBACPnB,OAAO;YACT;QACF;QAEA,IAAIgB,KAAKI,IAAI,GAAGF,SAAS;YACvB,OAAO;gBACLC,OAAO;gBACPnB,OAAO;YACT;QACF;QAEA,8BAA8B;QAC9B,MAAMqB,YAAYL,KAAK9G,IAAI,CAACoH,KAAK,CAAC;QAClC,IAAID,UAAUE,MAAM,GAAG,GAAG;YACxB,OAAO;gBACLJ,OAAO;gBACPnB,OAAO;YACT;QACF;QAEA,OAAO;YAAEmB,OAAO;QAAK;IACvB;IAEA;;GAEC,GACD,OAAOK,kBAAkBC,UAAkB,EAAEC,MAAc,EAAE1G,QAAQ,GAAG,EAGtE;QACA,oDAAoD;QACpD,iDAAiD;QACjD,OAAO;YAAE2G,SAAS;QAAK;IACzB;AACF;AAGO,SAAS3I,gBACd0G,MAAsB,EACtBC,IAAa,EACbtB,OAAgB;IAEhB,OAAOvF,kBAAkB2G,aAAa,CAACC,QAAQC,MAAMtB;AACvD;AAGO,MAAMtF,gBAAgBG"}