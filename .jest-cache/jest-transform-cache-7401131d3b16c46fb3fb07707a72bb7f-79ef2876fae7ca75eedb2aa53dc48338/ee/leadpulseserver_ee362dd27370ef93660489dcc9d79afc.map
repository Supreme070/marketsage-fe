{"version":3,"sources":["/Users/supreme/Desktop/marketsage/src/mcp/servers/leadpulse-server.ts"],"sourcesContent":["/**\n * LeadPulse MCP Server for MarketSage\n * \n * This server provides read-only access to visitor intelligence data,\n * behavioral analytics, and conversion tracking through the MCP protocol.\n */\n\nimport { z } from 'zod';\nimport { BaseMCPServer } from './base-mcp-server';\nimport { \n  type MCPAuthContext, \n  type MCPServerConfig,\n  LeadPulseQuerySchema,\n  type LeadPulseQuery,\n  VisitorSession,\n  MCPAuthorizationError,\n  MCPValidationError\n} from '../types/mcp-types';\n\nimport { prisma } from '../../lib/db/prisma';\nimport { defaultMCPConfig } from '../config/mcp-config';\n\nexport class LeadPulseMCPServer extends BaseMCPServer {\n  constructor(config?: Partial<MCPServerConfig>) {\n    super({\n      ...defaultMCPConfig.servers.leadpulse,\n      ...config\n    });\n  }\n\n  /**\n   * List available LeadPulse resources\n   */\n  protected async listResources(authContext: MCPAuthContext): Promise<any[]> {\n    const resources = [\n      {\n        uri: \"leadpulse://visitors\",\n        name: \"Visitor Data\",\n        description: \"Access to visitor sessions and behavioral data\",\n        mimeType: \"application/json\"\n      },\n      {\n        uri: \"leadpulse://sessions\",\n        name: \"Session Data\",\n        description: \"Access to detailed visitor session information\",\n        mimeType: \"application/json\"\n      },\n      {\n        uri: \"leadpulse://heatmaps\",\n        name: \"Heatmap Data\",\n        description: \"Access to page heatmap and interaction data\",\n        mimeType: \"application/json\"\n      },\n      {\n        uri: \"leadpulse://journeys\",\n        name: \"Customer Journeys\",\n        description: \"Access to customer journey and conversion paths\",\n        mimeType: \"application/json\"\n      },\n      {\n        uri: \"leadpulse://conversions\",\n        name: \"Conversion Data\",\n        description: \"Access to conversion events and funnel analytics\",\n        mimeType: \"application/json\"\n      },\n      {\n        uri: \"leadpulse://analytics\",\n        name: \"Behavioral Analytics\",\n        description: \"Access to visitor behavior analytics and insights\",\n        mimeType: \"application/json\"\n      }\n    ];\n\n    // Filter resources based on permissions\n    if (!authContext.permissions.includes('*') && !authContext.permissions.includes('read:org')) {\n      // Users can only access basic visitor data\n      return resources.filter(r => r.uri.includes('visitors') || r.uri.includes('sessions'));\n    }\n\n    return resources;\n  }\n\n  /**\n   * Read LeadPulse resource\n   */\n  protected async readResource(uri: string, authContext: MCPAuthContext): Promise<any> {\n    const url = new URL(uri);\n    const path = url.pathname;\n    const searchParams = url.searchParams;\n\n    // Parse query parameters\n    const queryParams = Object.fromEntries(searchParams.entries());\n    const validatedQuery = LeadPulseQuerySchema.parse({\n      ...queryParams,\n      organizationId: authContext.organizationId, // Always use user's org\n      limit: queryParams.limit ? Number.parseInt(queryParams.limit) : 10,\n      offset: queryParams.offset ? Number.parseInt(queryParams.offset) : 0,\n      includeHeatmap: queryParams.includeHeatmap === 'true',\n      includeJourney: queryParams.includeJourney === 'true'\n    });\n\n    switch (path) {\n      case '/visitors':\n        return await this.getVisitorData(validatedQuery, authContext);\n      case '/sessions':\n        return await this.getSessionData(validatedQuery, authContext);\n      case '/heatmaps':\n        return await this.getHeatmapData(validatedQuery, authContext);\n      case '/journeys':\n        return await this.getJourneyData(validatedQuery, authContext);\n      case '/conversions':\n        return await this.getConversionData(validatedQuery, authContext);\n      case '/analytics':\n        return await this.getAnalyticsData(validatedQuery, authContext);\n      default:\n        throw new MCPValidationError(`Unknown resource path: ${path}`);\n    }\n  }\n\n  /**\n   * List available LeadPulse tools\n   */\n  protected async listTools(authContext: MCPAuthContext): Promise<any[]> {\n    const tools = [\n      {\n        name: \"track_visitor\",\n        description: \"Get visitor tracking information and behavior\",\n        inputSchema: {\n          type: \"object\",\n          properties: {\n            visitorId: {\n              type: \"string\",\n              description: \"Visitor ID to track\"\n            },\n            includeJourney: {\n              type: \"boolean\",\n              description: \"Include customer journey data\",\n              default: true\n            },\n            includeHeatmap: {\n              type: \"boolean\", \n              description: \"Include heatmap interaction data\",\n              default: false\n            }\n          },\n          required: [\"visitorId\"]\n        }\n      },\n      {\n        name: \"analyze_visitor_behavior\",\n        description: \"Analyze visitor behavior patterns and generate insights\",\n        inputSchema: {\n          type: \"object\",\n          properties: {\n            visitorId: {\n              type: \"string\",\n              description: \"Visitor ID to analyze\"\n            },\n            sessionId: {\n              type: \"string\",\n              description: \"Specific session ID (optional)\"\n            },\n            timeRange: {\n              type: \"string\",\n              enum: [\"1h\", \"1d\", \"7d\", \"30d\"],\n              description: \"Time range for analysis\",\n              default: \"7d\"\n            }\n          },\n          required: [\"visitorId\"]\n        }\n      },\n      {\n        name: \"get_conversion_funnel\",\n        description: \"Get conversion funnel data and drop-off points\",\n        inputSchema: {\n          type: \"object\",\n          properties: {\n            funnelId: {\n              type: \"string\",\n              description: \"Funnel ID (optional for default funnel)\"\n            },\n            dateRange: {\n              type: \"string\",\n              enum: [\"7d\", \"30d\", \"90d\"],\n              description: \"Date range for funnel analysis\",\n              default: \"30d\"\n            },\n            includeSegments: {\n              type: \"boolean\",\n              description: \"Include segment-based funnel analysis\",\n              default: false\n            }\n          }\n        }\n      },\n      {\n        name: \"get_page_analytics\",\n        description: \"Get page-level analytics and performance metrics\",\n        inputSchema: {\n          type: \"object\",\n          properties: {\n            pageUrl: {\n              type: \"string\",\n              description: \"Page URL to analyze\"\n            },\n            includeHeatmap: {\n              type: \"boolean\",\n              description: \"Include heatmap data\",\n              default: true\n            },\n            dateRange: {\n              type: \"string\",\n              enum: [\"1d\", \"7d\", \"30d\"],\n              description: \"Date range for analysis\",\n              default: \"7d\"\n            }\n          },\n          required: [\"pageUrl\"]\n        }\n      },\n      {\n        name: \"get_real_time_visitors\",\n        description: \"Get current active visitors and their activities\",\n        inputSchema: {\n          type: \"object\",\n          properties: {\n            includeLocation: {\n              type: \"boolean\",\n              description: \"Include geographic location data\",\n              default: true\n            },\n            includeDevice: {\n              type: \"boolean\",\n              description: \"Include device and browser information\",\n              default: true\n            }\n          }\n        }\n      },\n      {\n        name: \"identify_high_intent_visitors\",\n        description: \"Identify visitors with high purchase/conversion intent\",\n        inputSchema: {\n          type: \"object\",\n          properties: {\n            threshold: {\n              type: \"number\",\n              description: \"Intent score threshold (0-100)\",\n              minimum: 0,\n              maximum: 100,\n              default: 70\n            },\n            limit: {\n              type: \"number\",\n              description: \"Maximum number of visitors to return\",\n              minimum: 1,\n              maximum: 100,\n              default: 20\n            }\n          }\n        }\n      }\n    ];\n\n    // Filter tools based on permissions\n    if (!authContext.permissions.includes('*') && !authContext.permissions.includes('read:org')) {\n      // Regular users get limited tools\n      return tools.filter(t => ['track_visitor', 'analyze_visitor_behavior', 'get_real_time_visitors'].includes(t.name));\n    }\n\n    return tools;\n  }\n\n  /**\n   * Execute LeadPulse tools\n   */\n  protected async callTool(name: string, args: any, authContext: MCPAuthContext): Promise<any> {\n    switch (name) {\n      case 'track_visitor':\n        return await this.trackVisitor(args, authContext);\n      case 'analyze_visitor_behavior':\n        return await this.analyzeVisitorBehavior(args, authContext);\n      case 'get_conversion_funnel':\n        return await this.getConversionFunnel(args, authContext);\n      case 'get_page_analytics':\n        return await this.getPageAnalytics(args, authContext);\n      case 'get_real_time_visitors':\n        return await this.getRealTimeVisitors(args, authContext);\n      case 'identify_high_intent_visitors':\n        return await this.identifyHighIntentVisitors(args, authContext);\n      default:\n        throw new MCPValidationError(`Unknown tool: ${name}`);\n    }\n  }\n\n  /**\n   * Get visitor data with real MCPVisitorSessions queries\n   */\n  private async getVisitorData(query: LeadPulseQuery, authContext: MCPAuthContext): Promise<any> {\n    try {\n      const startTime = Date.now();\n      \n      // Build where clause for visitor sessions\n      const whereClause: any = {\n        organizationId: authContext.organizationId\n      };\n\n      if (query.visitorId) {\n        whereClause.visitorId = query.visitorId;\n      }\n\n      if (query.dateFrom || query.dateTo) {\n        whereClause.sessionStart = {};\n        if (query.dateFrom) {\n          whereClause.sessionStart.gte = new Date(query.dateFrom);\n        }\n        if (query.dateTo) {\n          whereClause.sessionStart.lte = new Date(query.dateTo);\n        }\n      }\n\n      // Get real visitor sessions from MCP table\n      const visitorSessions = await prisma.mCPVisitorSessions.findMany({\n        where: whereClause,\n        take: query.limit,\n        skip: query.offset,\n        include: {\n          organization: {\n            select: { id: true, name: true }\n          }\n        },\n        orderBy: {\n          sessionStart: 'desc'\n        }\n      });\n\n      // Transform sessions to visitor format\n      const visitors = visitorSessions.map(session => ({\n        id: session.visitorId,\n        sessionId: session.sessionId,\n        organizationId: session.organizationId,\n        startTime: session.sessionStart.toISOString(),\n        endTime: session.sessionEnd.toISOString(),\n        pageViews: session.pageViews,\n        duration: session.duration,\n        bounce: session.bounceRate > 0.5,\n        converted: session.conversionValue > 0,\n        intentScore: session.intentScore,\n        geoLocation: {\n          country: session.country,\n          city: session.city,\n          region: session.region\n        },\n        device: {\n          type: session.deviceType,\n          browser: session.browser,\n          os: session.operatingSystem\n        },\n        traffic: {\n          source: session.source,\n          medium: session.medium,\n          campaign: session.campaign,\n          referrer: session.referrer\n        },\n        engagement: {\n          scrollDepth: session.scrollDepth,\n          timeOnPage: session.avgTimeOnPage,\n          interactions: session.interactions,\n          exitPage: session.exitPage\n        },\n        insights: session.insights ? JSON.parse(session.insights) : []\n      }));\n\n      // Calculate summary statistics\n      const totalSessions = visitors.length;\n      const totalPageViews = visitors.reduce((sum, v) => sum + v.pageViews, 0);\n      const avgDuration = totalSessions > 0 ? visitors.reduce((sum, v) => sum + v.duration, 0) / totalSessions : 0;\n      const bounceRate = totalSessions > 0 ? visitors.filter(v => v.bounce).length / totalSessions : 0;\n      const conversionRate = totalSessions > 0 ? visitors.filter(v => v.converted).length / totalSessions : 0;\n      const avgIntentScore = totalSessions > 0 ? visitors.reduce((sum, v) => sum + v.intentScore, 0) / totalSessions : 0;\n\n      // Device and location distribution\n      const deviceDistribution = visitors.reduce((acc: Record<string, number>, v) => {\n        acc[v.device.type] = (acc[v.device.type] || 0) + 1;\n        return acc;\n      }, {});\n\n      const countryDistribution = visitors.reduce((acc: Record<string, number>, v) => {\n        acc[v.geoLocation.country] = (acc[v.geoLocation.country] || 0) + 1;\n        return acc;\n      }, {});\n\n      const duration = Date.now() - startTime;\n\n      // Log resource access\n      await this.logMCPResourceAccess(\n        authContext,\n        'leadpulse://visitors',\n        'LIST',\n        'success',\n        { duration, dataSize: visitors.length }\n      );\n\n      return {\n        uri: \"leadpulse://visitors\",\n        mimeType: \"application/json\",\n        text: JSON.stringify({\n          visitors,\n          summary: {\n            totalSessions,\n            totalPageViews,\n            averageDuration: Math.round(avgDuration),\n            bounceRate: Math.round(bounceRate * 100 * 100) / 100,\n            conversionRate: Math.round(conversionRate * 100 * 100) / 100,\n            avgIntentScore: Math.round(avgIntentScore * 100) / 100,\n            deviceDistribution,\n            countryDistribution\n          },\n          meta: {\n            query: {\n              limit: query.limit,\n              offset: query.offset,\n              organizationId: authContext.organizationId\n            },\n            total: visitors.length,\n            timestamp: new Date().toISOString(),\n            duration,\n            source: 'MCP_VISITOR_SESSIONS'\n          }\n        })\n      };\n    } catch (error) {\n      // Log failed access\n      await this.logMCPResourceAccess(\n        authContext,\n        'leadpulse://visitors',\n        'LIST',\n        'failure',\n        { errorMessage: error instanceof Error ? error.message : 'Unknown error' }\n      );\n\n      return await this.createFallbackResponse(\n        () => this.getVisitorDataFallback(query, authContext),\n        'Failed to retrieve visitor data via MCP'\n      );\n    }\n  }\n\n  /**\n   * Track visitor tool with real data\n   */\n  private async trackVisitor(args: any, authContext: MCPAuthContext): Promise<any> {\n    const { visitorId, includeJourney = true, includeHeatmap = false } = args;\n    const startTime = Date.now();\n\n    try {\n      // Log tool execution\n      await this.logMCPToolExecution(\n        authContext,\n        'track_visitor',\n        args,\n        'success',\n        { duration: 0, riskLevel: 'low' }\n      );\n\n      // Get visitor sessions from MCP table\n      const visitorSessions = await prisma.mCPVisitorSessions.findMany({\n        where: {\n          visitorId,\n          organizationId: authContext.organizationId\n        },\n        include: {\n          organization: {\n            select: { id: true, name: true }\n          }\n        },\n        orderBy: {\n          sessionStart: 'desc'\n        },\n        take: 10 // Last 10 sessions for analysis\n      });\n\n      if (visitorSessions.length === 0) {\n        const duration = Date.now() - startTime;\n        \n        await this.logMCPToolExecution(\n          authContext,\n          'track_visitor',\n          args,\n          'failure',\n          { \n            duration,\n            errorMessage: 'Visitor not found',\n            riskLevel: 'low'\n          }\n        );\n\n        return {\n          content: [{\n            type: \"text\",\n            text: JSON.stringify({\n              success: false,\n              error: \"Visitor not found\",\n              visitorId\n            })\n          }],\n          isError: true\n        };\n      }\n\n      // Get current (most recent) session\n      const currentSession = visitorSessions[0];\n      \n      // Calculate visitor profile from all sessions\n      const totalSessions = visitorSessions.length;\n      const totalPageViews = visitorSessions.reduce((sum, s) => sum + s.pageViews, 0);\n      const avgSessionDuration = visitorSessions.reduce((sum, s) => sum + s.duration, 0) / totalSessions;\n      const totalConversions = visitorSessions.filter(s => s.conversionValue > 0).length;\n      const avgIntentScore = visitorSessions.reduce((sum, s) => sum + s.intentScore, 0) / totalSessions;\n\n      // Determine if returning visitor\n      const isReturning = totalSessions > 1;\n      const firstSessionDate = visitorSessions[visitorSessions.length - 1].sessionStart;\n      const lastSessionDate = visitorSessions[0].sessionStart;\n\n      // Build visitor profile\n      const visitorData = {\n        id: visitorId,\n        currentSession: {\n          sessionId: currentSession.sessionId,\n          startTime: currentSession.sessionStart.toISOString(),\n          endTime: currentSession.sessionEnd.toISOString(),\n          currentPage: currentSession.exitPage || currentSession.landingPage,\n          pageViews: currentSession.pageViews,\n          duration: currentSession.duration,\n          interactions: currentSession.interactions,\n          intentScore: currentSession.intentScore,\n          scrollDepth: currentSession.scrollDepth,\n          bounced: currentSession.bounceRate > 0.5,\n          converted: currentSession.conversionValue > 0,\n          conversionValue: currentSession.conversionValue\n        },\n        profile: {\n          isReturning,\n          totalSessions,\n          totalPageViews,\n          totalConversions,\n          averageSessionDuration: Math.round(avgSessionDuration),\n          averageIntentScore: Math.round(avgIntentScore * 100) / 100,\n          firstSeen: firstSessionDate.toISOString(),\n          lastSeen: lastSessionDate.toISOString(),\n          daysSinceFirstVisit: Math.floor((Date.now() - firstSessionDate.getTime()) / (1000 * 60 * 60 * 24))\n        },\n        geoLocation: {\n          country: currentSession.country,\n          city: currentSession.city,\n          region: currentSession.region,\n          timezone: this.getTimezoneFromCountry(currentSession.country)\n        },\n        device: {\n          type: currentSession.deviceType,\n          browser: currentSession.browser,\n          os: currentSession.operatingSystem\n        },\n        trafficSource: {\n          source: currentSession.source,\n          medium: currentSession.medium,\n          campaign: currentSession.campaign,\n          referrer: currentSession.referrer\n        },\n        behavioral: {\n          avgTimeOnPage: currentSession.avgTimeOnPage,\n          bounceRate: this.calculateVisitorBounceRate(visitorSessions),\n          conversionRate: totalConversions / totalSessions * 100,\n          engagementScore: this.calculateEngagementScore(visitorSessions)\n        }\n      };\n\n      // Add journey data if requested\n      if (includeJourney) {\n        visitorData.journey = this.buildVisitorJourney(visitorSessions);\n      }\n\n      // Add insights\n      visitorData.insights = this.generateVisitorInsights(visitorData, visitorSessions);\n\n      const duration = Date.now() - startTime;\n\n      // Log successful tool execution\n      await this.logMCPToolExecution(\n        authContext,\n        'track_visitor',\n        args,\n        'success',\n        { \n          duration,\n          outputSize: 1,\n          riskLevel: includeJourney ? 'medium' : 'low'\n        }\n      );\n\n      return {\n        content: [{\n          type: \"text\",\n          text: JSON.stringify({\n            success: true,\n            data: visitorData,\n            meta: {\n              includeJourney,\n              includeHeatmap,\n              timestamp: new Date().toISOString(),\n              duration,\n              source: 'MCP_VISITOR_SESSIONS'\n            }\n          })\n        }]\n      };\n    } catch (error) {\n      const duration = Date.now() - startTime;\n      \n      // Log failed tool execution\n      await this.logMCPToolExecution(\n        authContext,\n        'track_visitor',\n        args,\n        'failure',\n        { \n          duration,\n          errorMessage: error instanceof Error ? error.message : 'Unknown error',\n          riskLevel: 'medium'\n        }\n      );\n\n      return {\n        content: [{\n          type: \"text\",\n          text: JSON.stringify({\n            success: false,\n            error: \"Failed to track visitor\",\n            details: error instanceof Error ? error.message : 'Unknown error'\n          })\n        }],\n        isError: true\n      };\n    }\n  }\n\n  /**\n   * Analyze visitor behavior tool\n   */\n  private async analyzeVisitorBehavior(args: any, authContext: MCPAuthContext): Promise<any> {\n    const { visitorId, sessionId, timeRange = '7d' } = args;\n\n    try {\n      // Placeholder behavior analysis\n      const behaviorAnalysis = {\n        visitorId,\n        sessionId,\n        timeRange,\n        behaviorPattern: {\n          pageViewsPerSession: 6.5,\n          averageSessionDuration: 420,\n          bounceRate: 0.15,\n          conversionRate: 0.08,\n          engagementScore: 78\n        },\n        interests: [\n          { category: 'Premium Services', score: 92 },\n          { category: 'Analytics', score: 78 },\n          { category: 'Automation', score: 65 }\n        ],\n        actions: {\n          totalClicks: 45,\n          formSubmissions: 2,\n          downloadRequests: 1,\n          socialShares: 0\n        },\n        predictions: {\n          likelihoodToConvert: 0.74,\n          timeToConversion: '2-3 days',\n          preferredChannel: 'email',\n          nextBestAction: 'Send targeted premium service offer'\n        },\n        insights: [\n          \"Visitor shows high engagement with premium content\",\n          \"Multiple return sessions indicate strong interest\",\n          \"Behavior pattern suggests readiness to purchase\",\n          \"Recommended: Send personalized offer within 24 hours\"\n        ]\n      };\n\n      return {\n        content: [{\n          type: \"text\",\n          text: JSON.stringify({\n            success: true,\n            data: behaviorAnalysis,\n            meta: {\n              timeRange,\n              analysisType: 'behavioral',\n              timestamp: new Date().toISOString(),\n              fallbackUsed: true\n            }\n          })\n        }]\n      };\n    } catch (error) {\n      return {\n        content: [{\n          type: \"text\",\n          text: JSON.stringify({\n            success: false,\n            error: \"Failed to analyze visitor behavior\",\n            details: error instanceof Error ? error.message : 'Unknown error'\n          })\n        }],\n        isError: true\n      };\n    }\n  }\n\n  /**\n   * Get conversion funnel tool\n   */\n  private async getConversionFunnel(args: any, authContext: MCPAuthContext): Promise<any> {\n    const { funnelId, dateRange = '30d', includeSegments = false } = args;\n    const startTime = Date.now();\n\n    try {\n      // Calculate date range\n      const daysBack = this.parseDateRange(dateRange);\n      const startDate = new Date(Date.now() - daysBack * 24 * 60 * 60 * 1000);\n\n      // Get visitor sessions data for funnel analysis\n      const sessions = await prisma.mCPVisitorSessions.findMany({\n        where: {\n          organizationId: authContext.organizationId,\n          sessionStart: {\n            gte: startDate\n          }\n        },\n        orderBy: {\n          sessionStart: 'asc'\n        }\n      });\n\n      // Define funnel steps based on common customer journey\n      const funnelSteps = [\n        { name: 'Landing Page Visit', pagePattern: '/' },\n        { name: 'Product/Service View', pagePattern: '/features|/products|/services' },\n        { name: 'Pricing Page View', pagePattern: '/pricing' },\n        { name: 'Contact/Demo Request', pagePattern: '/contact|/demo|/signup' },\n        { name: 'Conversion', conversionRequired: true }\n      ];\n\n      // Analyze visitor progression through funnel\n      const funnelData = this.analyzeFunnelProgression(sessions, funnelSteps);\n\n      // Add segment analysis if requested\n      let segmentData = undefined;\n      if (includeSegments) {\n        segmentData = await this.analyzeFunnelBySegments(sessions, funnelSteps, authContext);\n      }\n\n      // Generate insights based on real data\n      const insights = this.generateFunnelInsights(funnelData.steps, segmentData);\n\n      const duration = Date.now() - startTime;\n\n      // Log tool execution\n      await this.logMCPToolExecution(\n        authContext,\n        'get_conversion_funnel',\n        args,\n        'success',\n        { \n          duration,\n          outputSize: funnelData.steps.length,\n          riskLevel: 'low'\n        }\n      );\n\n      const result = {\n        funnelId: funnelId || 'organization-funnel',\n        dateRange,\n        totalSessions: sessions.length,\n        timeframe: {\n          startDate: startDate.toISOString(),\n          endDate: new Date().toISOString(),\n          daysAnalyzed: daysBack\n        },\n        steps: funnelData.steps,\n        overallConversion: funnelData.overallConversion,\n        totalRevenue: funnelData.totalRevenue,\n        averageOrderValue: funnelData.averageOrderValue,\n        segments: segmentData,\n        insights,\n        performance: {\n          bestPerformingStep: funnelData.bestStep,\n          worstPerformingStep: funnelData.worstStep,\n          biggestDropOff: funnelData.biggestDropOff\n        }\n      };\n\n      return {\n        content: [{\n          type: \"text\",\n          text: JSON.stringify({\n            success: true,\n            data: result,\n            meta: {\n              dateRange,\n              includeSegments,\n              timestamp: new Date().toISOString(),\n              duration,\n              source: 'MCP_VISITOR_SESSIONS'\n            }\n          })\n        }]\n      };\n    } catch (error) {\n      return {\n        content: [{\n          type: \"text\",\n          text: JSON.stringify({\n            success: false,\n            error: \"Failed to get conversion funnel\",\n            details: error instanceof Error ? error.message : 'Unknown error'\n          })\n        }],\n        isError: true\n      };\n    }\n  }\n\n  /**\n   * Get page analytics tool\n   */\n  private async getPageAnalytics(args: any, authContext: MCPAuthContext): Promise<any> {\n    const { pageUrl, includeHeatmap = true, dateRange = '7d' } = args;\n\n    try {\n      // Placeholder page analytics\n      const pageAnalytics = {\n        pageUrl,\n        dateRange,\n        metrics: {\n          pageViews: 2500,\n          uniqueVisitors: 1800,\n          averageTimeOnPage: 180,\n          bounceRate: 0.35,\n          exitRate: 0.42,\n          scrollDepth: 0.68,\n          clickThroughRate: 0.15\n        },\n        heatmapData: includeHeatmap ? {\n          clickMap: {\n            headerNav: 45,\n            primaryCTA: 120,\n            secondaryCTA: 67,\n            footer: 23\n          },\n          scrollMap: {\n            '0-25%': 100,\n            '25-50%': 85,\n            '50-75%': 68,\n            '75-100%': 42\n          },\n          attentionMap: {\n            hero: 8.5,\n            features: 6.2,\n            pricing: 7.8,\n            testimonials: 4.1\n          }\n        } : undefined,\n        insights: [\n          \"Primary CTA has good engagement (120 clicks)\",\n          \"Users tend to drop off at 50% scroll depth\",\n          \"Pricing section gets high attention (7.8 seconds average)\",\n          \"Consider moving testimonials higher up the page\"\n        ]\n      };\n\n      return {\n        content: [{\n          type: \"text\",\n          text: JSON.stringify({\n            success: true,\n            data: pageAnalytics,\n            meta: {\n              pageUrl,\n              dateRange,\n              includeHeatmap,\n              timestamp: new Date().toISOString(),\n              fallbackUsed: true\n            }\n          })\n        }]\n      };\n    } catch (error) {\n      return {\n        content: [{\n          type: \"text\",\n          text: JSON.stringify({\n            success: false,\n            error: \"Failed to get page analytics\",\n            details: error instanceof Error ? error.message : 'Unknown error'\n          })\n        }],\n        isError: true\n      };\n    }\n  }\n\n  /**\n   * Get real-time visitors tool with actual visitor session data\n   */\n  private async getRealTimeVisitors(args: any, authContext: MCPAuthContext): Promise<any> {\n    const { includeLocation = true, includeDevice = true } = args;\n    const startTime = Date.now();\n\n    try {\n      // Log tool execution\n      await this.logMCPToolExecution(\n        authContext,\n        'get_real_time_visitors',\n        args,\n        'success',\n        { duration: 0, riskLevel: 'low' }\n      );\n\n      // Define \"real-time\" as sessions that are still active (within last 30 minutes)\n      const thirtyMinutesAgo = new Date(Date.now() - 30 * 60 * 1000);\n      const now = new Date();\n\n      // Get currently active visitor sessions\n      const activeSessions = await prisma.mCPVisitorSessions.findMany({\n        where: {\n          organizationId: authContext.organizationId,\n          sessionStart: {\n            gte: thirtyMinutesAgo\n          },\n          sessionEnd: {\n            gte: thirtyMinutesAgo // Sessions that ended recently or are still ongoing\n          }\n        },\n        include: {\n          organization: {\n            select: { id: true, name: true }\n          }\n        },\n        orderBy: {\n          sessionStart: 'desc'\n        },\n        take: 50 // Limit for performance\n      });\n\n      // Calculate current visitor count (unique visitors in last 30 minutes)\n      const uniqueVisitors = new Set(activeSessions.map(s => s.visitorId));\n      const currentVisitors = uniqueVisitors.size;\n\n      // Calculate active pages by grouping current page views\n      const pageActivity = activeSessions.reduce((acc: Record<string, number>, session) => {\n        const currentPage = session.exitPage || session.landingPage || '/';\n        acc[currentPage] = (acc[currentPage] || 0) + 1;\n        return acc;\n      }, {});\n\n      const activePages = Object.entries(pageActivity)\n        .map(([page, visitors]) => ({ page, visitors }))\n        .sort((a, b) => b.visitors - a.visitors)\n        .slice(0, 10); // Top 10 pages\n\n      // Transform visitor data\n      const visitors = activeSessions.slice(0, 20).map(session => {\n        const sessionDurationMs = session.sessionEnd.getTime() - session.sessionStart.getTime();\n        const timeOnCurrentPage = Math.max(0, (now.getTime() - session.sessionStart.getTime()) / 1000);\n        \n        return {\n          id: session.visitorId,\n          sessionId: session.sessionId,\n          currentPage: session.exitPage || session.landingPage,\n          timeOnPage: Math.round(timeOnCurrentPage),\n          sessionDuration: Math.round(sessionDurationMs / 1000),\n          pageViews: session.pageViews,\n          interactions: session.interactions,\n          intentScore: session.intentScore,\n          scrollDepth: session.scrollDepth,\n          isReturning: this.isReturningVisitor(session.visitorId, activeSessions),\n          isConverted: session.conversionValue > 0,\n          trafficSource: {\n            source: session.source,\n            medium: session.medium,\n            campaign: session.campaign\n          },\n          location: includeLocation ? {\n            country: session.country,\n            city: session.city,\n            region: session.region\n          } : undefined,\n          device: includeDevice ? {\n            type: session.deviceType,\n            browser: session.browser,\n            os: session.operatingSystem\n          } : undefined\n        };\n      });\n\n      // Calculate real-time insights\n      const insights = this.generateRealTimeInsights(activeSessions, visitors, currentVisitors);\n\n      // Calculate traffic trends (compare with previous 30 minutes)\n      const previousPeriodStart = new Date(thirtyMinutesAgo.getTime() - 30 * 60 * 1000);\n      const previousSessions = await prisma.mCPVisitorSessions.count({\n        where: {\n          organizationId: authContext.organizationId,\n          sessionStart: {\n            gte: previousPeriodStart,\n            lt: thirtyMinutesAgo\n          }\n        }\n      });\n\n      const trafficChange = previousSessions > 0 \n        ? ((currentVisitors - previousSessions) / previousSessions) * 100 \n        : 0;\n\n      // Device and location statistics\n      const deviceStats = includeDevice ? this.calculateDeviceStats(visitors) : undefined;\n      const locationStats = includeLocation ? this.calculateLocationStats(visitors) : undefined;\n\n      const duration = Date.now() - startTime;\n\n      // Log successful tool execution\n      await this.logMCPToolExecution(\n        authContext,\n        'get_real_time_visitors',\n        args,\n        'success',\n        { \n          duration,\n          outputSize: visitors.length,\n          riskLevel: 'low'\n        }\n      );\n\n      const realTimeData = {\n        currentVisitors,\n        trafficTrend: {\n          change: Math.round(trafficChange * 100) / 100,\n          direction: trafficChange > 0 ? 'increasing' : trafficChange < 0 ? 'decreasing' : 'stable',\n          previousPeriodVisitors: previousSessions\n        },\n        activePages,\n        visitors,\n        deviceStats,\n        locationStats,\n        insights,\n        sessionStats: {\n          totalActiveSessions: activeSessions.length,\n          avgSessionDuration: activeSessions.length > 0 \n            ? Math.round(activeSessions.reduce((sum, s) => sum + s.duration, 0) / activeSessions.length)\n            : 0,\n          avgPageViews: activeSessions.length > 0 \n            ? Math.round(activeSessions.reduce((sum, s) => sum + s.pageViews, 0) / activeSessions.length * 100) / 100\n            : 0,\n          avgIntentScore: activeSessions.length > 0 \n            ? Math.round(activeSessions.reduce((sum, s) => sum + s.intentScore, 0) / activeSessions.length * 100) / 100\n            : 0,\n          conversionRate: activeSessions.length > 0 \n            ? Math.round(activeSessions.filter(s => s.conversionValue > 0).length / activeSessions.length * 100 * 100) / 100\n            : 0\n        }\n      };\n\n      return {\n        content: [{\n          type: \"text\",\n          text: JSON.stringify({\n            success: true,\n            data: realTimeData,\n            meta: {\n              includeLocation,\n              includeDevice,\n              timestamp: new Date().toISOString(),\n              duration,\n              timeWindow: '30 minutes',\n              source: 'MCP_VISITOR_SESSIONS'\n            }\n          })\n        }]\n      };\n    } catch (error) {\n      const duration = Date.now() - startTime;\n      \n      // Log failed tool execution\n      await this.logMCPToolExecution(\n        authContext,\n        'get_real_time_visitors',\n        args,\n        'failure',\n        { \n          duration,\n          errorMessage: error instanceof Error ? error.message : 'Unknown error',\n          riskLevel: 'medium'\n        }\n      );\n\n      return {\n        content: [{\n          type: \"text\",\n          text: JSON.stringify({\n            success: false,\n            error: \"Failed to get real-time visitors\",\n            details: error instanceof Error ? error.message : 'Unknown error'\n          })\n        }],\n        isError: true\n      };\n    }\n  }\n\n  /**\n   * Identify high intent visitors tool with real data\n   */\n  private async identifyHighIntentVisitors(args: any, authContext: MCPAuthContext): Promise<any> {\n    const { threshold = 70, limit = 20 } = args;\n    const startTime = Date.now();\n\n    try {\n      // Log tool execution\n      await this.logMCPToolExecution(\n        authContext,\n        'identify_high_intent_visitors',\n        args,\n        'success',\n        { duration: 0, riskLevel: 'low' }\n      );\n\n      // Get high intent visitors from real session data\n      const highIntentSessions = await prisma.mCPVisitorSessions.findMany({\n        where: {\n          organizationId: authContext.organizationId,\n          intentScore: {\n            gte: threshold\n          },\n          sessionStart: {\n            gte: new Date(Date.now() - 24 * 60 * 60 * 1000) // Last 24 hours\n          }\n        },\n        include: {\n          organization: {\n            select: { id: true, name: true }\n          }\n        },\n        orderBy: {\n          intentScore: 'desc'\n        },\n        take: limit\n      });\n\n      // Transform to high intent visitor format\n      const highIntentVisitors = await Promise.all(highIntentSessions.map(async (session) => {\n        // Get historical sessions for this visitor to determine behavior patterns\n        const visitorSessions = await prisma.mCPVisitorSessions.findMany({\n          where: {\n            visitorId: session.visitorId,\n            organizationId: authContext.organizationId\n          },\n          orderBy: {\n            sessionStart: 'desc'\n          },\n          take: 10\n        });\n\n        // Analyze visitor behavior patterns\n        const signals = this.analyzeVisitorSignals(session, visitorSessions);\n        const recommendation = this.generateRecommendation(session, signals);\n\n        return {\n          id: session.visitorId,\n          sessionId: session.sessionId,\n          intentScore: session.intentScore,\n          currentPage: session.exitPage || session.landingPage,\n          sessionDuration: session.duration,\n          pageViews: session.pageViews,\n          interactions: session.interactions,\n          scrollDepth: session.scrollDepth,\n          conversionValue: session.conversionValue,\n          signals,\n          profile: {\n            isReturning: visitorSessions.length > 1,\n            totalSessions: visitorSessions.length,\n            totalPageViews: visitorSessions.reduce((sum, s) => sum + s.pageViews, 0),\n            avgSessionDuration: Math.round(visitorSessions.reduce((sum, s) => sum + s.duration, 0) / visitorSessions.length),\n            lastSeen: session.sessionStart.toISOString(),\n            location: {\n              country: session.country,\n              city: session.city,\n              region: session.region\n            },\n            device: {\n              type: session.deviceType,\n              browser: session.browser,\n              os: session.operatingSystem\n            }\n          },\n          trafficSource: {\n            source: session.source,\n            medium: session.medium,\n            campaign: session.campaign,\n            referrer: session.referrer\n          },\n          recommendation\n        };\n      }));\n\n      // Calculate insights\n      const totalCount = highIntentVisitors.length;\n      const averageIntentScore = totalCount > 0 \n        ? highIntentVisitors.reduce((sum, v) => sum + v.intentScore, 0) / totalCount \n        : 0;\n      \n      const returningVisitors = highIntentVisitors.filter(v => v.profile.isReturning).length;\n      const convertedVisitors = highIntentVisitors.filter(v => v.conversionValue > 0).length;\n      const mobileVisitors = highIntentVisitors.filter(v => v.profile.device.type === 'mobile').length;\n\n      const insights = [\n        `${totalCount} visitors above ${threshold}% intent threshold in last 24 hours`,\n        `Average intent score: ${Math.round(averageIntentScore)}%`,\n        `${Math.round((returningVisitors / totalCount) * 100)}% are returning visitors showing continued interest`,\n        `${convertedVisitors} have already converted in their current session`,\n        `${Math.round((mobileVisitors / totalCount) * 100)}% are browsing on mobile devices`,\n        \"Recommend immediate personalized outreach for best conversion rates\"\n      ];\n\n      const duration = Date.now() - startTime;\n\n      // Log successful tool execution\n      await this.logMCPToolExecution(\n        authContext,\n        'identify_high_intent_visitors',\n        args,\n        'success',\n        { \n          duration,\n          outputSize: totalCount,\n          riskLevel: 'medium' // Higher risk due to visitor identification\n        }\n      );\n\n      return {\n        content: [{\n          type: \"text\",\n          text: JSON.stringify({\n            success: true,\n            data: {\n              visitors: highIntentVisitors,\n              totalCount,\n              averageIntentScore: Math.round(averageIntentScore * 100) / 100,\n              statistics: {\n                returningVisitors,\n                convertedVisitors,\n                mobileVisitors,\n                returningPercentage: Math.round((returningVisitors / totalCount) * 100),\n                conversionRate: Math.round((convertedVisitors / totalCount) * 100 * 100) / 100,\n                mobilePercentage: Math.round((mobileVisitors / totalCount) * 100)\n              },\n              insights\n            },\n            meta: {\n              threshold,\n              limit,\n              timeRange: '24 hours',\n              timestamp: new Date().toISOString(),\n              duration,\n              source: 'MCP_VISITOR_SESSIONS'\n            }\n          })\n        }]\n      };\n    } catch (error) {\n      const duration = Date.now() - startTime;\n      \n      // Log failed tool execution\n      await this.logMCPToolExecution(\n        authContext,\n        'identify_high_intent_visitors',\n        args,\n        'failure',\n        { \n          duration,\n          errorMessage: error instanceof Error ? error.message : 'Unknown error',\n          riskLevel: 'medium'\n        }\n      );\n\n      return {\n        content: [{\n          type: \"text\",\n          text: JSON.stringify({\n            success: false,\n            error: \"Failed to identify high intent visitors\",\n            details: error instanceof Error ? error.message : 'Unknown error'\n          })\n        }],\n        isError: true\n      };\n    }\n  }\n\n  /**\n   * Fallback methods for LeadPulse data\n   */\n  private async getVisitorDataFallback(query: LeadPulseQuery, authContext: MCPAuthContext): Promise<any> {\n    return {\n      visitors: [],\n      meta: {\n        total: 0,\n        offset: query.offset,\n        limit: query.limit,\n        fallbackUsed: true,\n        message: \"Visitor data fallback - implementation needed\"\n      }\n    };\n  }\n\n  /**\n   * Get session data (placeholder)\n   */\n  private async getSessionData(query: LeadPulseQuery, authContext: MCPAuthContext): Promise<any> {\n    return {\n      uri: \"leadpulse://sessions\",\n      mimeType: \"application/json\",\n      text: JSON.stringify({\n        message: \"Session data functionality coming soon\",\n        fallbackUsed: true\n      })\n    };\n  }\n\n  /**\n   * Get heatmap data (placeholder)\n   */\n  private async getHeatmapData(query: LeadPulseQuery, authContext: MCPAuthContext): Promise<any> {\n    return {\n      uri: \"leadpulse://heatmaps\",\n      mimeType: \"application/json\",\n      text: JSON.stringify({\n        message: \"Heatmap data functionality coming soon\",\n        fallbackUsed: true\n      })\n    };\n  }\n\n  /**\n   * Get journey data (placeholder)\n   */\n  private async getJourneyData(query: LeadPulseQuery, authContext: MCPAuthContext): Promise<any> {\n    return {\n      uri: \"leadpulse://journeys\",\n      mimeType: \"application/json\",\n      text: JSON.stringify({\n        message: \"Journey data functionality coming soon\",\n        fallbackUsed: true\n      })\n    };\n  }\n\n  /**\n   * Get conversion data (placeholder)\n   */\n  private async getConversionData(query: LeadPulseQuery, authContext: MCPAuthContext): Promise<any> {\n    return {\n      uri: \"leadpulse://conversions\",\n      mimeType: \"application/json\",\n      text: JSON.stringify({\n        message: \"Conversion data functionality coming soon\",\n        fallbackUsed: true\n      })\n    };\n  }\n\n  /**\n   * Get analytics data (placeholder)\n   */\n  private async getAnalyticsData(query: LeadPulseQuery, authContext: MCPAuthContext): Promise<any> {\n    return {\n      uri: \"leadpulse://analytics\",\n      mimeType: \"application/json\",\n      text: JSON.stringify({\n        message: \"Analytics data functionality coming soon\",\n        fallbackUsed: true\n      })\n    };\n  }\n\n  /**\n   * Helper methods for visitor analysis\n   */\n  \n  /**\n   * Get timezone from country code\n   */\n  private getTimezoneFromCountry(country: string): string {\n    const timezoneMap: Record<string, string> = {\n      'Nigeria': 'Africa/Lagos',\n      'Kenya': 'Africa/Nairobi',\n      'Ghana': 'Africa/Accra',\n      'South Africa': 'Africa/Johannesburg',\n      'Egypt': 'Africa/Cairo',\n      'Morocco': 'Africa/Casablanca',\n      'Tanzania': 'Africa/Dar_es_Salaam',\n      'Uganda': 'Africa/Kampala',\n      'Rwanda': 'Africa/Kigali',\n      'Zambia': 'Africa/Lusaka'\n    };\n    return timezoneMap[country] || 'UTC';\n  }\n\n  /**\n   * Calculate visitor bounce rate across sessions\n   */\n  private calculateVisitorBounceRate(sessions: any[]): number {\n    if (sessions.length === 0) return 0;\n    const bouncedSessions = sessions.filter(s => s.bounceRate > 0.5).length;\n    return (bouncedSessions / sessions.length) * 100;\n  }\n\n  /**\n   * Calculate engagement score based on visitor behavior\n   */\n  private calculateEngagementScore(sessions: any[]): number {\n    if (sessions.length === 0) return 0;\n\n    let score = 0;\n    const weights = {\n      sessionDuration: 0.3,\n      pageViews: 0.25,\n      interactions: 0.2,\n      scrollDepth: 0.15,\n      conversions: 0.1\n    };\n\n    // Average session duration (normalized to 0-100)\n    const avgDuration = sessions.reduce((sum, s) => sum + s.duration, 0) / sessions.length;\n    score += Math.min(avgDuration / 300, 1) * 100 * weights.sessionDuration; // 5 minutes = 100%\n\n    // Average page views per session\n    const avgPageViews = sessions.reduce((sum, s) => sum + s.pageViews, 0) / sessions.length;\n    score += Math.min(avgPageViews / 10, 1) * 100 * weights.pageViews; // 10 pages = 100%\n\n    // Average interactions\n    const avgInteractions = sessions.reduce((sum, s) => sum + s.interactions, 0) / sessions.length;\n    score += Math.min(avgInteractions / 20, 1) * 100 * weights.interactions; // 20 interactions = 100%\n\n    // Average scroll depth\n    const avgScrollDepth = sessions.reduce((sum, s) => sum + s.scrollDepth, 0) / sessions.length;\n    score += avgScrollDepth * 100 * weights.scrollDepth;\n\n    // Conversion bonus\n    const conversions = sessions.filter(s => s.conversionValue > 0).length;\n    score += (conversions / sessions.length) * 100 * weights.conversions;\n\n    return Math.round(score * 100) / 100;\n  }\n\n  /**\n   * Build visitor journey from sessions\n   */\n  private buildVisitorJourney(sessions: any[]): any[] {\n    const journey: any[] = [];\n\n    sessions.reverse().forEach((session, sessionIndex) => {\n      // Add session start\n      journey.push({\n        timestamp: session.sessionStart.toISOString(),\n        action: 'session_start',\n        sessionId: session.sessionId,\n        page: session.landingPage,\n        source: session.source,\n        medium: session.medium,\n        campaign: session.campaign\n      });\n\n      // Simulate page views based on session data\n      const pageViews = Math.max(1, session.pageViews);\n      const sessionDuration = session.duration;\n      const timePerPage = sessionDuration / pageViews;\n\n      for (let i = 0; i < pageViews; i++) {\n        const pageTimestamp = new Date(session.sessionStart.getTime() + (i * timePerPage * 1000));\n        journey.push({\n          timestamp: pageTimestamp.toISOString(),\n          action: 'page_view',\n          page: i === 0 ? session.landingPage : (i === pageViews - 1 ? session.exitPage : `/page-${i + 1}`),\n          duration: Math.round(timePerPage),\n          scrollDepth: session.scrollDepth,\n          interactions: Math.round(session.interactions / pageViews)\n        });\n      }\n\n      // Add conversion event if applicable\n      if (session.conversionValue > 0) {\n        journey.push({\n          timestamp: new Date(session.sessionEnd.getTime() - 30000).toISOString(), // 30 seconds before session end\n          action: 'conversion',\n          page: session.exitPage,\n          value: session.conversionValue,\n          conversionType: 'purchase' // Could be determined from data\n        });\n      }\n\n      // Add session end\n      journey.push({\n        timestamp: session.sessionEnd.toISOString(),\n        action: 'session_end',\n        sessionId: session.sessionId,\n        page: session.exitPage,\n        duration: session.duration,\n        bounced: session.bounceRate > 0.5\n      });\n    });\n\n    return journey;\n  }\n\n  /**\n   * Generate insights for visitor behavior\n   */\n  private generateVisitorInsights(visitorData: any, sessions: any[]): string[] {\n    const insights: string[] = [];\n    const profile = visitorData.profile;\n    const current = visitorData.currentSession;\n    const behavioral = visitorData.behavioral;\n\n    // Intent score insights\n    if (current.intentScore > 80) {\n      insights.push(`High intent visitor - ${current.intentScore}% intent score indicates strong purchase likelihood`);\n    } else if (current.intentScore > 60) {\n      insights.push(`Moderate intent visitor - ${current.intentScore}% intent score shows interest`);\n    } else {\n      insights.push(`Low intent visitor - ${current.intentScore}% intent score suggests early stage exploration`);\n    }\n\n    // Engagement insights\n    if (behavioral.engagementScore > 70) {\n      insights.push(`Highly engaged visitor - ${behavioral.engagementScore.toFixed(1)} engagement score`);\n    } else if (behavioral.engagementScore > 40) {\n      insights.push(`Moderately engaged visitor - ${behavioral.engagementScore.toFixed(1)} engagement score`);\n    }\n\n    // Session insights\n    if (current.pageViews > 5) {\n      insights.push(`Engaged user - ${current.pageViews} page views in current session shows strong interest`);\n    }\n\n    if (current.duration > 300) { // 5 minutes\n      insights.push(`Extended session - ${Math.round(current.duration / 60)} minutes indicates serious consideration`);\n    }\n\n    // Returning visitor insights\n    if (profile.isReturning) {\n      insights.push(`Returning visitor - ${profile.totalSessions} total sessions shows continued interest`);\n      \n      if (profile.daysSinceFirstVisit > 7) {\n        insights.push(`Long-term interest - first visited ${profile.daysSinceFirstVisit} days ago`);\n      }\n    } else {\n      insights.push(\"New visitor - first-time visit represents acquisition opportunity\");\n    }\n\n    // Conversion insights\n    if (profile.totalConversions > 0) {\n      insights.push(`Converting visitor - ${profile.totalConversions} previous conversions`);\n    } else if (behavioral.conversionRate > 0) {\n      insights.push(\"Conversion potential - behavioral patterns suggest readiness to convert\");\n    }\n\n    // Geographic insights\n    if (visitorData.geoLocation.country === 'Nigeria') {\n      insights.push(\"Nigerian visitor - optimize for mobile experience and local payment methods\");\n    }\n\n    // Device insights\n    if (visitorData.device.type === 'mobile') {\n      insights.push(\"Mobile visitor - ensure mobile-optimized experience and WhatsApp integration\");\n    }\n\n    // Bounce rate insights\n    if (behavioral.bounceRate < 20) {\n      insights.push(\"Low bounce rate indicates strong content engagement\");\n    } else if (behavioral.bounceRate > 60) {\n      insights.push(\"High bounce rate suggests need for content optimization\");\n    }\n\n    return insights;\n  }\n\n  /**\n   * Check if visitor is returning based on visitor ID occurrence\n   */\n  private isReturningVisitor(visitorId: string, sessions: any[]): boolean {\n    return sessions.filter(s => s.visitorId === visitorId).length > 1;\n  }\n\n  /**\n   * Generate real-time insights based on current activity\n   */\n  private generateRealTimeInsights(activeSessions: any[], visitors: any[], currentVisitors: number): string[] {\n    const insights: string[] = [];\n\n    if (currentVisitors === 0) {\n      insights.push(\"No active visitors currently on the site\");\n      return insights;\n    }\n\n    // Traffic level insights\n    if (currentVisitors > 20) {\n      insights.push(`High traffic period - ${currentVisitors} active visitors`);\n    } else if (currentVisitors > 5) {\n      insights.push(`Moderate traffic - ${currentVisitors} active visitors`);\n    } else {\n      insights.push(`Low traffic period - ${currentVisitors} active visitors`);\n    }\n\n    // Device distribution insights\n    const mobileVisitors = visitors.filter(v => v.device?.type === 'mobile').length;\n    const mobilePercentage = visitors.length > 0 ? (mobileVisitors / visitors.length) * 100 : 0;\n    \n    if (mobilePercentage > 70) {\n      insights.push(`${Math.round(mobilePercentage)}% of visitors are on mobile devices`);\n    }\n\n    // Geographic insights\n    const countries = new Set(visitors.map(v => v.location?.country).filter(Boolean));\n    if (countries.size > 1) {\n      insights.push(`Visitors from ${countries.size} countries currently active`);\n    }\n\n    // High intent visitors\n    const highIntentVisitors = visitors.filter(v => v.intentScore > 70).length;\n    if (highIntentVisitors > 0) {\n      insights.push(`${highIntentVisitors} high-intent visitors (>70% intent score) currently browsing`);\n    }\n\n    // Session duration insights\n    const longSessions = visitors.filter(v => v.sessionDuration > 300).length; // > 5 minutes\n    if (longSessions > 0) {\n      insights.push(`${longSessions} visitors have been browsing for over 5 minutes`);\n    }\n\n    // Page popularity\n    const avgPageViews = visitors.length > 0 \n      ? visitors.reduce((sum, v) => sum + v.pageViews, 0) / visitors.length \n      : 0;\n    \n    if (avgPageViews > 3) {\n      insights.push(`High engagement - average ${Math.round(avgPageViews * 10) / 10} pages per session`);\n    }\n\n    // Returning visitors\n    const returningVisitors = visitors.filter(v => v.isReturning).length;\n    if (returningVisitors > 0) {\n      const returningPercentage = (returningVisitors / visitors.length) * 100;\n      insights.push(`${Math.round(returningPercentage)}% are returning visitors`);\n    }\n\n    // Conversion insights\n    const convertedVisitors = visitors.filter(v => v.isConverted).length;\n    if (convertedVisitors > 0) {\n      insights.push(`${convertedVisitors} visitors have converted in their current session`);\n    }\n\n    return insights;\n  }\n\n  /**\n   * Calculate device statistics for real-time data\n   */\n  private calculateDeviceStats(visitors: any[]): any {\n    if (visitors.length === 0) return null;\n\n    const deviceTypes = visitors.reduce((acc: Record<string, number>, v) => {\n      if (v.device?.type) {\n        acc[v.device.type] = (acc[v.device.type] || 0) + 1;\n      }\n      return acc;\n    }, {});\n\n    const browsers = visitors.reduce((acc: Record<string, number>, v) => {\n      if (v.device?.browser) {\n        acc[v.device.browser] = (acc[v.device.browser] || 0) + 1;\n      }\n      return acc;\n    }, {});\n\n    const operatingSystems = visitors.reduce((acc: Record<string, number>, v) => {\n      if (v.device?.os) {\n        acc[v.device.os] = (acc[v.device.os] || 0) + 1;\n      }\n      return acc;\n    }, {});\n\n    return {\n      deviceTypes,\n      browsers,\n      operatingSystems,\n      mobilePercentage: deviceTypes.mobile ? (deviceTypes.mobile / visitors.length) * 100 : 0\n    };\n  }\n\n  /**\n   * Calculate location statistics for real-time data\n   */\n  private calculateLocationStats(visitors: any[]): any {\n    if (visitors.length === 0) return null;\n\n    const countries = visitors.reduce((acc: Record<string, number>, v) => {\n      if (v.location?.country) {\n        acc[v.location.country] = (acc[v.location.country] || 0) + 1;\n      }\n      return acc;\n    }, {});\n\n    const cities = visitors.reduce((acc: Record<string, number>, v) => {\n      if (v.location?.city) {\n        acc[v.location.city] = (acc[v.location.city] || 0) + 1;\n      }\n      return acc;\n    }, {});\n\n    const regions = visitors.reduce((acc: Record<string, number>, v) => {\n      if (v.location?.region) {\n        acc[v.location.region] = (acc[v.location.region] || 0) + 1;\n      }\n      return acc;\n    }, {});\n\n    return {\n      countries,\n      cities,\n      regions,\n      topCountry: Object.entries(countries).sort((a, b) => b[1] - a[1])[0]?.[0],\n      totalCountries: Object.keys(countries).length\n    };\n  }\n\n  /**\n   * Analyze visitor behavior signals for intent scoring\n   */\n  private analyzeVisitorSignals(currentSession: any, visitorSessions: any[]): any {\n    const signals = {\n      engagementSignals: [],\n      behavioralSignals: [],\n      intentSignals: [],\n      riskSignals: []\n    };\n\n    // Engagement signals\n    if (currentSession.duration > 300) { // 5+ minutes\n      signals.engagementSignals.push({\n        type: 'long_session',\n        value: currentSession.duration,\n        weight: 0.8,\n        description: `Extended session duration of ${Math.round(currentSession.duration / 60)} minutes`\n      });\n    }\n\n    if (currentSession.pageViews > 5) {\n      signals.engagementSignals.push({\n        type: 'high_page_views',\n        value: currentSession.pageViews,\n        weight: 0.7,\n        description: `High engagement with ${currentSession.pageViews} page views`\n      });\n    }\n\n    if (currentSession.interactions > 10) {\n      signals.engagementSignals.push({\n        type: 'high_interactions',\n        value: currentSession.interactions,\n        weight: 0.6,\n        description: `Active user with ${currentSession.interactions} interactions`\n      });\n    }\n\n    if (currentSession.scrollDepth > 75) {\n      signals.engagementSignals.push({\n        type: 'deep_scroll',\n        value: currentSession.scrollDepth,\n        weight: 0.5,\n        description: `Deep content engagement with ${currentSession.scrollDepth}% scroll depth`\n      });\n    }\n\n    // Behavioral signals\n    const isReturning = visitorSessions.length > 1;\n    if (isReturning) {\n      signals.behavioralSignals.push({\n        type: 'returning_visitor',\n        value: visitorSessions.length,\n        weight: 0.9,\n        description: `Returning visitor with ${visitorSessions.length} total sessions`\n      });\n    }\n\n    // Calculate average session duration across all sessions\n    const avgSessionDuration = visitorSessions.reduce((sum, s) => sum + s.duration, 0) / visitorSessions.length;\n    if (avgSessionDuration > 180) { // 3+ minutes average\n      signals.behavioralSignals.push({\n        type: 'consistent_engagement',\n        value: avgSessionDuration,\n        weight: 0.7,\n        description: `Consistent engagement with ${Math.round(avgSessionDuration / 60)} minute average sessions`\n      });\n    }\n\n    // Intent signals based on pages visited\n    const landingPage = currentSession.landingPage?.toLowerCase() || '';\n    const exitPage = currentSession.exitPage?.toLowerCase() || '';\n\n    if (landingPage.includes('pricing') || exitPage.includes('pricing')) {\n      signals.intentSignals.push({\n        type: 'pricing_interest',\n        value: 1,\n        weight: 0.9,\n        description: 'Visited pricing page indicating purchase intent'\n      });\n    }\n\n    if (landingPage.includes('contact') || exitPage.includes('contact') || landingPage.includes('demo')) {\n      signals.intentSignals.push({\n        type: 'contact_interest',\n        value: 1,\n        weight: 0.8,\n        description: 'Visited contact/demo page indicating high intent'\n      });\n    }\n\n    if (currentSession.conversionValue > 0) {\n      signals.intentSignals.push({\n        type: 'conversion_completed',\n        value: currentSession.conversionValue,\n        weight: 1.0,\n        description: `Completed conversion with value ${currentSession.conversionValue}`\n      });\n    }\n\n    // Risk signals\n    if (currentSession.bounceRate > 0.8) {\n      signals.riskSignals.push({\n        type: 'high_bounce_risk',\n        value: currentSession.bounceRate,\n        weight: -0.5,\n        description: 'High bounce rate indicates potential disengagement'\n      });\n    }\n\n    if (currentSession.duration < 30) { // Less than 30 seconds\n      signals.riskSignals.push({\n        type: 'quick_exit',\n        value: currentSession.duration,\n        weight: -0.6,\n        description: 'Very short session duration suggests low interest'\n      });\n    }\n\n    // Traffic source insights\n    if (currentSession.source === 'direct' && isReturning) {\n      signals.behavioralSignals.push({\n        type: 'direct_return',\n        value: 1,\n        weight: 0.8,\n        description: 'Direct traffic from returning visitor shows brand awareness'\n      });\n    }\n\n    if (currentSession.source === 'organic') {\n      signals.behavioralSignals.push({\n        type: 'organic_discovery',\n        value: 1,\n        weight: 0.6,\n        description: 'Organic search traffic indicates active problem-solving'\n      });\n    }\n\n    return signals;\n  }\n\n  /**\n   * Generate personalized recommendation based on visitor signals\n   */\n  private generateRecommendation(currentSession: any, signals: any): any {\n    const recommendations = [];\n    let urgency = 'low';\n    let priority = 1;\n\n    // Calculate overall intent score from signals\n    let intentScore = currentSession.intentScore || 0;\n    \n    // Analyze engagement signals\n    if (signals.engagementSignals.length > 2) {\n      recommendations.push({\n        action: 'immediate_engagement',\n        channel: 'live_chat',\n        message: 'Offer live chat assistance due to high engagement',\n        reason: 'Multiple strong engagement signals detected'\n      });\n      urgency = 'high';\n      priority = 3;\n    }\n\n    // Analyze intent signals\n    const hasHighIntent = signals.intentSignals.some(s => s.weight > 0.8);\n    if (hasHighIntent) {\n      recommendations.push({\n        action: 'sales_outreach',\n        channel: 'phone',\n        message: 'Schedule immediate sales call',\n        reason: 'High purchase intent detected',\n        timing: 'within_1_hour'\n      });\n      urgency = 'critical';\n      priority = 5;\n    }\n\n    // Pricing page visitors\n    const visitedPricing = signals.intentSignals.some(s => s.type === 'pricing_interest');\n    if (visitedPricing) {\n      recommendations.push({\n        action: 'pricing_assistance',\n        channel: 'email',\n        message: 'Send personalized pricing information and case studies',\n        reason: 'Showed interest in pricing',\n        timing: 'within_2_hours'\n      });\n      \n      if (currentSession.duration > 180) { // 3+ minutes on pricing\n        recommendations.push({\n          action: 'discount_offer',\n          channel: 'popup',\n          message: 'Offer limited-time discount or consultation',\n          reason: 'Extended time on pricing page',\n          timing: 'immediate'\n        });\n      }\n    }\n\n    // Returning visitor recommendations\n    const isReturning = signals.behavioralSignals.some(s => s.type === 'returning_visitor');\n    if (isReturning && !hasHighIntent) {\n      recommendations.push({\n        action: 'nurture_campaign',\n        channel: 'email',\n        message: 'Add to targeted nurture campaign with case studies',\n        reason: 'Returning visitor showing continued interest',\n        timing: 'within_24_hours'\n      });\n    }\n\n    // Mobile-specific recommendations\n    if (currentSession.deviceType === 'mobile') {\n      recommendations.push({\n        action: 'mobile_optimization',\n        channel: 'whatsapp',\n        message: 'Offer WhatsApp consultation for mobile convenience',\n        reason: 'Mobile user in African market',\n        timing: 'within_4_hours'\n      });\n    }\n\n    // Geographic recommendations\n    if (currentSession.country === 'Nigeria' || currentSession.country === 'South Africa') {\n      recommendations.push({\n        action: 'local_approach',\n        channel: 'sms',\n        message: 'Send localized message with regional case studies',\n        reason: 'African market visitor',\n        timing: 'within_6_hours'\n      });\n    }\n\n    // Risk mitigation\n    const hasRiskSignals = signals.riskSignals.length > 0;\n    if (hasRiskSignals && !hasHighIntent) {\n      recommendations.push({\n        action: 'retention_effort',\n        channel: 'popup',\n        message: 'Show value proposition or offer assistance',\n        reason: 'Risk signals detected - prevent bounce',\n        timing: 'immediate'\n      });\n    }\n\n    // Default recommendation for new visitors\n    if (!isReturning && intentScore < 50) {\n      recommendations.push({\n        action: 'lead_magnet',\n        channel: 'popup',\n        message: 'Offer valuable content download for email capture',\n        reason: 'New visitor - build relationship',\n        timing: 'after_60_seconds'\n      });\n    }\n\n    return {\n      recommendations,\n      urgency,\n      priority,\n      nextBestAction: recommendations.length > 0 ? recommendations[0] : null,\n      confidence: Math.min(intentScore / 100 + (signals.engagementSignals.length * 0.1), 1.0),\n      reasoning: {\n        intentScore,\n        engagementLevel: signals.engagementSignals.length > 2 ? 'high' : signals.engagementSignals.length > 0 ? 'medium' : 'low',\n        riskLevel: signals.riskSignals.length > 1 ? 'high' : signals.riskSignals.length > 0 ? 'medium' : 'low',\n        visitorType: isReturning ? 'returning' : 'new'\n      }\n    };\n  }\n\n  /**\n   * Parse date range string to number of days\n   */\n  private parseDateRange(dateRange: string): number {\n    const rangeMap: Record<string, number> = {\n      '1d': 1,\n      '7d': 7,\n      '14d': 14,\n      '30d': 30,\n      '60d': 60,\n      '90d': 90,\n      '180d': 180,\n      '365d': 365\n    };\n    return rangeMap[dateRange] || 30;\n  }\n\n  /**\n   * Analyze visitor progression through conversion funnel\n   */\n  private analyzeFunnelProgression(sessions: any[], funnelSteps: any[]): any {\n    const stepAnalysis = [];\n    let previousStepVisitors = sessions.length;\n\n    // Analyze each funnel step\n    for (let i = 0; i < funnelSteps.length; i++) {\n      const step = funnelSteps[i];\n      let stepVisitors = 0;\n      let stepRevenue = 0;\n\n      if (step.conversionRequired) {\n        // Final conversion step - count sessions with conversions\n        const convertedSessions = sessions.filter(session => session.conversionValue > 0);\n        stepVisitors = convertedSessions.length;\n        stepRevenue = convertedSessions.reduce((sum, session) => sum + session.conversionValue, 0);\n      } else {\n        // Page visit step - count sessions that visited matching pages\n        stepVisitors = sessions.filter(session => {\n          const landingPage = session.landingPage?.toLowerCase() || '';\n          const exitPage = session.exitPage?.toLowerCase() || '';\n          const pattern = new RegExp(step.pagePattern, 'i');\n          return pattern.test(landingPage) || pattern.test(exitPage);\n        }).length;\n      }\n\n      const conversionRate = previousStepVisitors > 0 ? (stepVisitors / previousStepVisitors) * 100 : 0;\n      const dropOffRate = previousStepVisitors > 0 ? ((previousStepVisitors - stepVisitors) / previousStepVisitors) * 100 : 0;\n\n      stepAnalysis.push({\n        step: i + 1,\n        name: step.name,\n        visitors: stepVisitors,\n        conversionRate: Math.round(conversionRate * 100) / 100,\n        dropOffRate: Math.round(dropOffRate * 100) / 100,\n        revenue: stepRevenue,\n        pattern: step.pagePattern || 'conversion'\n      });\n\n      previousStepVisitors = stepVisitors;\n    }\n\n    // Calculate overall metrics\n    const totalSessions = sessions.length;\n    const totalConversions = stepAnalysis[stepAnalysis.length - 1]?.visitors || 0;\n    const totalRevenue = stepAnalysis[stepAnalysis.length - 1]?.revenue || 0;\n    const overallConversion = totalSessions > 0 ? (totalConversions / totalSessions) * 100 : 0;\n    const averageOrderValue = totalConversions > 0 ? totalRevenue / totalConversions : 0;\n\n    // Find best and worst performing steps\n    const stepRates = stepAnalysis.slice(1).map(step => ({ name: step.name, rate: step.conversionRate }));\n    const bestStep = stepRates.reduce((max, step) => step.rate > max.rate ? step : max, stepRates[0] || { name: 'N/A', rate: 0 });\n    const worstStep = stepRates.reduce((min, step) => step.rate < min.rate ? step : min, stepRates[0] || { name: 'N/A', rate: 0 });\n    \n    // Find biggest drop-off\n    const dropOffs = stepAnalysis.map(step => ({ name: step.name, dropOff: step.dropOffRate }));\n    const biggestDropOff = dropOffs.reduce((max, step) => step.dropOff > max.dropOff ? step : max, dropOffs[0] || { name: 'N/A', dropOff: 0 });\n\n    return {\n      steps: stepAnalysis,\n      overallConversion: Math.round(overallConversion * 100) / 100,\n      totalRevenue: Math.round(totalRevenue * 100) / 100,\n      averageOrderValue: Math.round(averageOrderValue * 100) / 100,\n      bestStep: bestStep.name,\n      worstStep: worstStep.name,\n      biggestDropOff: biggestDropOff.name\n    };\n  }\n\n  /**\n   * Analyze funnel performance by customer segments\n   */\n  private async analyzeFunnelBySegments(sessions: any[], funnelSteps: any[], authContext: MCPAuthContext): Promise<any[]> {\n    try {\n      // Get segments for the organization\n      const segments = await prisma.segment.findMany({\n        where: {\n          createdBy: {\n            organizationId: authContext.organizationId\n          }\n        },\n        include: {\n          members: {\n            include: {\n              contact: true\n            }\n          }\n        }\n      });\n\n      const segmentAnalysis = [];\n\n      // Analyze new vs returning visitors\n      const newVisitorSessions = sessions.filter(session => {\n        const visitorSessions = sessions.filter(s => s.visitorId === session.visitorId);\n        return visitorSessions.length === 1;\n      });\n\n      const returningVisitorSessions = sessions.filter(session => {\n        const visitorSessions = sessions.filter(s => s.visitorId === session.visitorId);\n        return visitorSessions.length > 1;\n      });\n\n      // Analyze new visitors\n      if (newVisitorSessions.length > 0) {\n        const newVisitorFunnel = this.analyzeFunnelProgression(newVisitorSessions, funnelSteps);\n        segmentAnalysis.push({\n          name: 'New Visitors',\n          totalSessions: newVisitorSessions.length,\n          overallConversion: newVisitorFunnel.overallConversion,\n          totalRevenue: newVisitorFunnel.totalRevenue,\n          averageOrderValue: newVisitorFunnel.averageOrderValue,\n          topDropOffStep: newVisitorFunnel.biggestDropOff,\n          steps: newVisitorFunnel.steps\n        });\n      }\n\n      // Analyze returning visitors\n      if (returningVisitorSessions.length > 0) {\n        const returningVisitorFunnel = this.analyzeFunnelProgression(returningVisitorSessions, funnelSteps);\n        segmentAnalysis.push({\n          name: 'Returning Visitors',\n          totalSessions: returningVisitorSessions.length,\n          overallConversion: returningVisitorFunnel.overallConversion,\n          totalRevenue: returningVisitorFunnel.totalRevenue,\n          averageOrderValue: returningVisitorFunnel.averageOrderValue,\n          topDropOffStep: returningVisitorFunnel.biggestDropOff,\n          steps: returningVisitorFunnel.steps\n        });\n      }\n\n      // Analyze by device type\n      const mobileReqs = sessions.filter(s => s.deviceType === 'mobile');\n      const desktopSessions = sessions.filter(s => s.deviceType === 'desktop');\n\n      if (mobileReqs.length > 0) {\n        const mobileFunnel = this.analyzeFunnelProgression(mobileReqs, funnelSteps);\n        segmentAnalysis.push({\n          name: 'Mobile Visitors',\n          totalSessions: mobileReqs.length,\n          overallConversion: mobileFunnel.overallConversion,\n          totalRevenue: mobileFunnel.totalRevenue,\n          averageOrderValue: mobileFunnel.averageOrderValue,\n          topDropOffStep: mobileFunnel.biggestDropOff,\n          steps: mobileFunnel.steps\n        });\n      }\n\n      if (desktopSessions.length > 0) {\n        const desktopFunnel = this.analyzeFunnelProgression(desktopSessions, funnelSteps);\n        segmentAnalysis.push({\n          name: 'Desktop Visitors',\n          totalSessions: desktopSessions.length,\n          overallConversion: desktopFunnel.overallConversion,\n          totalRevenue: desktopFunnel.totalRevenue,\n          averageOrderValue: desktopFunnel.averageOrderValue,\n          topDropOffStep: desktopFunnel.biggestDropOff,\n          steps: desktopFunnel.steps\n        });\n      }\n\n      // Analyze by traffic source\n      const organicSessions = sessions.filter(s => s.source === 'organic');\n      const directSessions = sessions.filter(s => s.source === 'direct');\n      const socialSessions = sessions.filter(s => s.source === 'social');\n\n      if (organicSessions.length > 0) {\n        const organicFunnel = this.analyzeFunnelProgression(organicSessions, funnelSteps);\n        segmentAnalysis.push({\n          name: 'Organic Traffic',\n          totalSessions: organicSessions.length,\n          overallConversion: organicFunnel.overallConversion,\n          totalRevenue: organicFunnel.totalRevenue,\n          averageOrderValue: organicFunnel.averageOrderValue,\n          topDropOffStep: organicFunnel.biggestDropOff,\n          steps: organicFunnel.steps\n        });\n      }\n\n      return segmentAnalysis;\n\n    } catch (error) {\n      console.error('Error analyzing funnel by segments:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Generate actionable insights from funnel data\n   */\n  private generateFunnelInsights(steps: any[], segmentData?: any[]): string[] {\n    const insights: string[] = [];\n\n    // Overall funnel insights\n    if (steps.length > 0) {\n      const firstStep = steps[0];\n      const lastStep = steps[steps.length - 1];\n      \n      insights.push(`Funnel starts with ${firstStep.visitors.toLocaleString()} visitors and converts ${lastStep.visitors.toLocaleString()} (${lastStep.conversionRate}% overall)`);\n\n      // Find biggest drop-off\n      const biggestDropOff = steps.reduce((max, step) => step.dropOffRate > max.dropOffRate ? step : max, steps[0]);\n      if (biggestDropOff.dropOffRate > 50) {\n        insights.push(`⚠️ Critical drop-off at ${biggestDropOff.name} (${biggestDropOff.dropOffRate}% exit rate) - requires immediate optimization`);\n      } else if (biggestDropOff.dropOffRate > 30) {\n        insights.push(`📉 Significant drop-off at ${biggestDropOff.name} (${biggestDropOff.dropOffRate}% exit rate) - optimization opportunity`);\n      }\n\n      // Revenue insights\n      const revenueStep = steps.find(step => step.revenue > 0);\n      if (revenueStep) {\n        insights.push(`💰 Generated ${revenueStep.revenue.toLocaleString()} in revenue from ${revenueStep.visitors} conversions`);\n      }\n\n      // Conversion rate insights\n      const overallRate = lastStep.conversionRate;\n      if (overallRate > 5) {\n        insights.push(`🎯 Excellent conversion rate of ${overallRate}% - above industry average`);\n      } else if (overallRate > 2) {\n        insights.push(`✅ Good conversion rate of ${overallRate}% - room for improvement`);\n      } else {\n        insights.push(`📊 Conversion rate of ${overallRate}% is below average - funnel optimization needed`);\n      }\n    }\n\n    // Segment-specific insights\n    if (segmentData && segmentData.length > 0) {\n      const newVisitors = segmentData.find(s => s.name === 'New Visitors');\n      const returningVisitors = segmentData.find(s => s.name === 'Returning Visitors');\n\n      if (newVisitors && returningVisitors) {\n        const conversionDiff = returningVisitors.overallConversion - newVisitors.overallConversion;\n        if (conversionDiff > 2) {\n          insights.push(`🔄 Returning visitors convert ${conversionDiff.toFixed(1)}x better (${returningVisitors.overallConversion}% vs ${newVisitors.overallConversion}%)`);\n        }\n      }\n\n      const mobileSegment = segmentData.find(s => s.name === 'Mobile Visitors');\n      const desktopSegment = segmentData.find(s => s.name === 'Desktop Visitors');\n\n      if (mobileSegment && desktopSegment) {\n        if (mobileSegment.overallConversion < desktopSegment.overallConversion * 0.7) {\n          insights.push(`📱 Mobile conversion (${mobileSegment.overallConversion}%) significantly lower than desktop (${desktopSegment.overallConversion}%) - mobile optimization needed`);\n        }\n      }\n\n      // Traffic source insights\n      const organicSegment = segmentData.find(s => s.name === 'Organic Traffic');\n      if (organicSegment && organicSegment.overallConversion > 3) {\n        insights.push(`🌱 Organic traffic shows strong intent with ${organicSegment.overallConversion}% conversion - invest in SEO`);\n      }\n    }\n\n    // African market specific insights\n    insights.push(`🌍 Consider African market optimization: mobile-first design, WhatsApp integration, and local payment methods`);\n\n    return insights;\n  }\n}"],"names":["LeadPulseMCPServer","BaseMCPServer","constructor","config","defaultMCPConfig","servers","leadpulse","listResources","authContext","resources","uri","name","description","mimeType","permissions","includes","filter","r","readResource","url","URL","path","pathname","searchParams","queryParams","Object","fromEntries","entries","validatedQuery","LeadPulseQuerySchema","parse","organizationId","limit","Number","parseInt","offset","includeHeatmap","includeJourney","getVisitorData","getSessionData","getHeatmapData","getJourneyData","getConversionData","getAnalyticsData","MCPValidationError","listTools","tools","inputSchema","type","properties","visitorId","default","required","sessionId","timeRange","enum","funnelId","dateRange","includeSegments","pageUrl","includeLocation","includeDevice","threshold","minimum","maximum","t","callTool","args","trackVisitor","analyzeVisitorBehavior","getConversionFunnel","getPageAnalytics","getRealTimeVisitors","identifyHighIntentVisitors","query","startTime","Date","now","whereClause","dateFrom","dateTo","sessionStart","gte","lte","visitorSessions","prisma","mCPVisitorSessions","findMany","where","take","skip","include","organization","select","id","orderBy","visitors","map","session","toISOString","endTime","sessionEnd","pageViews","duration","bounce","bounceRate","converted","conversionValue","intentScore","geoLocation","country","city","region","device","deviceType","browser","os","operatingSystem","traffic","source","medium","campaign","referrer","engagement","scrollDepth","timeOnPage","avgTimeOnPage","interactions","exitPage","insights","JSON","totalSessions","length","totalPageViews","reduce","sum","v","avgDuration","conversionRate","avgIntentScore","deviceDistribution","acc","countryDistribution","logMCPResourceAccess","dataSize","text","stringify","summary","averageDuration","Math","round","meta","total","timestamp","error","errorMessage","Error","message","createFallbackResponse","getVisitorDataFallback","logMCPToolExecution","riskLevel","content","success","isError","currentSession","s","avgSessionDuration","totalConversions","isReturning","firstSessionDate","lastSessionDate","visitorData","currentPage","landingPage","bounced","profile","averageSessionDuration","averageIntentScore","firstSeen","lastSeen","daysSinceFirstVisit","floor","getTime","timezone","getTimezoneFromCountry","trafficSource","behavioral","calculateVisitorBounceRate","engagementScore","calculateEngagementScore","journey","buildVisitorJourney","generateVisitorInsights","outputSize","data","details","behaviorAnalysis","behaviorPattern","pageViewsPerSession","interests","category","score","actions","totalClicks","formSubmissions","downloadRequests","socialShares","predictions","likelihoodToConvert","timeToConversion","preferredChannel","nextBestAction","analysisType","fallbackUsed","daysBack","parseDateRange","startDate","sessions","funnelSteps","pagePattern","conversionRequired","funnelData","analyzeFunnelProgression","segmentData","undefined","analyzeFunnelBySegments","generateFunnelInsights","steps","result","timeframe","endDate","daysAnalyzed","overallConversion","totalRevenue","averageOrderValue","segments","performance","bestPerformingStep","bestStep","worstPerformingStep","worstStep","biggestDropOff","pageAnalytics","metrics","uniqueVisitors","averageTimeOnPage","exitRate","clickThroughRate","heatmapData","clickMap","headerNav","primaryCTA","secondaryCTA","footer","scrollMap","attentionMap","hero","features","pricing","testimonials","thirtyMinutesAgo","activeSessions","Set","currentVisitors","size","pageActivity","activePages","page","sort","a","b","slice","sessionDurationMs","timeOnCurrentPage","max","sessionDuration","isReturningVisitor","isConverted","location","generateRealTimeInsights","previousPeriodStart","previousSessions","count","lt","trafficChange","deviceStats","calculateDeviceStats","locationStats","calculateLocationStats","realTimeData","trafficTrend","change","direction","previousPeriodVisitors","sessionStats","totalActiveSessions","avgPageViews","timeWindow","highIntentSessions","highIntentVisitors","Promise","all","signals","analyzeVisitorSignals","recommendation","generateRecommendation","totalCount","returningVisitors","convertedVisitors","mobileVisitors","statistics","returningPercentage","mobilePercentage","timezoneMap","bouncedSessions","weights","conversions","min","avgInteractions","avgScrollDepth","reverse","forEach","sessionIndex","push","action","timePerPage","i","pageTimestamp","value","conversionType","current","toFixed","countries","Boolean","longSessions","deviceTypes","browsers","operatingSystems","mobile","cities","regions","topCountry","totalCountries","keys","engagementSignals","behavioralSignals","intentSignals","riskSignals","weight","toLowerCase","recommendations","urgency","priority","channel","reason","hasHighIntent","some","timing","visitedPricing","hasRiskSignals","confidence","reasoning","engagementLevel","visitorType","rangeMap","stepAnalysis","previousStepVisitors","step","stepVisitors","stepRevenue","convertedSessions","pattern","RegExp","test","dropOffRate","revenue","stepRates","rate","dropOffs","dropOff","segment","createdBy","members","contact","segmentAnalysis","newVisitorSessions","returningVisitorSessions","newVisitorFunnel","topDropOffStep","returningVisitorFunnel","mobileReqs","desktopSessions","mobileFunnel","desktopFunnel","organicSessions","directSessions","socialSessions","organicFunnel","console","firstStep","lastStep","toLocaleString","revenueStep","find","overallRate","newVisitors","conversionDiff","mobileSegment","desktopSegment","organicSegment"],"mappings":"AAAA;;;;;CAKC;;;;+BAiBYA;;;eAAAA;;;+BAdiB;0BASvB;wBAEgB;2BACU;AAE1B,MAAMA,2BAA2BC,4BAAa;IACnDC,YAAYC,MAAiC,CAAE;QAC7C,KAAK,CAAC;YACJ,GAAGC,2BAAgB,CAACC,OAAO,CAACC,SAAS;YACrC,GAAGH,MAAM;QACX;IACF;IAEA;;GAEC,GACD,MAAgBI,cAAcC,WAA2B,EAAkB;QACzE,MAAMC,YAAY;YAChB;gBACEC,KAAK;gBACLC,MAAM;gBACNC,aAAa;gBACbC,UAAU;YACZ;YACA;gBACEH,KAAK;gBACLC,MAAM;gBACNC,aAAa;gBACbC,UAAU;YACZ;YACA;gBACEH,KAAK;gBACLC,MAAM;gBACNC,aAAa;gBACbC,UAAU;YACZ;YACA;gBACEH,KAAK;gBACLC,MAAM;gBACNC,aAAa;gBACbC,UAAU;YACZ;YACA;gBACEH,KAAK;gBACLC,MAAM;gBACNC,aAAa;gBACbC,UAAU;YACZ;YACA;gBACEH,KAAK;gBACLC,MAAM;gBACNC,aAAa;gBACbC,UAAU;YACZ;SACD;QAED,wCAAwC;QACxC,IAAI,CAACL,YAAYM,WAAW,CAACC,QAAQ,CAAC,QAAQ,CAACP,YAAYM,WAAW,CAACC,QAAQ,CAAC,aAAa;YAC3F,2CAA2C;YAC3C,OAAON,UAAUO,MAAM,CAACC,CAAAA,IAAKA,EAAEP,GAAG,CAACK,QAAQ,CAAC,eAAeE,EAAEP,GAAG,CAACK,QAAQ,CAAC;QAC5E;QAEA,OAAON;IACT;IAEA;;GAEC,GACD,MAAgBS,aAAaR,GAAW,EAAEF,WAA2B,EAAgB;QACnF,MAAMW,MAAM,IAAIC,IAAIV;QACpB,MAAMW,OAAOF,IAAIG,QAAQ;QACzB,MAAMC,eAAeJ,IAAII,YAAY;QAErC,yBAAyB;QACzB,MAAMC,cAAcC,OAAOC,WAAW,CAACH,aAAaI,OAAO;QAC3D,MAAMC,iBAAiBC,8BAAoB,CAACC,KAAK,CAAC;YAChD,GAAGN,WAAW;YACdO,gBAAgBvB,YAAYuB,cAAc;YAC1CC,OAAOR,YAAYQ,KAAK,GAAGC,OAAOC,QAAQ,CAACV,YAAYQ,KAAK,IAAI;YAChEG,QAAQX,YAAYW,MAAM,GAAGF,OAAOC,QAAQ,CAACV,YAAYW,MAAM,IAAI;YACnEC,gBAAgBZ,YAAYY,cAAc,KAAK;YAC/CC,gBAAgBb,YAAYa,cAAc,KAAK;QACjD;QAEA,OAAQhB;YACN,KAAK;gBACH,OAAO,MAAM,IAAI,CAACiB,cAAc,CAACV,gBAAgBpB;YACnD,KAAK;gBACH,OAAO,MAAM,IAAI,CAAC+B,cAAc,CAACX,gBAAgBpB;YACnD,KAAK;gBACH,OAAO,MAAM,IAAI,CAACgC,cAAc,CAACZ,gBAAgBpB;YACnD,KAAK;gBACH,OAAO,MAAM,IAAI,CAACiC,cAAc,CAACb,gBAAgBpB;YACnD,KAAK;gBACH,OAAO,MAAM,IAAI,CAACkC,iBAAiB,CAACd,gBAAgBpB;YACtD,KAAK;gBACH,OAAO,MAAM,IAAI,CAACmC,gBAAgB,CAACf,gBAAgBpB;YACrD;gBACE,MAAM,IAAIoC,4BAAkB,CAAC,CAAC,uBAAuB,EAAEvB,MAAM;QACjE;IACF;IAEA;;GAEC,GACD,MAAgBwB,UAAUrC,WAA2B,EAAkB;QACrE,MAAMsC,QAAQ;YACZ;gBACEnC,MAAM;gBACNC,aAAa;gBACbmC,aAAa;oBACXC,MAAM;oBACNC,YAAY;wBACVC,WAAW;4BACTF,MAAM;4BACNpC,aAAa;wBACf;wBACAyB,gBAAgB;4BACdW,MAAM;4BACNpC,aAAa;4BACbuC,SAAS;wBACX;wBACAf,gBAAgB;4BACdY,MAAM;4BACNpC,aAAa;4BACbuC,SAAS;wBACX;oBACF;oBACAC,UAAU;wBAAC;qBAAY;gBACzB;YACF;YACA;gBACEzC,MAAM;gBACNC,aAAa;gBACbmC,aAAa;oBACXC,MAAM;oBACNC,YAAY;wBACVC,WAAW;4BACTF,MAAM;4BACNpC,aAAa;wBACf;wBACAyC,WAAW;4BACTL,MAAM;4BACNpC,aAAa;wBACf;wBACA0C,WAAW;4BACTN,MAAM;4BACNO,MAAM;gCAAC;gCAAM;gCAAM;gCAAM;6BAAM;4BAC/B3C,aAAa;4BACbuC,SAAS;wBACX;oBACF;oBACAC,UAAU;wBAAC;qBAAY;gBACzB;YACF;YACA;gBACEzC,MAAM;gBACNC,aAAa;gBACbmC,aAAa;oBACXC,MAAM;oBACNC,YAAY;wBACVO,UAAU;4BACRR,MAAM;4BACNpC,aAAa;wBACf;wBACA6C,WAAW;4BACTT,MAAM;4BACNO,MAAM;gCAAC;gCAAM;gCAAO;6BAAM;4BAC1B3C,aAAa;4BACbuC,SAAS;wBACX;wBACAO,iBAAiB;4BACfV,MAAM;4BACNpC,aAAa;4BACbuC,SAAS;wBACX;oBACF;gBACF;YACF;YACA;gBACExC,MAAM;gBACNC,aAAa;gBACbmC,aAAa;oBACXC,MAAM;oBACNC,YAAY;wBACVU,SAAS;4BACPX,MAAM;4BACNpC,aAAa;wBACf;wBACAwB,gBAAgB;4BACdY,MAAM;4BACNpC,aAAa;4BACbuC,SAAS;wBACX;wBACAM,WAAW;4BACTT,MAAM;4BACNO,MAAM;gCAAC;gCAAM;gCAAM;6BAAM;4BACzB3C,aAAa;4BACbuC,SAAS;wBACX;oBACF;oBACAC,UAAU;wBAAC;qBAAU;gBACvB;YACF;YACA;gBACEzC,MAAM;gBACNC,aAAa;gBACbmC,aAAa;oBACXC,MAAM;oBACNC,YAAY;wBACVW,iBAAiB;4BACfZ,MAAM;4BACNpC,aAAa;4BACbuC,SAAS;wBACX;wBACAU,eAAe;4BACbb,MAAM;4BACNpC,aAAa;4BACbuC,SAAS;wBACX;oBACF;gBACF;YACF;YACA;gBACExC,MAAM;gBACNC,aAAa;gBACbmC,aAAa;oBACXC,MAAM;oBACNC,YAAY;wBACVa,WAAW;4BACTd,MAAM;4BACNpC,aAAa;4BACbmD,SAAS;4BACTC,SAAS;4BACTb,SAAS;wBACX;wBACAnB,OAAO;4BACLgB,MAAM;4BACNpC,aAAa;4BACbmD,SAAS;4BACTC,SAAS;4BACTb,SAAS;wBACX;oBACF;gBACF;YACF;SACD;QAED,oCAAoC;QACpC,IAAI,CAAC3C,YAAYM,WAAW,CAACC,QAAQ,CAAC,QAAQ,CAACP,YAAYM,WAAW,CAACC,QAAQ,CAAC,aAAa;YAC3F,kCAAkC;YAClC,OAAO+B,MAAM9B,MAAM,CAACiD,CAAAA,IAAK;oBAAC;oBAAiB;oBAA4B;iBAAyB,CAAClD,QAAQ,CAACkD,EAAEtD,IAAI;QAClH;QAEA,OAAOmC;IACT;IAEA;;GAEC,GACD,MAAgBoB,SAASvD,IAAY,EAAEwD,IAAS,EAAE3D,WAA2B,EAAgB;QAC3F,OAAQG;YACN,KAAK;gBACH,OAAO,MAAM,IAAI,CAACyD,YAAY,CAACD,MAAM3D;YACvC,KAAK;gBACH,OAAO,MAAM,IAAI,CAAC6D,sBAAsB,CAACF,MAAM3D;YACjD,KAAK;gBACH,OAAO,MAAM,IAAI,CAAC8D,mBAAmB,CAACH,MAAM3D;YAC9C,KAAK;gBACH,OAAO,MAAM,IAAI,CAAC+D,gBAAgB,CAACJ,MAAM3D;YAC3C,KAAK;gBACH,OAAO,MAAM,IAAI,CAACgE,mBAAmB,CAACL,MAAM3D;YAC9C,KAAK;gBACH,OAAO,MAAM,IAAI,CAACiE,0BAA0B,CAACN,MAAM3D;YACrD;gBACE,MAAM,IAAIoC,4BAAkB,CAAC,CAAC,cAAc,EAAEjC,MAAM;QACxD;IACF;IAEA;;GAEC,GACD,MAAc2B,eAAeoC,KAAqB,EAAElE,WAA2B,EAAgB;QAC7F,IAAI;YACF,MAAMmE,YAAYC,KAAKC,GAAG;YAE1B,0CAA0C;YAC1C,MAAMC,cAAmB;gBACvB/C,gBAAgBvB,YAAYuB,cAAc;YAC5C;YAEA,IAAI2C,MAAMxB,SAAS,EAAE;gBACnB4B,YAAY5B,SAAS,GAAGwB,MAAMxB,SAAS;YACzC;YAEA,IAAIwB,MAAMK,QAAQ,IAAIL,MAAMM,MAAM,EAAE;gBAClCF,YAAYG,YAAY,GAAG,CAAC;gBAC5B,IAAIP,MAAMK,QAAQ,EAAE;oBAClBD,YAAYG,YAAY,CAACC,GAAG,GAAG,IAAIN,KAAKF,MAAMK,QAAQ;gBACxD;gBACA,IAAIL,MAAMM,MAAM,EAAE;oBAChBF,YAAYG,YAAY,CAACE,GAAG,GAAG,IAAIP,KAAKF,MAAMM,MAAM;gBACtD;YACF;YAEA,2CAA2C;YAC3C,MAAMI,kBAAkB,MAAMC,cAAM,CAACC,kBAAkB,CAACC,QAAQ,CAAC;gBAC/DC,OAAOV;gBACPW,MAAMf,MAAM1C,KAAK;gBACjB0D,MAAMhB,MAAMvC,MAAM;gBAClBwD,SAAS;oBACPC,cAAc;wBACZC,QAAQ;4BAAEC,IAAI;4BAAMnF,MAAM;wBAAK;oBACjC;gBACF;gBACAoF,SAAS;oBACPd,cAAc;gBAChB;YACF;YAEA,uCAAuC;YACvC,MAAMe,WAAWZ,gBAAgBa,GAAG,CAACC,CAAAA,UAAY,CAAA;oBAC/CJ,IAAII,QAAQhD,SAAS;oBACrBG,WAAW6C,QAAQ7C,SAAS;oBAC5BtB,gBAAgBmE,QAAQnE,cAAc;oBACtC4C,WAAWuB,QAAQjB,YAAY,CAACkB,WAAW;oBAC3CC,SAASF,QAAQG,UAAU,CAACF,WAAW;oBACvCG,WAAWJ,QAAQI,SAAS;oBAC5BC,UAAUL,QAAQK,QAAQ;oBAC1BC,QAAQN,QAAQO,UAAU,GAAG;oBAC7BC,WAAWR,QAAQS,eAAe,GAAG;oBACrCC,aAAaV,QAAQU,WAAW;oBAChCC,aAAa;wBACXC,SAASZ,QAAQY,OAAO;wBACxBC,MAAMb,QAAQa,IAAI;wBAClBC,QAAQd,QAAQc,MAAM;oBACxB;oBACAC,QAAQ;wBACNjE,MAAMkD,QAAQgB,UAAU;wBACxBC,SAASjB,QAAQiB,OAAO;wBACxBC,IAAIlB,QAAQmB,eAAe;oBAC7B;oBACAC,SAAS;wBACPC,QAAQrB,QAAQqB,MAAM;wBACtBC,QAAQtB,QAAQsB,MAAM;wBACtBC,UAAUvB,QAAQuB,QAAQ;wBAC1BC,UAAUxB,QAAQwB,QAAQ;oBAC5B;oBACAC,YAAY;wBACVC,aAAa1B,QAAQ0B,WAAW;wBAChCC,YAAY3B,QAAQ4B,aAAa;wBACjCC,cAAc7B,QAAQ6B,YAAY;wBAClCC,UAAU9B,QAAQ8B,QAAQ;oBAC5B;oBACAC,UAAU/B,QAAQ+B,QAAQ,GAAGC,KAAKpG,KAAK,CAACoE,QAAQ+B,QAAQ,IAAI,EAAE;gBAChE,CAAA;YAEA,+BAA+B;YAC/B,MAAME,gBAAgBnC,SAASoC,MAAM;YACrC,MAAMC,iBAAiBrC,SAASsC,MAAM,CAAC,CAACC,KAAKC,IAAMD,MAAMC,EAAElC,SAAS,EAAE;YACtE,MAAMmC,cAAcN,gBAAgB,IAAInC,SAASsC,MAAM,CAAC,CAACC,KAAKC,IAAMD,MAAMC,EAAEjC,QAAQ,EAAE,KAAK4B,gBAAgB;YAC3G,MAAM1B,aAAa0B,gBAAgB,IAAInC,SAAShF,MAAM,CAACwH,CAAAA,IAAKA,EAAEhC,MAAM,EAAE4B,MAAM,GAAGD,gBAAgB;YAC/F,MAAMO,iBAAiBP,gBAAgB,IAAInC,SAAShF,MAAM,CAACwH,CAAAA,IAAKA,EAAE9B,SAAS,EAAE0B,MAAM,GAAGD,gBAAgB;YACtG,MAAMQ,iBAAiBR,gBAAgB,IAAInC,SAASsC,MAAM,CAAC,CAACC,KAAKC,IAAMD,MAAMC,EAAE5B,WAAW,EAAE,KAAKuB,gBAAgB;YAEjH,mCAAmC;YACnC,MAAMS,qBAAqB5C,SAASsC,MAAM,CAAC,CAACO,KAA6BL;gBACvEK,GAAG,CAACL,EAAEvB,MAAM,CAACjE,IAAI,CAAC,GAAG,AAAC6F,CAAAA,GAAG,CAACL,EAAEvB,MAAM,CAACjE,IAAI,CAAC,IAAI,CAAA,IAAK;gBACjD,OAAO6F;YACT,GAAG,CAAC;YAEJ,MAAMC,sBAAsB9C,SAASsC,MAAM,CAAC,CAACO,KAA6BL;gBACxEK,GAAG,CAACL,EAAE3B,WAAW,CAACC,OAAO,CAAC,GAAG,AAAC+B,CAAAA,GAAG,CAACL,EAAE3B,WAAW,CAACC,OAAO,CAAC,IAAI,CAAA,IAAK;gBACjE,OAAO+B;YACT,GAAG,CAAC;YAEJ,MAAMtC,WAAW3B,KAAKC,GAAG,KAAKF;YAE9B,sBAAsB;YACtB,MAAM,IAAI,CAACoE,oBAAoB,CAC7BvI,aACA,wBACA,QACA,WACA;gBAAE+F;gBAAUyC,UAAUhD,SAASoC,MAAM;YAAC;YAGxC,OAAO;gBACL1H,KAAK;gBACLG,UAAU;gBACVoI,MAAMf,KAAKgB,SAAS,CAAC;oBACnBlD;oBACAmD,SAAS;wBACPhB;wBACAE;wBACAe,iBAAiBC,KAAKC,KAAK,CAACb;wBAC5BhC,YAAY4C,KAAKC,KAAK,CAAC7C,aAAa,MAAM,OAAO;wBACjDiC,gBAAgBW,KAAKC,KAAK,CAACZ,iBAAiB,MAAM,OAAO;wBACzDC,gBAAgBU,KAAKC,KAAK,CAACX,iBAAiB,OAAO;wBACnDC;wBACAE;oBACF;oBACAS,MAAM;wBACJ7E,OAAO;4BACL1C,OAAO0C,MAAM1C,KAAK;4BAClBG,QAAQuC,MAAMvC,MAAM;4BACpBJ,gBAAgBvB,YAAYuB,cAAc;wBAC5C;wBACAyH,OAAOxD,SAASoC,MAAM;wBACtBqB,WAAW,IAAI7E,OAAOuB,WAAW;wBACjCI;wBACAgB,QAAQ;oBACV;gBACF;YACF;QACF,EAAE,OAAOmC,OAAO;YACd,oBAAoB;YACpB,MAAM,IAAI,CAACX,oBAAoB,CAC7BvI,aACA,wBACA,QACA,WACA;gBAAEmJ,cAAcD,iBAAiBE,QAAQF,MAAMG,OAAO,GAAG;YAAgB;YAG3E,OAAO,MAAM,IAAI,CAACC,sBAAsB,CACtC,IAAM,IAAI,CAACC,sBAAsB,CAACrF,OAAOlE,cACzC;QAEJ;IACF;IAEA;;GAEC,GACD,MAAc4D,aAAaD,IAAS,EAAE3D,WAA2B,EAAgB;QAC/E,MAAM,EAAE0C,SAAS,EAAEb,iBAAiB,IAAI,EAAED,iBAAiB,KAAK,EAAE,GAAG+B;QACrE,MAAMQ,YAAYC,KAAKC,GAAG;QAE1B,IAAI;YACF,qBAAqB;YACrB,MAAM,IAAI,CAACmF,mBAAmB,CAC5BxJ,aACA,iBACA2D,MACA,WACA;gBAAEoC,UAAU;gBAAG0D,WAAW;YAAM;YAGlC,sCAAsC;YACtC,MAAM7E,kBAAkB,MAAMC,cAAM,CAACC,kBAAkB,CAACC,QAAQ,CAAC;gBAC/DC,OAAO;oBACLtC;oBACAnB,gBAAgBvB,YAAYuB,cAAc;gBAC5C;gBACA4D,SAAS;oBACPC,cAAc;wBACZC,QAAQ;4BAAEC,IAAI;4BAAMnF,MAAM;wBAAK;oBACjC;gBACF;gBACAoF,SAAS;oBACPd,cAAc;gBAChB;gBACAQ,MAAM,GAAG,gCAAgC;YAC3C;YAEA,IAAIL,gBAAgBgD,MAAM,KAAK,GAAG;gBAChC,MAAM7B,WAAW3B,KAAKC,GAAG,KAAKF;gBAE9B,MAAM,IAAI,CAACqF,mBAAmB,CAC5BxJ,aACA,iBACA2D,MACA,WACA;oBACEoC;oBACAoD,cAAc;oBACdM,WAAW;gBACb;gBAGF,OAAO;oBACLC,SAAS;wBAAC;4BACRlH,MAAM;4BACNiG,MAAMf,KAAKgB,SAAS,CAAC;gCACnBiB,SAAS;gCACTT,OAAO;gCACPxG;4BACF;wBACF;qBAAE;oBACFkH,SAAS;gBACX;YACF;YAEA,oCAAoC;YACpC,MAAMC,iBAAiBjF,eAAe,CAAC,EAAE;YAEzC,8CAA8C;YAC9C,MAAM+C,gBAAgB/C,gBAAgBgD,MAAM;YAC5C,MAAMC,iBAAiBjD,gBAAgBkD,MAAM,CAAC,CAACC,KAAK+B,IAAM/B,MAAM+B,EAAEhE,SAAS,EAAE;YAC7E,MAAMiE,qBAAqBnF,gBAAgBkD,MAAM,CAAC,CAACC,KAAK+B,IAAM/B,MAAM+B,EAAE/D,QAAQ,EAAE,KAAK4B;YACrF,MAAMqC,mBAAmBpF,gBAAgBpE,MAAM,CAACsJ,CAAAA,IAAKA,EAAE3D,eAAe,GAAG,GAAGyB,MAAM;YAClF,MAAMO,iBAAiBvD,gBAAgBkD,MAAM,CAAC,CAACC,KAAK+B,IAAM/B,MAAM+B,EAAE1D,WAAW,EAAE,KAAKuB;YAEpF,iCAAiC;YACjC,MAAMsC,cAActC,gBAAgB;YACpC,MAAMuC,mBAAmBtF,eAAe,CAACA,gBAAgBgD,MAAM,GAAG,EAAE,CAACnD,YAAY;YACjF,MAAM0F,kBAAkBvF,eAAe,CAAC,EAAE,CAACH,YAAY;YAEvD,wBAAwB;YACxB,MAAM2F,cAAc;gBAClB9E,IAAI5C;gBACJmH,gBAAgB;oBACdhH,WAAWgH,eAAehH,SAAS;oBACnCsB,WAAW0F,eAAepF,YAAY,CAACkB,WAAW;oBAClDC,SAASiE,eAAehE,UAAU,CAACF,WAAW;oBAC9C0E,aAAaR,eAAerC,QAAQ,IAAIqC,eAAeS,WAAW;oBAClExE,WAAW+D,eAAe/D,SAAS;oBACnCC,UAAU8D,eAAe9D,QAAQ;oBACjCwB,cAAcsC,eAAetC,YAAY;oBACzCnB,aAAayD,eAAezD,WAAW;oBACvCgB,aAAayC,eAAezC,WAAW;oBACvCmD,SAASV,eAAe5D,UAAU,GAAG;oBACrCC,WAAW2D,eAAe1D,eAAe,GAAG;oBAC5CA,iBAAiB0D,eAAe1D,eAAe;gBACjD;gBACAqE,SAAS;oBACPP;oBACAtC;oBACAE;oBACAmC;oBACAS,wBAAwB5B,KAAKC,KAAK,CAACiB;oBACnCW,oBAAoB7B,KAAKC,KAAK,CAACX,iBAAiB,OAAO;oBACvDwC,WAAWT,iBAAiBvE,WAAW;oBACvCiF,UAAUT,gBAAgBxE,WAAW;oBACrCkF,qBAAqBhC,KAAKiC,KAAK,CAAC,AAAC1G,CAAAA,KAAKC,GAAG,KAAK6F,iBAAiBa,OAAO,EAAC,IAAM,CAAA,OAAO,KAAK,KAAK,EAAC;gBACjG;gBACA1E,aAAa;oBACXC,SAASuD,eAAevD,OAAO;oBAC/BC,MAAMsD,eAAetD,IAAI;oBACzBC,QAAQqD,eAAerD,MAAM;oBAC7BwE,UAAU,IAAI,CAACC,sBAAsB,CAACpB,eAAevD,OAAO;gBAC9D;gBACAG,QAAQ;oBACNjE,MAAMqH,eAAenD,UAAU;oBAC/BC,SAASkD,eAAelD,OAAO;oBAC/BC,IAAIiD,eAAehD,eAAe;gBACpC;gBACAqE,eAAe;oBACbnE,QAAQ8C,eAAe9C,MAAM;oBAC7BC,QAAQ6C,eAAe7C,MAAM;oBAC7BC,UAAU4C,eAAe5C,QAAQ;oBACjCC,UAAU2C,eAAe3C,QAAQ;gBACnC;gBACAiE,YAAY;oBACV7D,eAAeuC,eAAevC,aAAa;oBAC3CrB,YAAY,IAAI,CAACmF,0BAA0B,CAACxG;oBAC5CsD,gBAAgB8B,mBAAmBrC,gBAAgB;oBACnD0D,iBAAiB,IAAI,CAACC,wBAAwB,CAAC1G;gBACjD;YACF;YAEA,gCAAgC;YAChC,IAAI/C,gBAAgB;gBAClBuI,YAAYmB,OAAO,GAAG,IAAI,CAACC,mBAAmB,CAAC5G;YACjD;YAEA,eAAe;YACfwF,YAAY3C,QAAQ,GAAG,IAAI,CAACgE,uBAAuB,CAACrB,aAAaxF;YAEjE,MAAMmB,WAAW3B,KAAKC,GAAG,KAAKF;YAE9B,gCAAgC;YAChC,MAAM,IAAI,CAACqF,mBAAmB,CAC5BxJ,aACA,iBACA2D,MACA,WACA;gBACEoC;gBACA2F,YAAY;gBACZjC,WAAW5H,iBAAiB,WAAW;YACzC;YAGF,OAAO;gBACL6H,SAAS;oBAAC;wBACRlH,MAAM;wBACNiG,MAAMf,KAAKgB,SAAS,CAAC;4BACnBiB,SAAS;4BACTgC,MAAMvB;4BACNrB,MAAM;gCACJlH;gCACAD;gCACAqH,WAAW,IAAI7E,OAAOuB,WAAW;gCACjCI;gCACAgB,QAAQ;4BACV;wBACF;oBACF;iBAAE;YACJ;QACF,EAAE,OAAOmC,OAAO;YACd,MAAMnD,WAAW3B,KAAKC,GAAG,KAAKF;YAE9B,4BAA4B;YAC5B,MAAM,IAAI,CAACqF,mBAAmB,CAC5BxJ,aACA,iBACA2D,MACA,WACA;gBACEoC;gBACAoD,cAAcD,iBAAiBE,QAAQF,MAAMG,OAAO,GAAG;gBACvDI,WAAW;YACb;YAGF,OAAO;gBACLC,SAAS;oBAAC;wBACRlH,MAAM;wBACNiG,MAAMf,KAAKgB,SAAS,CAAC;4BACnBiB,SAAS;4BACTT,OAAO;4BACP0C,SAAS1C,iBAAiBE,QAAQF,MAAMG,OAAO,GAAG;wBACpD;oBACF;iBAAE;gBACFO,SAAS;YACX;QACF;IACF;IAEA;;GAEC,GACD,MAAc/F,uBAAuBF,IAAS,EAAE3D,WAA2B,EAAgB;QACzF,MAAM,EAAE0C,SAAS,EAAEG,SAAS,EAAEC,YAAY,IAAI,EAAE,GAAGa;QAEnD,IAAI;YACF,gCAAgC;YAChC,MAAMkI,mBAAmB;gBACvBnJ;gBACAG;gBACAC;gBACAgJ,iBAAiB;oBACfC,qBAAqB;oBACrBtB,wBAAwB;oBACxBxE,YAAY;oBACZiC,gBAAgB;oBAChBmD,iBAAiB;gBACnB;gBACAW,WAAW;oBACT;wBAAEC,UAAU;wBAAoBC,OAAO;oBAAG;oBAC1C;wBAAED,UAAU;wBAAaC,OAAO;oBAAG;oBACnC;wBAAED,UAAU;wBAAcC,OAAO;oBAAG;iBACrC;gBACDC,SAAS;oBACPC,aAAa;oBACbC,iBAAiB;oBACjBC,kBAAkB;oBAClBC,cAAc;gBAChB;gBACAC,aAAa;oBACXC,qBAAqB;oBACrBC,kBAAkB;oBAClBC,kBAAkB;oBAClBC,gBAAgB;gBAClB;gBACAnF,UAAU;oBACR;oBACA;oBACA;oBACA;iBACD;YACH;YAEA,OAAO;gBACLiC,SAAS;oBAAC;wBACRlH,MAAM;wBACNiG,MAAMf,KAAKgB,SAAS,CAAC;4BACnBiB,SAAS;4BACTgC,MAAME;4BACN9C,MAAM;gCACJjG;gCACA+J,cAAc;gCACd5D,WAAW,IAAI7E,OAAOuB,WAAW;gCACjCmH,cAAc;4BAChB;wBACF;oBACF;iBAAE;YACJ;QACF,EAAE,OAAO5D,OAAO;YACd,OAAO;gBACLQ,SAAS;oBAAC;wBACRlH,MAAM;wBACNiG,MAAMf,KAAKgB,SAAS,CAAC;4BACnBiB,SAAS;4BACTT,OAAO;4BACP0C,SAAS1C,iBAAiBE,QAAQF,MAAMG,OAAO,GAAG;wBACpD;oBACF;iBAAE;gBACFO,SAAS;YACX;QACF;IACF;IAEA;;GAEC,GACD,MAAc9F,oBAAoBH,IAAS,EAAE3D,WAA2B,EAAgB;QACtF,MAAM,EAAEgD,QAAQ,EAAEC,YAAY,KAAK,EAAEC,kBAAkB,KAAK,EAAE,GAAGS;QACjE,MAAMQ,YAAYC,KAAKC,GAAG;QAE1B,IAAI;YACF,uBAAuB;YACvB,MAAM0I,WAAW,IAAI,CAACC,cAAc,CAAC/J;YACrC,MAAMgK,YAAY,IAAI7I,KAAKA,KAAKC,GAAG,KAAK0I,WAAW,KAAK,KAAK,KAAK;YAElE,gDAAgD;YAChD,MAAMG,WAAW,MAAMrI,cAAM,CAACC,kBAAkB,CAACC,QAAQ,CAAC;gBACxDC,OAAO;oBACLzD,gBAAgBvB,YAAYuB,cAAc;oBAC1CkD,cAAc;wBACZC,KAAKuI;oBACP;gBACF;gBACA1H,SAAS;oBACPd,cAAc;gBAChB;YACF;YAEA,uDAAuD;YACvD,MAAM0I,cAAc;gBAClB;oBAAEhN,MAAM;oBAAsBiN,aAAa;gBAAI;gBAC/C;oBAAEjN,MAAM;oBAAwBiN,aAAa;gBAAgC;gBAC7E;oBAAEjN,MAAM;oBAAqBiN,aAAa;gBAAW;gBACrD;oBAAEjN,MAAM;oBAAwBiN,aAAa;gBAAyB;gBACtE;oBAAEjN,MAAM;oBAAckN,oBAAoB;gBAAK;aAChD;YAED,6CAA6C;YAC7C,MAAMC,aAAa,IAAI,CAACC,wBAAwB,CAACL,UAAUC;YAE3D,oCAAoC;YACpC,IAAIK,cAAcC;YAClB,IAAIvK,iBAAiB;gBACnBsK,cAAc,MAAM,IAAI,CAACE,uBAAuB,CAACR,UAAUC,aAAanN;YAC1E;YAEA,uCAAuC;YACvC,MAAMyH,WAAW,IAAI,CAACkG,sBAAsB,CAACL,WAAWM,KAAK,EAAEJ;YAE/D,MAAMzH,WAAW3B,KAAKC,GAAG,KAAKF;YAE9B,qBAAqB;YACrB,MAAM,IAAI,CAACqF,mBAAmB,CAC5BxJ,aACA,yBACA2D,MACA,WACA;gBACEoC;gBACA2F,YAAY4B,WAAWM,KAAK,CAAChG,MAAM;gBACnC6B,WAAW;YACb;YAGF,MAAMoE,SAAS;gBACb7K,UAAUA,YAAY;gBACtBC;gBACA0E,eAAeuF,SAAStF,MAAM;gBAC9BkG,WAAW;oBACTb,WAAWA,UAAUtH,WAAW;oBAChCoI,SAAS,IAAI3J,OAAOuB,WAAW;oBAC/BqI,cAAcjB;gBAChB;gBACAa,OAAON,WAAWM,KAAK;gBACvBK,mBAAmBX,WAAWW,iBAAiB;gBAC/CC,cAAcZ,WAAWY,YAAY;gBACrCC,mBAAmBb,WAAWa,iBAAiB;gBAC/CC,UAAUZ;gBACV/F;gBACA4G,aAAa;oBACXC,oBAAoBhB,WAAWiB,QAAQ;oBACvCC,qBAAqBlB,WAAWmB,SAAS;oBACzCC,gBAAgBpB,WAAWoB,cAAc;gBAC3C;YACF;YAEA,OAAO;gBACLhF,SAAS;oBAAC;wBACRlH,MAAM;wBACNiG,MAAMf,KAAKgB,SAAS,CAAC;4BACnBiB,SAAS;4BACTgC,MAAMkC;4BACN9E,MAAM;gCACJ9F;gCACAC;gCACA+F,WAAW,IAAI7E,OAAOuB,WAAW;gCACjCI;gCACAgB,QAAQ;4BACV;wBACF;oBACF;iBAAE;YACJ;QACF,EAAE,OAAOmC,OAAO;YACd,OAAO;gBACLQ,SAAS;oBAAC;wBACRlH,MAAM;wBACNiG,MAAMf,KAAKgB,SAAS,CAAC;4BACnBiB,SAAS;4BACTT,OAAO;4BACP0C,SAAS1C,iBAAiBE,QAAQF,MAAMG,OAAO,GAAG;wBACpD;oBACF;iBAAE;gBACFO,SAAS;YACX;QACF;IACF;IAEA;;GAEC,GACD,MAAc7F,iBAAiBJ,IAAS,EAAE3D,WAA2B,EAAgB;QACnF,MAAM,EAAEmD,OAAO,EAAEvB,iBAAiB,IAAI,EAAEqB,YAAY,IAAI,EAAE,GAAGU;QAE7D,IAAI;YACF,6BAA6B;YAC7B,MAAMgL,gBAAgB;gBACpBxL;gBACAF;gBACA2L,SAAS;oBACP9I,WAAW;oBACX+I,gBAAgB;oBAChBC,mBAAmB;oBACnB7I,YAAY;oBACZ8I,UAAU;oBACV3H,aAAa;oBACb4H,kBAAkB;gBACpB;gBACAC,aAAarN,iBAAiB;oBAC5BsN,UAAU;wBACRC,WAAW;wBACXC,YAAY;wBACZC,cAAc;wBACdC,QAAQ;oBACV;oBACAC,WAAW;wBACT,SAAS;wBACT,UAAU;wBACV,UAAU;wBACV,WAAW;oBACb;oBACAC,cAAc;wBACZC,MAAM;wBACNC,UAAU;wBACVC,SAAS;wBACTC,cAAc;oBAChB;gBACF,IAAInC;gBACJhG,UAAU;oBACR;oBACA;oBACA;oBACA;iBACD;YACH;YAEA,OAAO;gBACLiC,SAAS;oBAAC;wBACRlH,MAAM;wBACNiG,MAAMf,KAAKgB,SAAS,CAAC;4BACnBiB,SAAS;4BACTgC,MAAMgD;4BACN5F,MAAM;gCACJ5F;gCACAF;gCACArB;gCACAqH,WAAW,IAAI7E,OAAOuB,WAAW;gCACjCmH,cAAc;4BAChB;wBACF;oBACF;iBAAE;YACJ;QACF,EAAE,OAAO5D,OAAO;YACd,OAAO;gBACLQ,SAAS;oBAAC;wBACRlH,MAAM;wBACNiG,MAAMf,KAAKgB,SAAS,CAAC;4BACnBiB,SAAS;4BACTT,OAAO;4BACP0C,SAAS1C,iBAAiBE,QAAQF,MAAMG,OAAO,GAAG;wBACpD;oBACF;iBAAE;gBACFO,SAAS;YACX;QACF;IACF;IAEA;;GAEC,GACD,MAAc5F,oBAAoBL,IAAS,EAAE3D,WAA2B,EAAgB;QACtF,MAAM,EAAEoD,kBAAkB,IAAI,EAAEC,gBAAgB,IAAI,EAAE,GAAGM;QACzD,MAAMQ,YAAYC,KAAKC,GAAG;QAE1B,IAAI;YACF,qBAAqB;YACrB,MAAM,IAAI,CAACmF,mBAAmB,CAC5BxJ,aACA,0BACA2D,MACA,WACA;gBAAEoC,UAAU;gBAAG0D,WAAW;YAAM;YAGlC,gFAAgF;YAChF,MAAMoG,mBAAmB,IAAIzL,KAAKA,KAAKC,GAAG,KAAK,KAAK,KAAK;YACzD,MAAMA,MAAM,IAAID;YAEhB,wCAAwC;YACxC,MAAM0L,iBAAiB,MAAMjL,cAAM,CAACC,kBAAkB,CAACC,QAAQ,CAAC;gBAC9DC,OAAO;oBACLzD,gBAAgBvB,YAAYuB,cAAc;oBAC1CkD,cAAc;wBACZC,KAAKmL;oBACP;oBACAhK,YAAY;wBACVnB,KAAKmL,iBAAiB,oDAAoD;oBAC5E;gBACF;gBACA1K,SAAS;oBACPC,cAAc;wBACZC,QAAQ;4BAAEC,IAAI;4BAAMnF,MAAM;wBAAK;oBACjC;gBACF;gBACAoF,SAAS;oBACPd,cAAc;gBAChB;gBACAQ,MAAM,GAAG,wBAAwB;YACnC;YAEA,uEAAuE;YACvE,MAAM4J,iBAAiB,IAAIkB,IAAID,eAAerK,GAAG,CAACqE,CAAAA,IAAKA,EAAEpH,SAAS;YAClE,MAAMsN,kBAAkBnB,eAAeoB,IAAI;YAE3C,wDAAwD;YACxD,MAAMC,eAAeJ,eAAehI,MAAM,CAAC,CAACO,KAA6B3C;gBACvE,MAAM2E,cAAc3E,QAAQ8B,QAAQ,IAAI9B,QAAQ4E,WAAW,IAAI;gBAC/DjC,GAAG,CAACgC,YAAY,GAAG,AAAChC,CAAAA,GAAG,CAACgC,YAAY,IAAI,CAAA,IAAK;gBAC7C,OAAOhC;YACT,GAAG,CAAC;YAEJ,MAAM8H,cAAclP,OAAOE,OAAO,CAAC+O,cAChCzK,GAAG,CAAC,CAAC,CAAC2K,MAAM5K,SAAS,GAAM,CAAA;oBAAE4K;oBAAM5K;gBAAS,CAAA,GAC5C6K,IAAI,CAAC,CAACC,GAAGC,IAAMA,EAAE/K,QAAQ,GAAG8K,EAAE9K,QAAQ,EACtCgL,KAAK,CAAC,GAAG,KAAK,eAAe;YAEhC,yBAAyB;YACzB,MAAMhL,WAAWsK,eAAeU,KAAK,CAAC,GAAG,IAAI/K,GAAG,CAACC,CAAAA;gBAC/C,MAAM+K,oBAAoB/K,QAAQG,UAAU,CAACkF,OAAO,KAAKrF,QAAQjB,YAAY,CAACsG,OAAO;gBACrF,MAAM2F,oBAAoB7H,KAAK8H,GAAG,CAAC,GAAG,AAACtM,CAAAA,IAAI0G,OAAO,KAAKrF,QAAQjB,YAAY,CAACsG,OAAO,EAAC,IAAK;gBAEzF,OAAO;oBACLzF,IAAII,QAAQhD,SAAS;oBACrBG,WAAW6C,QAAQ7C,SAAS;oBAC5BwH,aAAa3E,QAAQ8B,QAAQ,IAAI9B,QAAQ4E,WAAW;oBACpDjD,YAAYwB,KAAKC,KAAK,CAAC4H;oBACvBE,iBAAiB/H,KAAKC,KAAK,CAAC2H,oBAAoB;oBAChD3K,WAAWJ,QAAQI,SAAS;oBAC5ByB,cAAc7B,QAAQ6B,YAAY;oBAClCnB,aAAaV,QAAQU,WAAW;oBAChCgB,aAAa1B,QAAQ0B,WAAW;oBAChC6C,aAAa,IAAI,CAAC4G,kBAAkB,CAACnL,QAAQhD,SAAS,EAAEoN;oBACxDgB,aAAapL,QAAQS,eAAe,GAAG;oBACvC+E,eAAe;wBACbnE,QAAQrB,QAAQqB,MAAM;wBACtBC,QAAQtB,QAAQsB,MAAM;wBACtBC,UAAUvB,QAAQuB,QAAQ;oBAC5B;oBACA8J,UAAU3N,kBAAkB;wBAC1BkD,SAASZ,QAAQY,OAAO;wBACxBC,MAAMb,QAAQa,IAAI;wBAClBC,QAAQd,QAAQc,MAAM;oBACxB,IAAIiH;oBACJhH,QAAQpD,gBAAgB;wBACtBb,MAAMkD,QAAQgB,UAAU;wBACxBC,SAASjB,QAAQiB,OAAO;wBACxBC,IAAIlB,QAAQmB,eAAe;oBAC7B,IAAI4G;gBACN;YACF;YAEA,+BAA+B;YAC/B,MAAMhG,WAAW,IAAI,CAACuJ,wBAAwB,CAAClB,gBAAgBtK,UAAUwK;YAEzE,8DAA8D;YAC9D,MAAMiB,sBAAsB,IAAI7M,KAAKyL,iBAAiB9E,OAAO,KAAK,KAAK,KAAK;YAC5E,MAAMmG,mBAAmB,MAAMrM,cAAM,CAACC,kBAAkB,CAACqM,KAAK,CAAC;gBAC7DnM,OAAO;oBACLzD,gBAAgBvB,YAAYuB,cAAc;oBAC1CkD,cAAc;wBACZC,KAAKuM;wBACLG,IAAIvB;oBACN;gBACF;YACF;YAEA,MAAMwB,gBAAgBH,mBAAmB,IACrC,AAAElB,CAAAA,kBAAkBkB,gBAAe,IAAKA,mBAAoB,MAC5D;YAEJ,iCAAiC;YACjC,MAAMI,cAAcjO,gBAAgB,IAAI,CAACkO,oBAAoB,CAAC/L,YAAYiI;YAC1E,MAAM+D,gBAAgBpO,kBAAkB,IAAI,CAACqO,sBAAsB,CAACjM,YAAYiI;YAEhF,MAAM1H,WAAW3B,KAAKC,GAAG,KAAKF;YAE9B,gCAAgC;YAChC,MAAM,IAAI,CAACqF,mBAAmB,CAC5BxJ,aACA,0BACA2D,MACA,WACA;gBACEoC;gBACA2F,YAAYlG,SAASoC,MAAM;gBAC3B6B,WAAW;YACb;YAGF,MAAMiI,eAAe;gBACnB1B;gBACA2B,cAAc;oBACZC,QAAQ/I,KAAKC,KAAK,CAACuI,gBAAgB,OAAO;oBAC1CQ,WAAWR,gBAAgB,IAAI,eAAeA,gBAAgB,IAAI,eAAe;oBACjFS,wBAAwBZ;gBAC1B;gBACAf;gBACA3K;gBACA8L;gBACAE;gBACA/J;gBACAsK,cAAc;oBACZC,qBAAqBlC,eAAelI,MAAM;oBAC1CmC,oBAAoB+F,eAAelI,MAAM,GAAG,IACxCiB,KAAKC,KAAK,CAACgH,eAAehI,MAAM,CAAC,CAACC,KAAK+B,IAAM/B,MAAM+B,EAAE/D,QAAQ,EAAE,KAAK+J,eAAelI,MAAM,IACzF;oBACJqK,cAAcnC,eAAelI,MAAM,GAAG,IAClCiB,KAAKC,KAAK,CAACgH,eAAehI,MAAM,CAAC,CAACC,KAAK+B,IAAM/B,MAAM+B,EAAEhE,SAAS,EAAE,KAAKgK,eAAelI,MAAM,GAAG,OAAO,MACpG;oBACJO,gBAAgB2H,eAAelI,MAAM,GAAG,IACpCiB,KAAKC,KAAK,CAACgH,eAAehI,MAAM,CAAC,CAACC,KAAK+B,IAAM/B,MAAM+B,EAAE1D,WAAW,EAAE,KAAK0J,eAAelI,MAAM,GAAG,OAAO,MACtG;oBACJM,gBAAgB4H,eAAelI,MAAM,GAAG,IACpCiB,KAAKC,KAAK,CAACgH,eAAetP,MAAM,CAACsJ,CAAAA,IAAKA,EAAE3D,eAAe,GAAG,GAAGyB,MAAM,GAAGkI,eAAelI,MAAM,GAAG,MAAM,OAAO,MAC3G;gBACN;YACF;YAEA,OAAO;gBACL8B,SAAS;oBAAC;wBACRlH,MAAM;wBACNiG,MAAMf,KAAKgB,SAAS,CAAC;4BACnBiB,SAAS;4BACTgC,MAAM+F;4BACN3I,MAAM;gCACJ3F;gCACAC;gCACA4F,WAAW,IAAI7E,OAAOuB,WAAW;gCACjCI;gCACAmM,YAAY;gCACZnL,QAAQ;4BACV;wBACF;oBACF;iBAAE;YACJ;QACF,EAAE,OAAOmC,OAAO;YACd,MAAMnD,WAAW3B,KAAKC,GAAG,KAAKF;YAE9B,4BAA4B;YAC5B,MAAM,IAAI,CAACqF,mBAAmB,CAC5BxJ,aACA,0BACA2D,MACA,WACA;gBACEoC;gBACAoD,cAAcD,iBAAiBE,QAAQF,MAAMG,OAAO,GAAG;gBACvDI,WAAW;YACb;YAGF,OAAO;gBACLC,SAAS;oBAAC;wBACRlH,MAAM;wBACNiG,MAAMf,KAAKgB,SAAS,CAAC;4BACnBiB,SAAS;4BACTT,OAAO;4BACP0C,SAAS1C,iBAAiBE,QAAQF,MAAMG,OAAO,GAAG;wBACpD;oBACF;iBAAE;gBACFO,SAAS;YACX;QACF;IACF;IAEA;;GAEC,GACD,MAAc3F,2BAA2BN,IAAS,EAAE3D,WAA2B,EAAgB;QAC7F,MAAM,EAAEsD,YAAY,EAAE,EAAE9B,QAAQ,EAAE,EAAE,GAAGmC;QACvC,MAAMQ,YAAYC,KAAKC,GAAG;QAE1B,IAAI;YACF,qBAAqB;YACrB,MAAM,IAAI,CAACmF,mBAAmB,CAC5BxJ,aACA,iCACA2D,MACA,WACA;gBAAEoC,UAAU;gBAAG0D,WAAW;YAAM;YAGlC,kDAAkD;YAClD,MAAM0I,qBAAqB,MAAMtN,cAAM,CAACC,kBAAkB,CAACC,QAAQ,CAAC;gBAClEC,OAAO;oBACLzD,gBAAgBvB,YAAYuB,cAAc;oBAC1C6E,aAAa;wBACX1B,KAAKpB;oBACP;oBACAmB,cAAc;wBACZC,KAAK,IAAIN,KAAKA,KAAKC,GAAG,KAAK,KAAK,KAAK,KAAK,MAAM,gBAAgB;oBAClE;gBACF;gBACAc,SAAS;oBACPC,cAAc;wBACZC,QAAQ;4BAAEC,IAAI;4BAAMnF,MAAM;wBAAK;oBACjC;gBACF;gBACAoF,SAAS;oBACPa,aAAa;gBACf;gBACAnB,MAAMzD;YACR;YAEA,0CAA0C;YAC1C,MAAM4Q,qBAAqB,MAAMC,QAAQC,GAAG,CAACH,mBAAmB1M,GAAG,CAAC,OAAOC;gBACzE,0EAA0E;gBAC1E,MAAMd,kBAAkB,MAAMC,cAAM,CAACC,kBAAkB,CAACC,QAAQ,CAAC;oBAC/DC,OAAO;wBACLtC,WAAWgD,QAAQhD,SAAS;wBAC5BnB,gBAAgBvB,YAAYuB,cAAc;oBAC5C;oBACAgE,SAAS;wBACPd,cAAc;oBAChB;oBACAQ,MAAM;gBACR;gBAEA,oCAAoC;gBACpC,MAAMsN,UAAU,IAAI,CAACC,qBAAqB,CAAC9M,SAASd;gBACpD,MAAM6N,iBAAiB,IAAI,CAACC,sBAAsB,CAAChN,SAAS6M;gBAE5D,OAAO;oBACLjN,IAAII,QAAQhD,SAAS;oBACrBG,WAAW6C,QAAQ7C,SAAS;oBAC5BuD,aAAaV,QAAQU,WAAW;oBAChCiE,aAAa3E,QAAQ8B,QAAQ,IAAI9B,QAAQ4E,WAAW;oBACpDsG,iBAAiBlL,QAAQK,QAAQ;oBACjCD,WAAWJ,QAAQI,SAAS;oBAC5ByB,cAAc7B,QAAQ6B,YAAY;oBAClCH,aAAa1B,QAAQ0B,WAAW;oBAChCjB,iBAAiBT,QAAQS,eAAe;oBACxCoM;oBACA/H,SAAS;wBACPP,aAAarF,gBAAgBgD,MAAM,GAAG;wBACtCD,eAAe/C,gBAAgBgD,MAAM;wBACrCC,gBAAgBjD,gBAAgBkD,MAAM,CAAC,CAACC,KAAK+B,IAAM/B,MAAM+B,EAAEhE,SAAS,EAAE;wBACtEiE,oBAAoBlB,KAAKC,KAAK,CAAClE,gBAAgBkD,MAAM,CAAC,CAACC,KAAK+B,IAAM/B,MAAM+B,EAAE/D,QAAQ,EAAE,KAAKnB,gBAAgBgD,MAAM;wBAC/GgD,UAAUlF,QAAQjB,YAAY,CAACkB,WAAW;wBAC1CoL,UAAU;4BACRzK,SAASZ,QAAQY,OAAO;4BACxBC,MAAMb,QAAQa,IAAI;4BAClBC,QAAQd,QAAQc,MAAM;wBACxB;wBACAC,QAAQ;4BACNjE,MAAMkD,QAAQgB,UAAU;4BACxBC,SAASjB,QAAQiB,OAAO;4BACxBC,IAAIlB,QAAQmB,eAAe;wBAC7B;oBACF;oBACAqE,eAAe;wBACbnE,QAAQrB,QAAQqB,MAAM;wBACtBC,QAAQtB,QAAQsB,MAAM;wBACtBC,UAAUvB,QAAQuB,QAAQ;wBAC1BC,UAAUxB,QAAQwB,QAAQ;oBAC5B;oBACAuL;gBACF;YACF;YAEA,qBAAqB;YACrB,MAAME,aAAaP,mBAAmBxK,MAAM;YAC5C,MAAM8C,qBAAqBiI,aAAa,IACpCP,mBAAmBtK,MAAM,CAAC,CAACC,KAAKC,IAAMD,MAAMC,EAAE5B,WAAW,EAAE,KAAKuM,aAChE;YAEJ,MAAMC,oBAAoBR,mBAAmB5R,MAAM,CAACwH,CAAAA,IAAKA,EAAEwC,OAAO,CAACP,WAAW,EAAErC,MAAM;YACtF,MAAMiL,oBAAoBT,mBAAmB5R,MAAM,CAACwH,CAAAA,IAAKA,EAAE7B,eAAe,GAAG,GAAGyB,MAAM;YACtF,MAAMkL,iBAAiBV,mBAAmB5R,MAAM,CAACwH,CAAAA,IAAKA,EAAEwC,OAAO,CAAC/D,MAAM,CAACjE,IAAI,KAAK,UAAUoF,MAAM;YAEhG,MAAMH,WAAW;gBACf,GAAGkL,WAAW,gBAAgB,EAAErP,UAAU,mCAAmC,CAAC;gBAC9E,CAAC,sBAAsB,EAAEuF,KAAKC,KAAK,CAAC4B,oBAAoB,CAAC,CAAC;gBAC1D,GAAG7B,KAAKC,KAAK,CAAC,AAAC8J,oBAAoBD,aAAc,KAAK,mDAAmD,CAAC;gBAC1G,GAAGE,kBAAkB,gDAAgD,CAAC;gBACtE,GAAGhK,KAAKC,KAAK,CAAC,AAACgK,iBAAiBH,aAAc,KAAK,gCAAgC,CAAC;gBACpF;aACD;YAED,MAAM5M,WAAW3B,KAAKC,GAAG,KAAKF;YAE9B,gCAAgC;YAChC,MAAM,IAAI,CAACqF,mBAAmB,CAC5BxJ,aACA,iCACA2D,MACA,WACA;gBACEoC;gBACA2F,YAAYiH;gBACZlJ,WAAW,SAAS,4CAA4C;YAClE;YAGF,OAAO;gBACLC,SAAS;oBAAC;wBACRlH,MAAM;wBACNiG,MAAMf,KAAKgB,SAAS,CAAC;4BACnBiB,SAAS;4BACTgC,MAAM;gCACJnG,UAAU4M;gCACVO;gCACAjI,oBAAoB7B,KAAKC,KAAK,CAAC4B,qBAAqB,OAAO;gCAC3DqI,YAAY;oCACVH;oCACAC;oCACAC;oCACAE,qBAAqBnK,KAAKC,KAAK,CAAC,AAAC8J,oBAAoBD,aAAc;oCACnEzK,gBAAgBW,KAAKC,KAAK,CAAC,AAAC+J,oBAAoBF,aAAc,MAAM,OAAO;oCAC3EM,kBAAkBpK,KAAKC,KAAK,CAAC,AAACgK,iBAAiBH,aAAc;gCAC/D;gCACAlL;4BACF;4BACAsB,MAAM;gCACJzF;gCACA9B;gCACAsB,WAAW;gCACXmG,WAAW,IAAI7E,OAAOuB,WAAW;gCACjCI;gCACAgB,QAAQ;4BACV;wBACF;oBACF;iBAAE;YACJ;QACF,EAAE,OAAOmC,OAAO;YACd,MAAMnD,WAAW3B,KAAKC,GAAG,KAAKF;YAE9B,4BAA4B;YAC5B,MAAM,IAAI,CAACqF,mBAAmB,CAC5BxJ,aACA,iCACA2D,MACA,WACA;gBACEoC;gBACAoD,cAAcD,iBAAiBE,QAAQF,MAAMG,OAAO,GAAG;gBACvDI,WAAW;YACb;YAGF,OAAO;gBACLC,SAAS;oBAAC;wBACRlH,MAAM;wBACNiG,MAAMf,KAAKgB,SAAS,CAAC;4BACnBiB,SAAS;4BACTT,OAAO;4BACP0C,SAAS1C,iBAAiBE,QAAQF,MAAMG,OAAO,GAAG;wBACpD;oBACF;iBAAE;gBACFO,SAAS;YACX;QACF;IACF;IAEA;;GAEC,GACD,MAAcL,uBAAuBrF,KAAqB,EAAElE,WAA2B,EAAgB;QACrG,OAAO;YACLwF,UAAU,EAAE;YACZuD,MAAM;gBACJC,OAAO;gBACPrH,QAAQuC,MAAMvC,MAAM;gBACpBH,OAAO0C,MAAM1C,KAAK;gBAClBsL,cAAc;gBACdzD,SAAS;YACX;QACF;IACF;IAEA;;GAEC,GACD,MAActH,eAAemC,KAAqB,EAAElE,WAA2B,EAAgB;QAC7F,OAAO;YACLE,KAAK;YACLG,UAAU;YACVoI,MAAMf,KAAKgB,SAAS,CAAC;gBACnBW,SAAS;gBACTyD,cAAc;YAChB;QACF;IACF;IAEA;;GAEC,GACD,MAAc9K,eAAekC,KAAqB,EAAElE,WAA2B,EAAgB;QAC7F,OAAO;YACLE,KAAK;YACLG,UAAU;YACVoI,MAAMf,KAAKgB,SAAS,CAAC;gBACnBW,SAAS;gBACTyD,cAAc;YAChB;QACF;IACF;IAEA;;GAEC,GACD,MAAc7K,eAAeiC,KAAqB,EAAElE,WAA2B,EAAgB;QAC7F,OAAO;YACLE,KAAK;YACLG,UAAU;YACVoI,MAAMf,KAAKgB,SAAS,CAAC;gBACnBW,SAAS;gBACTyD,cAAc;YAChB;QACF;IACF;IAEA;;GAEC,GACD,MAAc5K,kBAAkBgC,KAAqB,EAAElE,WAA2B,EAAgB;QAChG,OAAO;YACLE,KAAK;YACLG,UAAU;YACVoI,MAAMf,KAAKgB,SAAS,CAAC;gBACnBW,SAAS;gBACTyD,cAAc;YAChB;QACF;IACF;IAEA;;GAEC,GACD,MAAc3K,iBAAiB+B,KAAqB,EAAElE,WAA2B,EAAgB;QAC/F,OAAO;YACLE,KAAK;YACLG,UAAU;YACVoI,MAAMf,KAAKgB,SAAS,CAAC;gBACnBW,SAAS;gBACTyD,cAAc;YAChB;QACF;IACF;IAEA;;GAEC,GAED;;GAEC,GACD,AAAQ7B,uBAAuB3E,OAAe,EAAU;QACtD,MAAM4M,cAAsC;YAC1C,WAAW;YACX,SAAS;YACT,SAAS;YACT,gBAAgB;YAChB,SAAS;YACT,WAAW;YACX,YAAY;YACZ,UAAU;YACV,UAAU;YACV,UAAU;QACZ;QACA,OAAOA,WAAW,CAAC5M,QAAQ,IAAI;IACjC;IAEA;;GAEC,GACD,AAAQ8E,2BAA2B8B,QAAe,EAAU;QAC1D,IAAIA,SAAStF,MAAM,KAAK,GAAG,OAAO;QAClC,MAAMuL,kBAAkBjG,SAAS1M,MAAM,CAACsJ,CAAAA,IAAKA,EAAE7D,UAAU,GAAG,KAAK2B,MAAM;QACvE,OAAO,AAACuL,kBAAkBjG,SAAStF,MAAM,GAAI;IAC/C;IAEA;;GAEC,GACD,AAAQ0D,yBAAyB4B,QAAe,EAAU;QACxD,IAAIA,SAAStF,MAAM,KAAK,GAAG,OAAO;QAElC,IAAIsE,QAAQ;QACZ,MAAMkH,UAAU;YACdxC,iBAAiB;YACjB9K,WAAW;YACXyB,cAAc;YACdH,aAAa;YACbiM,aAAa;QACf;QAEA,iDAAiD;QACjD,MAAMpL,cAAciF,SAASpF,MAAM,CAAC,CAACC,KAAK+B,IAAM/B,MAAM+B,EAAE/D,QAAQ,EAAE,KAAKmH,SAAStF,MAAM;QACtFsE,SAASrD,KAAKyK,GAAG,CAACrL,cAAc,KAAK,KAAK,MAAMmL,QAAQxC,eAAe,EAAE,mBAAmB;QAE5F,iCAAiC;QACjC,MAAMqB,eAAe/E,SAASpF,MAAM,CAAC,CAACC,KAAK+B,IAAM/B,MAAM+B,EAAEhE,SAAS,EAAE,KAAKoH,SAAStF,MAAM;QACxFsE,SAASrD,KAAKyK,GAAG,CAACrB,eAAe,IAAI,KAAK,MAAMmB,QAAQtN,SAAS,EAAE,kBAAkB;QAErF,uBAAuB;QACvB,MAAMyN,kBAAkBrG,SAASpF,MAAM,CAAC,CAACC,KAAK+B,IAAM/B,MAAM+B,EAAEvC,YAAY,EAAE,KAAK2F,SAAStF,MAAM;QAC9FsE,SAASrD,KAAKyK,GAAG,CAACC,kBAAkB,IAAI,KAAK,MAAMH,QAAQ7L,YAAY,EAAE,yBAAyB;QAElG,uBAAuB;QACvB,MAAMiM,iBAAiBtG,SAASpF,MAAM,CAAC,CAACC,KAAK+B,IAAM/B,MAAM+B,EAAE1C,WAAW,EAAE,KAAK8F,SAAStF,MAAM;QAC5FsE,SAASsH,iBAAiB,MAAMJ,QAAQhM,WAAW;QAEnD,mBAAmB;QACnB,MAAMiM,cAAcnG,SAAS1M,MAAM,CAACsJ,CAAAA,IAAKA,EAAE3D,eAAe,GAAG,GAAGyB,MAAM;QACtEsE,SAAS,AAACmH,cAAcnG,SAAStF,MAAM,GAAI,MAAMwL,QAAQC,WAAW;QAEpE,OAAOxK,KAAKC,KAAK,CAACoD,QAAQ,OAAO;IACnC;IAEA;;GAEC,GACD,AAAQV,oBAAoB0B,QAAe,EAAS;QAClD,MAAM3B,UAAiB,EAAE;QAEzB2B,SAASuG,OAAO,GAAGC,OAAO,CAAC,CAAChO,SAASiO;YACnC,oBAAoB;YACpBpI,QAAQqI,IAAI,CAAC;gBACX3K,WAAWvD,QAAQjB,YAAY,CAACkB,WAAW;gBAC3CkO,QAAQ;gBACRhR,WAAW6C,QAAQ7C,SAAS;gBAC5BuN,MAAM1K,QAAQ4E,WAAW;gBACzBvD,QAAQrB,QAAQqB,MAAM;gBACtBC,QAAQtB,QAAQsB,MAAM;gBACtBC,UAAUvB,QAAQuB,QAAQ;YAC5B;YAEA,4CAA4C;YAC5C,MAAMnB,YAAY+C,KAAK8H,GAAG,CAAC,GAAGjL,QAAQI,SAAS;YAC/C,MAAM8K,kBAAkBlL,QAAQK,QAAQ;YACxC,MAAM+N,cAAclD,kBAAkB9K;YAEtC,IAAK,IAAIiO,IAAI,GAAGA,IAAIjO,WAAWiO,IAAK;gBAClC,MAAMC,gBAAgB,IAAI5P,KAAKsB,QAAQjB,YAAY,CAACsG,OAAO,KAAMgJ,IAAID,cAAc;gBACnFvI,QAAQqI,IAAI,CAAC;oBACX3K,WAAW+K,cAAcrO,WAAW;oBACpCkO,QAAQ;oBACRzD,MAAM2D,MAAM,IAAIrO,QAAQ4E,WAAW,GAAIyJ,MAAMjO,YAAY,IAAIJ,QAAQ8B,QAAQ,GAAG,CAAC,MAAM,EAAEuM,IAAI,GAAG;oBAChGhO,UAAU8C,KAAKC,KAAK,CAACgL;oBACrB1M,aAAa1B,QAAQ0B,WAAW;oBAChCG,cAAcsB,KAAKC,KAAK,CAACpD,QAAQ6B,YAAY,GAAGzB;gBAClD;YACF;YAEA,qCAAqC;YACrC,IAAIJ,QAAQS,eAAe,GAAG,GAAG;gBAC/BoF,QAAQqI,IAAI,CAAC;oBACX3K,WAAW,IAAI7E,KAAKsB,QAAQG,UAAU,CAACkF,OAAO,KAAK,OAAOpF,WAAW;oBACrEkO,QAAQ;oBACRzD,MAAM1K,QAAQ8B,QAAQ;oBACtByM,OAAOvO,QAAQS,eAAe;oBAC9B+N,gBAAgB,WAAW,gCAAgC;gBAC7D;YACF;YAEA,kBAAkB;YAClB3I,QAAQqI,IAAI,CAAC;gBACX3K,WAAWvD,QAAQG,UAAU,CAACF,WAAW;gBACzCkO,QAAQ;gBACRhR,WAAW6C,QAAQ7C,SAAS;gBAC5BuN,MAAM1K,QAAQ8B,QAAQ;gBACtBzB,UAAUL,QAAQK,QAAQ;gBAC1BwE,SAAS7E,QAAQO,UAAU,GAAG;YAChC;QACF;QAEA,OAAOsF;IACT;IAEA;;GAEC,GACD,AAAQE,wBAAwBrB,WAAgB,EAAE8C,QAAe,EAAY;QAC3E,MAAMzF,WAAqB,EAAE;QAC7B,MAAM+C,UAAUJ,YAAYI,OAAO;QACnC,MAAM2J,UAAU/J,YAAYP,cAAc;QAC1C,MAAMsB,aAAaf,YAAYe,UAAU;QAEzC,wBAAwB;QACxB,IAAIgJ,QAAQ/N,WAAW,GAAG,IAAI;YAC5BqB,SAASmM,IAAI,CAAC,CAAC,sBAAsB,EAAEO,QAAQ/N,WAAW,CAAC,mDAAmD,CAAC;QACjH,OAAO,IAAI+N,QAAQ/N,WAAW,GAAG,IAAI;YACnCqB,SAASmM,IAAI,CAAC,CAAC,0BAA0B,EAAEO,QAAQ/N,WAAW,CAAC,6BAA6B,CAAC;QAC/F,OAAO;YACLqB,SAASmM,IAAI,CAAC,CAAC,qBAAqB,EAAEO,QAAQ/N,WAAW,CAAC,+CAA+C,CAAC;QAC5G;QAEA,sBAAsB;QACtB,IAAI+E,WAAWE,eAAe,GAAG,IAAI;YACnC5D,SAASmM,IAAI,CAAC,CAAC,yBAAyB,EAAEzI,WAAWE,eAAe,CAAC+I,OAAO,CAAC,GAAG,iBAAiB,CAAC;QACpG,OAAO,IAAIjJ,WAAWE,eAAe,GAAG,IAAI;YAC1C5D,SAASmM,IAAI,CAAC,CAAC,6BAA6B,EAAEzI,WAAWE,eAAe,CAAC+I,OAAO,CAAC,GAAG,iBAAiB,CAAC;QACxG;QAEA,mBAAmB;QACnB,IAAID,QAAQrO,SAAS,GAAG,GAAG;YACzB2B,SAASmM,IAAI,CAAC,CAAC,eAAe,EAAEO,QAAQrO,SAAS,CAAC,oDAAoD,CAAC;QACzG;QAEA,IAAIqO,QAAQpO,QAAQ,GAAG,KAAK;YAC1B0B,SAASmM,IAAI,CAAC,CAAC,mBAAmB,EAAE/K,KAAKC,KAAK,CAACqL,QAAQpO,QAAQ,GAAG,IAAI,wCAAwC,CAAC;QACjH;QAEA,6BAA6B;QAC7B,IAAIyE,QAAQP,WAAW,EAAE;YACvBxC,SAASmM,IAAI,CAAC,CAAC,oBAAoB,EAAEpJ,QAAQ7C,aAAa,CAAC,wCAAwC,CAAC;YAEpG,IAAI6C,QAAQK,mBAAmB,GAAG,GAAG;gBACnCpD,SAASmM,IAAI,CAAC,CAAC,mCAAmC,EAAEpJ,QAAQK,mBAAmB,CAAC,SAAS,CAAC;YAC5F;QACF,OAAO;YACLpD,SAASmM,IAAI,CAAC;QAChB;QAEA,sBAAsB;QACtB,IAAIpJ,QAAQR,gBAAgB,GAAG,GAAG;YAChCvC,SAASmM,IAAI,CAAC,CAAC,qBAAqB,EAAEpJ,QAAQR,gBAAgB,CAAC,qBAAqB,CAAC;QACvF,OAAO,IAAImB,WAAWjD,cAAc,GAAG,GAAG;YACxCT,SAASmM,IAAI,CAAC;QAChB;QAEA,sBAAsB;QACtB,IAAIxJ,YAAY/D,WAAW,CAACC,OAAO,KAAK,WAAW;YACjDmB,SAASmM,IAAI,CAAC;QAChB;QAEA,kBAAkB;QAClB,IAAIxJ,YAAY3D,MAAM,CAACjE,IAAI,KAAK,UAAU;YACxCiF,SAASmM,IAAI,CAAC;QAChB;QAEA,uBAAuB;QACvB,IAAIzI,WAAWlF,UAAU,GAAG,IAAI;YAC9BwB,SAASmM,IAAI,CAAC;QAChB,OAAO,IAAIzI,WAAWlF,UAAU,GAAG,IAAI;YACrCwB,SAASmM,IAAI,CAAC;QAChB;QAEA,OAAOnM;IACT;IAEA;;GAEC,GACD,AAAQoJ,mBAAmBnO,SAAiB,EAAEwK,QAAe,EAAW;QACtE,OAAOA,SAAS1M,MAAM,CAACsJ,CAAAA,IAAKA,EAAEpH,SAAS,KAAKA,WAAWkF,MAAM,GAAG;IAClE;IAEA;;GAEC,GACD,AAAQoJ,yBAAyBlB,cAAqB,EAAEtK,QAAe,EAAEwK,eAAuB,EAAY;QAC1G,MAAMvI,WAAqB,EAAE;QAE7B,IAAIuI,oBAAoB,GAAG;YACzBvI,SAASmM,IAAI,CAAC;YACd,OAAOnM;QACT;QAEA,yBAAyB;QACzB,IAAIuI,kBAAkB,IAAI;YACxBvI,SAASmM,IAAI,CAAC,CAAC,sBAAsB,EAAE5D,gBAAgB,gBAAgB,CAAC;QAC1E,OAAO,IAAIA,kBAAkB,GAAG;YAC9BvI,SAASmM,IAAI,CAAC,CAAC,mBAAmB,EAAE5D,gBAAgB,gBAAgB,CAAC;QACvE,OAAO;YACLvI,SAASmM,IAAI,CAAC,CAAC,qBAAqB,EAAE5D,gBAAgB,gBAAgB,CAAC;QACzE;QAEA,+BAA+B;QAC/B,MAAM8C,iBAAiBtN,SAAShF,MAAM,CAACwH,CAAAA,IAAKA,EAAEvB,MAAM,EAAEjE,SAAS,UAAUoF,MAAM;QAC/E,MAAMqL,mBAAmBzN,SAASoC,MAAM,GAAG,IAAI,AAACkL,iBAAiBtN,SAASoC,MAAM,GAAI,MAAM;QAE1F,IAAIqL,mBAAmB,IAAI;YACzBxL,SAASmM,IAAI,CAAC,GAAG/K,KAAKC,KAAK,CAACmK,kBAAkB,mCAAmC,CAAC;QACpF;QAEA,sBAAsB;QACtB,MAAMoB,YAAY,IAAItE,IAAIvK,SAASC,GAAG,CAACuC,CAAAA,IAAKA,EAAE+I,QAAQ,EAAEzK,SAAS9F,MAAM,CAAC8T;QACxE,IAAID,UAAUpE,IAAI,GAAG,GAAG;YACtBxI,SAASmM,IAAI,CAAC,CAAC,cAAc,EAAES,UAAUpE,IAAI,CAAC,2BAA2B,CAAC;QAC5E;QAEA,uBAAuB;QACvB,MAAMmC,qBAAqB5M,SAAShF,MAAM,CAACwH,CAAAA,IAAKA,EAAE5B,WAAW,GAAG,IAAIwB,MAAM;QAC1E,IAAIwK,qBAAqB,GAAG;YAC1B3K,SAASmM,IAAI,CAAC,GAAGxB,mBAAmB,4DAA4D,CAAC;QACnG;QAEA,4BAA4B;QAC5B,MAAMmC,eAAe/O,SAAShF,MAAM,CAACwH,CAAAA,IAAKA,EAAE4I,eAAe,GAAG,KAAKhJ,MAAM,EAAE,cAAc;QACzF,IAAI2M,eAAe,GAAG;YACpB9M,SAASmM,IAAI,CAAC,GAAGW,aAAa,+CAA+C,CAAC;QAChF;QAEA,kBAAkB;QAClB,MAAMtC,eAAezM,SAASoC,MAAM,GAAG,IACnCpC,SAASsC,MAAM,CAAC,CAACC,KAAKC,IAAMD,MAAMC,EAAElC,SAAS,EAAE,KAAKN,SAASoC,MAAM,GACnE;QAEJ,IAAIqK,eAAe,GAAG;YACpBxK,SAASmM,IAAI,CAAC,CAAC,0BAA0B,EAAE/K,KAAKC,KAAK,CAACmJ,eAAe,MAAM,GAAG,kBAAkB,CAAC;QACnG;QAEA,qBAAqB;QACrB,MAAMW,oBAAoBpN,SAAShF,MAAM,CAACwH,CAAAA,IAAKA,EAAEiC,WAAW,EAAErC,MAAM;QACpE,IAAIgL,oBAAoB,GAAG;YACzB,MAAMI,sBAAsB,AAACJ,oBAAoBpN,SAASoC,MAAM,GAAI;YACpEH,SAASmM,IAAI,CAAC,GAAG/K,KAAKC,KAAK,CAACkK,qBAAqB,wBAAwB,CAAC;QAC5E;QAEA,sBAAsB;QACtB,MAAMH,oBAAoBrN,SAAShF,MAAM,CAACwH,CAAAA,IAAKA,EAAE8I,WAAW,EAAElJ,MAAM;QACpE,IAAIiL,oBAAoB,GAAG;YACzBpL,SAASmM,IAAI,CAAC,GAAGf,kBAAkB,iDAAiD,CAAC;QACvF;QAEA,OAAOpL;IACT;IAEA;;GAEC,GACD,AAAQ8J,qBAAqB/L,QAAe,EAAO;QACjD,IAAIA,SAASoC,MAAM,KAAK,GAAG,OAAO;QAElC,MAAM4M,cAAchP,SAASsC,MAAM,CAAC,CAACO,KAA6BL;YAChE,IAAIA,EAAEvB,MAAM,EAAEjE,MAAM;gBAClB6F,GAAG,CAACL,EAAEvB,MAAM,CAACjE,IAAI,CAAC,GAAG,AAAC6F,CAAAA,GAAG,CAACL,EAAEvB,MAAM,CAACjE,IAAI,CAAC,IAAI,CAAA,IAAK;YACnD;YACA,OAAO6F;QACT,GAAG,CAAC;QAEJ,MAAMoM,WAAWjP,SAASsC,MAAM,CAAC,CAACO,KAA6BL;YAC7D,IAAIA,EAAEvB,MAAM,EAAEE,SAAS;gBACrB0B,GAAG,CAACL,EAAEvB,MAAM,CAACE,OAAO,CAAC,GAAG,AAAC0B,CAAAA,GAAG,CAACL,EAAEvB,MAAM,CAACE,OAAO,CAAC,IAAI,CAAA,IAAK;YACzD;YACA,OAAO0B;QACT,GAAG,CAAC;QAEJ,MAAMqM,mBAAmBlP,SAASsC,MAAM,CAAC,CAACO,KAA6BL;YACrE,IAAIA,EAAEvB,MAAM,EAAEG,IAAI;gBAChByB,GAAG,CAACL,EAAEvB,MAAM,CAACG,EAAE,CAAC,GAAG,AAACyB,CAAAA,GAAG,CAACL,EAAEvB,MAAM,CAACG,EAAE,CAAC,IAAI,CAAA,IAAK;YAC/C;YACA,OAAOyB;QACT,GAAG,CAAC;QAEJ,OAAO;YACLmM;YACAC;YACAC;YACAzB,kBAAkBuB,YAAYG,MAAM,GAAG,AAACH,YAAYG,MAAM,GAAGnP,SAASoC,MAAM,GAAI,MAAM;QACxF;IACF;IAEA;;GAEC,GACD,AAAQ6J,uBAAuBjM,QAAe,EAAO;QACnD,IAAIA,SAASoC,MAAM,KAAK,GAAG,OAAO;QAElC,MAAMyM,YAAY7O,SAASsC,MAAM,CAAC,CAACO,KAA6BL;YAC9D,IAAIA,EAAE+I,QAAQ,EAAEzK,SAAS;gBACvB+B,GAAG,CAACL,EAAE+I,QAAQ,CAACzK,OAAO,CAAC,GAAG,AAAC+B,CAAAA,GAAG,CAACL,EAAE+I,QAAQ,CAACzK,OAAO,CAAC,IAAI,CAAA,IAAK;YAC7D;YACA,OAAO+B;QACT,GAAG,CAAC;QAEJ,MAAMuM,SAASpP,SAASsC,MAAM,CAAC,CAACO,KAA6BL;YAC3D,IAAIA,EAAE+I,QAAQ,EAAExK,MAAM;gBACpB8B,GAAG,CAACL,EAAE+I,QAAQ,CAACxK,IAAI,CAAC,GAAG,AAAC8B,CAAAA,GAAG,CAACL,EAAE+I,QAAQ,CAACxK,IAAI,CAAC,IAAI,CAAA,IAAK;YACvD;YACA,OAAO8B;QACT,GAAG,CAAC;QAEJ,MAAMwM,UAAUrP,SAASsC,MAAM,CAAC,CAACO,KAA6BL;YAC5D,IAAIA,EAAE+I,QAAQ,EAAEvK,QAAQ;gBACtB6B,GAAG,CAACL,EAAE+I,QAAQ,CAACvK,MAAM,CAAC,GAAG,AAAC6B,CAAAA,GAAG,CAACL,EAAE+I,QAAQ,CAACvK,MAAM,CAAC,IAAI,CAAA,IAAK;YAC3D;YACA,OAAO6B;QACT,GAAG,CAAC;QAEJ,OAAO;YACLgM;YACAO;YACAC;YACAC,YAAY7T,OAAOE,OAAO,CAACkT,WAAWhE,IAAI,CAAC,CAACC,GAAGC,IAAMA,CAAC,CAAC,EAAE,GAAGD,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;YACzEyE,gBAAgB9T,OAAO+T,IAAI,CAACX,WAAWzM,MAAM;QAC/C;IACF;IAEA;;GAEC,GACD,AAAQ4K,sBAAsB3I,cAAmB,EAAEjF,eAAsB,EAAO;QAC9E,MAAM2N,UAAU;YACd0C,mBAAmB,EAAE;YACrBC,mBAAmB,EAAE;YACrBC,eAAe,EAAE;YACjBC,aAAa,EAAE;QACjB;QAEA,qBAAqB;QACrB,IAAIvL,eAAe9D,QAAQ,GAAG,KAAK;YACjCwM,QAAQ0C,iBAAiB,CAACrB,IAAI,CAAC;gBAC7BpR,MAAM;gBACNyR,OAAOpK,eAAe9D,QAAQ;gBAC9BsP,QAAQ;gBACRjV,aAAa,CAAC,6BAA6B,EAAEyI,KAAKC,KAAK,CAACe,eAAe9D,QAAQ,GAAG,IAAI,QAAQ,CAAC;YACjG;QACF;QAEA,IAAI8D,eAAe/D,SAAS,GAAG,GAAG;YAChCyM,QAAQ0C,iBAAiB,CAACrB,IAAI,CAAC;gBAC7BpR,MAAM;gBACNyR,OAAOpK,eAAe/D,SAAS;gBAC/BuP,QAAQ;gBACRjV,aAAa,CAAC,qBAAqB,EAAEyJ,eAAe/D,SAAS,CAAC,WAAW,CAAC;YAC5E;QACF;QAEA,IAAI+D,eAAetC,YAAY,GAAG,IAAI;YACpCgL,QAAQ0C,iBAAiB,CAACrB,IAAI,CAAC;gBAC7BpR,MAAM;gBACNyR,OAAOpK,eAAetC,YAAY;gBAClC8N,QAAQ;gBACRjV,aAAa,CAAC,iBAAiB,EAAEyJ,eAAetC,YAAY,CAAC,aAAa,CAAC;YAC7E;QACF;QAEA,IAAIsC,eAAezC,WAAW,GAAG,IAAI;YACnCmL,QAAQ0C,iBAAiB,CAACrB,IAAI,CAAC;gBAC7BpR,MAAM;gBACNyR,OAAOpK,eAAezC,WAAW;gBACjCiO,QAAQ;gBACRjV,aAAa,CAAC,6BAA6B,EAAEyJ,eAAezC,WAAW,CAAC,cAAc,CAAC;YACzF;QACF;QAEA,qBAAqB;QACrB,MAAM6C,cAAcrF,gBAAgBgD,MAAM,GAAG;QAC7C,IAAIqC,aAAa;YACfsI,QAAQ2C,iBAAiB,CAACtB,IAAI,CAAC;gBAC7BpR,MAAM;gBACNyR,OAAOrP,gBAAgBgD,MAAM;gBAC7ByN,QAAQ;gBACRjV,aAAa,CAAC,uBAAuB,EAAEwE,gBAAgBgD,MAAM,CAAC,eAAe,CAAC;YAChF;QACF;QAEA,yDAAyD;QACzD,MAAMmC,qBAAqBnF,gBAAgBkD,MAAM,CAAC,CAACC,KAAK+B,IAAM/B,MAAM+B,EAAE/D,QAAQ,EAAE,KAAKnB,gBAAgBgD,MAAM;QAC3G,IAAImC,qBAAqB,KAAK;YAC5BwI,QAAQ2C,iBAAiB,CAACtB,IAAI,CAAC;gBAC7BpR,MAAM;gBACNyR,OAAOlK;gBACPsL,QAAQ;gBACRjV,aAAa,CAAC,2BAA2B,EAAEyI,KAAKC,KAAK,CAACiB,qBAAqB,IAAI,wBAAwB,CAAC;YAC1G;QACF;QAEA,wCAAwC;QACxC,MAAMO,cAAcT,eAAeS,WAAW,EAAEgL,iBAAiB;QACjE,MAAM9N,WAAWqC,eAAerC,QAAQ,EAAE8N,iBAAiB;QAE3D,IAAIhL,YAAY/J,QAAQ,CAAC,cAAciH,SAASjH,QAAQ,CAAC,YAAY;YACnEgS,QAAQ4C,aAAa,CAACvB,IAAI,CAAC;gBACzBpR,MAAM;gBACNyR,OAAO;gBACPoB,QAAQ;gBACRjV,aAAa;YACf;QACF;QAEA,IAAIkK,YAAY/J,QAAQ,CAAC,cAAciH,SAASjH,QAAQ,CAAC,cAAc+J,YAAY/J,QAAQ,CAAC,SAAS;YACnGgS,QAAQ4C,aAAa,CAACvB,IAAI,CAAC;gBACzBpR,MAAM;gBACNyR,OAAO;gBACPoB,QAAQ;gBACRjV,aAAa;YACf;QACF;QAEA,IAAIyJ,eAAe1D,eAAe,GAAG,GAAG;YACtCoM,QAAQ4C,aAAa,CAACvB,IAAI,CAAC;gBACzBpR,MAAM;gBACNyR,OAAOpK,eAAe1D,eAAe;gBACrCkP,QAAQ;gBACRjV,aAAa,CAAC,gCAAgC,EAAEyJ,eAAe1D,eAAe,EAAE;YAClF;QACF;QAEA,eAAe;QACf,IAAI0D,eAAe5D,UAAU,GAAG,KAAK;YACnCsM,QAAQ6C,WAAW,CAACxB,IAAI,CAAC;gBACvBpR,MAAM;gBACNyR,OAAOpK,eAAe5D,UAAU;gBAChCoP,QAAQ,CAAC;gBACTjV,aAAa;YACf;QACF;QAEA,IAAIyJ,eAAe9D,QAAQ,GAAG,IAAI;YAChCwM,QAAQ6C,WAAW,CAACxB,IAAI,CAAC;gBACvBpR,MAAM;gBACNyR,OAAOpK,eAAe9D,QAAQ;gBAC9BsP,QAAQ,CAAC;gBACTjV,aAAa;YACf;QACF;QAEA,0BAA0B;QAC1B,IAAIyJ,eAAe9C,MAAM,KAAK,YAAYkD,aAAa;YACrDsI,QAAQ2C,iBAAiB,CAACtB,IAAI,CAAC;gBAC7BpR,MAAM;gBACNyR,OAAO;gBACPoB,QAAQ;gBACRjV,aAAa;YACf;QACF;QAEA,IAAIyJ,eAAe9C,MAAM,KAAK,WAAW;YACvCwL,QAAQ2C,iBAAiB,CAACtB,IAAI,CAAC;gBAC7BpR,MAAM;gBACNyR,OAAO;gBACPoB,QAAQ;gBACRjV,aAAa;YACf;QACF;QAEA,OAAOmS;IACT;IAEA;;GAEC,GACD,AAAQG,uBAAuB7I,cAAmB,EAAE0I,OAAY,EAAO;QACrE,MAAMgD,kBAAkB,EAAE;QAC1B,IAAIC,UAAU;QACd,IAAIC,WAAW;QAEf,8CAA8C;QAC9C,IAAIrP,cAAcyD,eAAezD,WAAW,IAAI;QAEhD,6BAA6B;QAC7B,IAAImM,QAAQ0C,iBAAiB,CAACrN,MAAM,GAAG,GAAG;YACxC2N,gBAAgB3B,IAAI,CAAC;gBACnBC,QAAQ;gBACR6B,SAAS;gBACTrM,SAAS;gBACTsM,QAAQ;YACV;YACAH,UAAU;YACVC,WAAW;QACb;QAEA,yBAAyB;QACzB,MAAMG,gBAAgBrD,QAAQ4C,aAAa,CAACU,IAAI,CAAC/L,CAAAA,IAAKA,EAAEuL,MAAM,GAAG;QACjE,IAAIO,eAAe;YACjBL,gBAAgB3B,IAAI,CAAC;gBACnBC,QAAQ;gBACR6B,SAAS;gBACTrM,SAAS;gBACTsM,QAAQ;gBACRG,QAAQ;YACV;YACAN,UAAU;YACVC,WAAW;QACb;QAEA,wBAAwB;QACxB,MAAMM,iBAAiBxD,QAAQ4C,aAAa,CAACU,IAAI,CAAC/L,CAAAA,IAAKA,EAAEtH,IAAI,KAAK;QAClE,IAAIuT,gBAAgB;YAClBR,gBAAgB3B,IAAI,CAAC;gBACnBC,QAAQ;gBACR6B,SAAS;gBACTrM,SAAS;gBACTsM,QAAQ;gBACRG,QAAQ;YACV;YAEA,IAAIjM,eAAe9D,QAAQ,GAAG,KAAK;gBACjCwP,gBAAgB3B,IAAI,CAAC;oBACnBC,QAAQ;oBACR6B,SAAS;oBACTrM,SAAS;oBACTsM,QAAQ;oBACRG,QAAQ;gBACV;YACF;QACF;QAEA,oCAAoC;QACpC,MAAM7L,cAAcsI,QAAQ2C,iBAAiB,CAACW,IAAI,CAAC/L,CAAAA,IAAKA,EAAEtH,IAAI,KAAK;QACnE,IAAIyH,eAAe,CAAC2L,eAAe;YACjCL,gBAAgB3B,IAAI,CAAC;gBACnBC,QAAQ;gBACR6B,SAAS;gBACTrM,SAAS;gBACTsM,QAAQ;gBACRG,QAAQ;YACV;QACF;QAEA,kCAAkC;QAClC,IAAIjM,eAAenD,UAAU,KAAK,UAAU;YAC1C6O,gBAAgB3B,IAAI,CAAC;gBACnBC,QAAQ;gBACR6B,SAAS;gBACTrM,SAAS;gBACTsM,QAAQ;gBACRG,QAAQ;YACV;QACF;QAEA,6BAA6B;QAC7B,IAAIjM,eAAevD,OAAO,KAAK,aAAauD,eAAevD,OAAO,KAAK,gBAAgB;YACrFiP,gBAAgB3B,IAAI,CAAC;gBACnBC,QAAQ;gBACR6B,SAAS;gBACTrM,SAAS;gBACTsM,QAAQ;gBACRG,QAAQ;YACV;QACF;QAEA,kBAAkB;QAClB,MAAME,iBAAiBzD,QAAQ6C,WAAW,CAACxN,MAAM,GAAG;QACpD,IAAIoO,kBAAkB,CAACJ,eAAe;YACpCL,gBAAgB3B,IAAI,CAAC;gBACnBC,QAAQ;gBACR6B,SAAS;gBACTrM,SAAS;gBACTsM,QAAQ;gBACRG,QAAQ;YACV;QACF;QAEA,0CAA0C;QAC1C,IAAI,CAAC7L,eAAe7D,cAAc,IAAI;YACpCmP,gBAAgB3B,IAAI,CAAC;gBACnBC,QAAQ;gBACR6B,SAAS;gBACTrM,SAAS;gBACTsM,QAAQ;gBACRG,QAAQ;YACV;QACF;QAEA,OAAO;YACLP;YACAC;YACAC;YACA7I,gBAAgB2I,gBAAgB3N,MAAM,GAAG,IAAI2N,eAAe,CAAC,EAAE,GAAG;YAClEU,YAAYpN,KAAKyK,GAAG,CAAClN,cAAc,MAAOmM,QAAQ0C,iBAAiB,CAACrN,MAAM,GAAG,KAAM;YACnFsO,WAAW;gBACT9P;gBACA+P,iBAAiB5D,QAAQ0C,iBAAiB,CAACrN,MAAM,GAAG,IAAI,SAAS2K,QAAQ0C,iBAAiB,CAACrN,MAAM,GAAG,IAAI,WAAW;gBACnH6B,WAAW8I,QAAQ6C,WAAW,CAACxN,MAAM,GAAG,IAAI,SAAS2K,QAAQ6C,WAAW,CAACxN,MAAM,GAAG,IAAI,WAAW;gBACjGwO,aAAanM,cAAc,cAAc;YAC3C;QACF;IACF;IAEA;;GAEC,GACD,AAAQ+C,eAAe/J,SAAiB,EAAU;QAChD,MAAMoT,WAAmC;YACvC,MAAM;YACN,MAAM;YACN,OAAO;YACP,OAAO;YACP,OAAO;YACP,OAAO;YACP,QAAQ;YACR,QAAQ;QACV;QACA,OAAOA,QAAQ,CAACpT,UAAU,IAAI;IAChC;IAEA;;GAEC,GACD,AAAQsK,yBAAyBL,QAAe,EAAEC,WAAkB,EAAO;QACzE,MAAMmJ,eAAe,EAAE;QACvB,IAAIC,uBAAuBrJ,SAAStF,MAAM;QAE1C,2BAA2B;QAC3B,IAAK,IAAImM,IAAI,GAAGA,IAAI5G,YAAYvF,MAAM,EAAEmM,IAAK;YAC3C,MAAMyC,OAAOrJ,WAAW,CAAC4G,EAAE;YAC3B,IAAI0C,eAAe;YACnB,IAAIC,cAAc;YAElB,IAAIF,KAAKnJ,kBAAkB,EAAE;gBAC3B,0DAA0D;gBAC1D,MAAMsJ,oBAAoBzJ,SAAS1M,MAAM,CAACkF,CAAAA,UAAWA,QAAQS,eAAe,GAAG;gBAC/EsQ,eAAeE,kBAAkB/O,MAAM;gBACvC8O,cAAcC,kBAAkB7O,MAAM,CAAC,CAACC,KAAKrC,UAAYqC,MAAMrC,QAAQS,eAAe,EAAE;YAC1F,OAAO;gBACL,+DAA+D;gBAC/DsQ,eAAevJ,SAAS1M,MAAM,CAACkF,CAAAA;oBAC7B,MAAM4E,cAAc5E,QAAQ4E,WAAW,EAAEgL,iBAAiB;oBAC1D,MAAM9N,WAAW9B,QAAQ8B,QAAQ,EAAE8N,iBAAiB;oBACpD,MAAMsB,UAAU,IAAIC,OAAOL,KAAKpJ,WAAW,EAAE;oBAC7C,OAAOwJ,QAAQE,IAAI,CAACxM,gBAAgBsM,QAAQE,IAAI,CAACtP;gBACnD,GAAGI,MAAM;YACX;YAEA,MAAMM,iBAAiBqO,uBAAuB,IAAI,AAACE,eAAeF,uBAAwB,MAAM;YAChG,MAAMQ,cAAcR,uBAAuB,IAAI,AAAEA,CAAAA,uBAAuBE,YAAW,IAAKF,uBAAwB,MAAM;YAEtHD,aAAa1C,IAAI,CAAC;gBAChB4C,MAAMzC,IAAI;gBACV5T,MAAMqW,KAAKrW,IAAI;gBACfqF,UAAUiR;gBACVvO,gBAAgBW,KAAKC,KAAK,CAACZ,iBAAiB,OAAO;gBACnD6O,aAAalO,KAAKC,KAAK,CAACiO,cAAc,OAAO;gBAC7CC,SAASN;gBACTE,SAASJ,KAAKpJ,WAAW,IAAI;YAC/B;YAEAmJ,uBAAuBE;QACzB;QAEA,4BAA4B;QAC5B,MAAM9O,gBAAgBuF,SAAStF,MAAM;QACrC,MAAMoC,mBAAmBsM,YAAY,CAACA,aAAa1O,MAAM,GAAG,EAAE,EAAEpC,YAAY;QAC5E,MAAM0I,eAAeoI,YAAY,CAACA,aAAa1O,MAAM,GAAG,EAAE,EAAEoP,WAAW;QACvE,MAAM/I,oBAAoBtG,gBAAgB,IAAI,AAACqC,mBAAmBrC,gBAAiB,MAAM;QACzF,MAAMwG,oBAAoBnE,mBAAmB,IAAIkE,eAAelE,mBAAmB;QAEnF,uCAAuC;QACvC,MAAMiN,YAAYX,aAAa9F,KAAK,CAAC,GAAG/K,GAAG,CAAC+Q,CAAAA,OAAS,CAAA;gBAAErW,MAAMqW,KAAKrW,IAAI;gBAAE+W,MAAMV,KAAKtO,cAAc;YAAC,CAAA;QAClG,MAAMqG,WAAW0I,UAAUnP,MAAM,CAAC,CAAC6I,KAAK6F,OAASA,KAAKU,IAAI,GAAGvG,IAAIuG,IAAI,GAAGV,OAAO7F,KAAKsG,SAAS,CAAC,EAAE,IAAI;YAAE9W,MAAM;YAAO+W,MAAM;QAAE;QAC3H,MAAMzI,YAAYwI,UAAUnP,MAAM,CAAC,CAACwL,KAAKkD,OAASA,KAAKU,IAAI,GAAG5D,IAAI4D,IAAI,GAAGV,OAAOlD,KAAK2D,SAAS,CAAC,EAAE,IAAI;YAAE9W,MAAM;YAAO+W,MAAM;QAAE;QAE5H,wBAAwB;QACxB,MAAMC,WAAWb,aAAa7Q,GAAG,CAAC+Q,CAAAA,OAAS,CAAA;gBAAErW,MAAMqW,KAAKrW,IAAI;gBAAEiX,SAASZ,KAAKO,WAAW;YAAC,CAAA;QACxF,MAAMrI,iBAAiByI,SAASrP,MAAM,CAAC,CAAC6I,KAAK6F,OAASA,KAAKY,OAAO,GAAGzG,IAAIyG,OAAO,GAAGZ,OAAO7F,KAAKwG,QAAQ,CAAC,EAAE,IAAI;YAAEhX,MAAM;YAAOiX,SAAS;QAAE;QAExI,OAAO;YACLxJ,OAAO0I;YACPrI,mBAAmBpF,KAAKC,KAAK,CAACmF,oBAAoB,OAAO;YACzDC,cAAcrF,KAAKC,KAAK,CAACoF,eAAe,OAAO;YAC/CC,mBAAmBtF,KAAKC,KAAK,CAACqF,oBAAoB,OAAO;YACzDI,UAAUA,SAASpO,IAAI;YACvBsO,WAAWA,UAAUtO,IAAI;YACzBuO,gBAAgBA,eAAevO,IAAI;QACrC;IACF;IAEA;;GAEC,GACD,MAAcuN,wBAAwBR,QAAe,EAAEC,WAAkB,EAAEnN,WAA2B,EAAkB;QACtH,IAAI;YACF,oCAAoC;YACpC,MAAMoO,WAAW,MAAMvJ,cAAM,CAACwS,OAAO,CAACtS,QAAQ,CAAC;gBAC7CC,OAAO;oBACLsS,WAAW;wBACT/V,gBAAgBvB,YAAYuB,cAAc;oBAC5C;gBACF;gBACA4D,SAAS;oBACPoS,SAAS;wBACPpS,SAAS;4BACPqS,SAAS;wBACX;oBACF;gBACF;YACF;YAEA,MAAMC,kBAAkB,EAAE;YAE1B,oCAAoC;YACpC,MAAMC,qBAAqBxK,SAAS1M,MAAM,CAACkF,CAAAA;gBACzC,MAAMd,kBAAkBsI,SAAS1M,MAAM,CAACsJ,CAAAA,IAAKA,EAAEpH,SAAS,KAAKgD,QAAQhD,SAAS;gBAC9E,OAAOkC,gBAAgBgD,MAAM,KAAK;YACpC;YAEA,MAAM+P,2BAA2BzK,SAAS1M,MAAM,CAACkF,CAAAA;gBAC/C,MAAMd,kBAAkBsI,SAAS1M,MAAM,CAACsJ,CAAAA,IAAKA,EAAEpH,SAAS,KAAKgD,QAAQhD,SAAS;gBAC9E,OAAOkC,gBAAgBgD,MAAM,GAAG;YAClC;YAEA,uBAAuB;YACvB,IAAI8P,mBAAmB9P,MAAM,GAAG,GAAG;gBACjC,MAAMgQ,mBAAmB,IAAI,CAACrK,wBAAwB,CAACmK,oBAAoBvK;gBAC3EsK,gBAAgB7D,IAAI,CAAC;oBACnBzT,MAAM;oBACNwH,eAAe+P,mBAAmB9P,MAAM;oBACxCqG,mBAAmB2J,iBAAiB3J,iBAAiB;oBACrDC,cAAc0J,iBAAiB1J,YAAY;oBAC3CC,mBAAmByJ,iBAAiBzJ,iBAAiB;oBACrD0J,gBAAgBD,iBAAiBlJ,cAAc;oBAC/Cd,OAAOgK,iBAAiBhK,KAAK;gBAC/B;YACF;YAEA,6BAA6B;YAC7B,IAAI+J,yBAAyB/P,MAAM,GAAG,GAAG;gBACvC,MAAMkQ,yBAAyB,IAAI,CAACvK,wBAAwB,CAACoK,0BAA0BxK;gBACvFsK,gBAAgB7D,IAAI,CAAC;oBACnBzT,MAAM;oBACNwH,eAAegQ,yBAAyB/P,MAAM;oBAC9CqG,mBAAmB6J,uBAAuB7J,iBAAiB;oBAC3DC,cAAc4J,uBAAuB5J,YAAY;oBACjDC,mBAAmB2J,uBAAuB3J,iBAAiB;oBAC3D0J,gBAAgBC,uBAAuBpJ,cAAc;oBACrDd,OAAOkK,uBAAuBlK,KAAK;gBACrC;YACF;YAEA,yBAAyB;YACzB,MAAMmK,aAAa7K,SAAS1M,MAAM,CAACsJ,CAAAA,IAAKA,EAAEpD,UAAU,KAAK;YACzD,MAAMsR,kBAAkB9K,SAAS1M,MAAM,CAACsJ,CAAAA,IAAKA,EAAEpD,UAAU,KAAK;YAE9D,IAAIqR,WAAWnQ,MAAM,GAAG,GAAG;gBACzB,MAAMqQ,eAAe,IAAI,CAAC1K,wBAAwB,CAACwK,YAAY5K;gBAC/DsK,gBAAgB7D,IAAI,CAAC;oBACnBzT,MAAM;oBACNwH,eAAeoQ,WAAWnQ,MAAM;oBAChCqG,mBAAmBgK,aAAahK,iBAAiB;oBACjDC,cAAc+J,aAAa/J,YAAY;oBACvCC,mBAAmB8J,aAAa9J,iBAAiB;oBACjD0J,gBAAgBI,aAAavJ,cAAc;oBAC3Cd,OAAOqK,aAAarK,KAAK;gBAC3B;YACF;YAEA,IAAIoK,gBAAgBpQ,MAAM,GAAG,GAAG;gBAC9B,MAAMsQ,gBAAgB,IAAI,CAAC3K,wBAAwB,CAACyK,iBAAiB7K;gBACrEsK,gBAAgB7D,IAAI,CAAC;oBACnBzT,MAAM;oBACNwH,eAAeqQ,gBAAgBpQ,MAAM;oBACrCqG,mBAAmBiK,cAAcjK,iBAAiB;oBAClDC,cAAcgK,cAAchK,YAAY;oBACxCC,mBAAmB+J,cAAc/J,iBAAiB;oBAClD0J,gBAAgBK,cAAcxJ,cAAc;oBAC5Cd,OAAOsK,cAActK,KAAK;gBAC5B;YACF;YAEA,4BAA4B;YAC5B,MAAMuK,kBAAkBjL,SAAS1M,MAAM,CAACsJ,CAAAA,IAAKA,EAAE/C,MAAM,KAAK;YAC1D,MAAMqR,iBAAiBlL,SAAS1M,MAAM,CAACsJ,CAAAA,IAAKA,EAAE/C,MAAM,KAAK;YACzD,MAAMsR,iBAAiBnL,SAAS1M,MAAM,CAACsJ,CAAAA,IAAKA,EAAE/C,MAAM,KAAK;YAEzD,IAAIoR,gBAAgBvQ,MAAM,GAAG,GAAG;gBAC9B,MAAM0Q,gBAAgB,IAAI,CAAC/K,wBAAwB,CAAC4K,iBAAiBhL;gBACrEsK,gBAAgB7D,IAAI,CAAC;oBACnBzT,MAAM;oBACNwH,eAAewQ,gBAAgBvQ,MAAM;oBACrCqG,mBAAmBqK,cAAcrK,iBAAiB;oBAClDC,cAAcoK,cAAcpK,YAAY;oBACxCC,mBAAmBmK,cAAcnK,iBAAiB;oBAClD0J,gBAAgBS,cAAc5J,cAAc;oBAC5Cd,OAAO0K,cAAc1K,KAAK;gBAC5B;YACF;YAEA,OAAO6J;QAET,EAAE,OAAOvO,OAAO;YACdqP,QAAQrP,KAAK,CAAC,uCAAuCA;YACrD,OAAO,EAAE;QACX;IACF;IAEA;;GAEC,GACD,AAAQyE,uBAAuBC,KAAY,EAAEJ,WAAmB,EAAY;QAC1E,MAAM/F,WAAqB,EAAE;QAE7B,0BAA0B;QAC1B,IAAImG,MAAMhG,MAAM,GAAG,GAAG;YACpB,MAAM4Q,YAAY5K,KAAK,CAAC,EAAE;YAC1B,MAAM6K,WAAW7K,KAAK,CAACA,MAAMhG,MAAM,GAAG,EAAE;YAExCH,SAASmM,IAAI,CAAC,CAAC,mBAAmB,EAAE4E,UAAUhT,QAAQ,CAACkT,cAAc,GAAG,uBAAuB,EAAED,SAASjT,QAAQ,CAACkT,cAAc,GAAG,EAAE,EAAED,SAASvQ,cAAc,CAAC,UAAU,CAAC;YAE3K,wBAAwB;YACxB,MAAMwG,iBAAiBd,MAAM9F,MAAM,CAAC,CAAC6I,KAAK6F,OAASA,KAAKO,WAAW,GAAGpG,IAAIoG,WAAW,GAAGP,OAAO7F,KAAK/C,KAAK,CAAC,EAAE;YAC5G,IAAIc,eAAeqI,WAAW,GAAG,IAAI;gBACnCtP,SAASmM,IAAI,CAAC,CAAC,wBAAwB,EAAElF,eAAevO,IAAI,CAAC,EAAE,EAAEuO,eAAeqI,WAAW,CAAC,8CAA8C,CAAC;YAC7I,OAAO,IAAIrI,eAAeqI,WAAW,GAAG,IAAI;gBAC1CtP,SAASmM,IAAI,CAAC,CAAC,2BAA2B,EAAElF,eAAevO,IAAI,CAAC,EAAE,EAAEuO,eAAeqI,WAAW,CAAC,uCAAuC,CAAC;YACzI;YAEA,mBAAmB;YACnB,MAAM4B,cAAc/K,MAAMgL,IAAI,CAACpC,CAAAA,OAAQA,KAAKQ,OAAO,GAAG;YACtD,IAAI2B,aAAa;gBACflR,SAASmM,IAAI,CAAC,CAAC,aAAa,EAAE+E,YAAY3B,OAAO,CAAC0B,cAAc,GAAG,iBAAiB,EAAEC,YAAYnT,QAAQ,CAAC,YAAY,CAAC;YAC1H;YAEA,2BAA2B;YAC3B,MAAMqT,cAAcJ,SAASvQ,cAAc;YAC3C,IAAI2Q,cAAc,GAAG;gBACnBpR,SAASmM,IAAI,CAAC,CAAC,gCAAgC,EAAEiF,YAAY,0BAA0B,CAAC;YAC1F,OAAO,IAAIA,cAAc,GAAG;gBAC1BpR,SAASmM,IAAI,CAAC,CAAC,0BAA0B,EAAEiF,YAAY,wBAAwB,CAAC;YAClF,OAAO;gBACLpR,SAASmM,IAAI,CAAC,CAAC,sBAAsB,EAAEiF,YAAY,+CAA+C,CAAC;YACrG;QACF;QAEA,4BAA4B;QAC5B,IAAIrL,eAAeA,YAAY5F,MAAM,GAAG,GAAG;YACzC,MAAMkR,cAActL,YAAYoL,IAAI,CAAC9O,CAAAA,IAAKA,EAAE3J,IAAI,KAAK;YACrD,MAAMyS,oBAAoBpF,YAAYoL,IAAI,CAAC9O,CAAAA,IAAKA,EAAE3J,IAAI,KAAK;YAE3D,IAAI2Y,eAAelG,mBAAmB;gBACpC,MAAMmG,iBAAiBnG,kBAAkB3E,iBAAiB,GAAG6K,YAAY7K,iBAAiB;gBAC1F,IAAI8K,iBAAiB,GAAG;oBACtBtR,SAASmM,IAAI,CAAC,CAAC,8BAA8B,EAAEmF,eAAe3E,OAAO,CAAC,GAAG,UAAU,EAAExB,kBAAkB3E,iBAAiB,CAAC,KAAK,EAAE6K,YAAY7K,iBAAiB,CAAC,EAAE,CAAC;gBACnK;YACF;YAEA,MAAM+K,gBAAgBxL,YAAYoL,IAAI,CAAC9O,CAAAA,IAAKA,EAAE3J,IAAI,KAAK;YACvD,MAAM8Y,iBAAiBzL,YAAYoL,IAAI,CAAC9O,CAAAA,IAAKA,EAAE3J,IAAI,KAAK;YAExD,IAAI6Y,iBAAiBC,gBAAgB;gBACnC,IAAID,cAAc/K,iBAAiB,GAAGgL,eAAehL,iBAAiB,GAAG,KAAK;oBAC5ExG,SAASmM,IAAI,CAAC,CAAC,sBAAsB,EAAEoF,cAAc/K,iBAAiB,CAAC,qCAAqC,EAAEgL,eAAehL,iBAAiB,CAAC,+BAA+B,CAAC;gBACjL;YACF;YAEA,0BAA0B;YAC1B,MAAMiL,iBAAiB1L,YAAYoL,IAAI,CAAC9O,CAAAA,IAAKA,EAAE3J,IAAI,KAAK;YACxD,IAAI+Y,kBAAkBA,eAAejL,iBAAiB,GAAG,GAAG;gBAC1DxG,SAASmM,IAAI,CAAC,CAAC,4CAA4C,EAAEsF,eAAejL,iBAAiB,CAAC,4BAA4B,CAAC;YAC7H;QACF;QAEA,mCAAmC;QACnCxG,SAASmM,IAAI,CAAC,CAAC,6GAA6G,CAAC;QAE7H,OAAOnM;IACT;AACF"}