{"version":3,"sources":["/Users/supreme/Desktop/marketsage/src/components/dashboard/SessionRecordingDashboard.tsx"],"sourcesContent":["/**\n * Session Recording Dashboard\n * ==========================\n * Management interface for viewing and analyzing session recordings\n * with filtering, search, and detailed replay capabilities.\n */\n\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Input } from '@/components/ui/input';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { \n  Play, \n  Search, \n  Filter, \n  Calendar, \n  User, \n  Monitor, \n  Activity, \n  AlertTriangle, \n  Eye, \n  Clock, \n  MapPin, \n  Smartphone, \n  Laptop, \n  Tablet,\n  Download,\n  Trash2,\n  RefreshCw\n} from 'lucide-react';\nimport { motion, AnimatePresence } from 'framer-motion';\n// import SessionReplayPlayer from '@/components/analytics/SessionReplayPlayer';\n\ninterface SessionRecording {\n  sessionId: string;\n  visitorId: string;\n  startTime: number;\n  endTime?: number;\n  page: string;\n  viewport: { width: number; height: number };\n  metadata: {\n    totalEvents: number;\n    duration: number;\n    interactions: number;\n    errors: number;\n    formInteractions: number;\n  };\n  visitor?: {\n    fingerprint: string;\n    country: string;\n    city: string;\n    deviceType: string;\n    browser: string;\n    operatingSystem: string;\n  };\n  engagementScore: number;\n  userIntent: string;\n  conversionProbability: number;\n  frustrationSignals: string[];\n}\n\ninterface SessionRecordingDashboardProps {\n  className?: string;\n}\n\nexport default function SessionRecordingDashboard({ \n  className = '' \n}: SessionRecordingDashboardProps) {\n  const [recordings, setRecordings] = useState<SessionRecording[]>([]);\n  const [selectedRecording, setSelectedRecording] = useState<SessionRecording | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterIntent, setFilterIntent] = useState('all');\n  const [filterDevice, setFilterDevice] = useState('all');\n  const [sortBy, setSortBy] = useState('startTime');\n  const [isPlayerOpen, setIsPlayerOpen] = useState(false);\n  const [fullRecordingData, setFullRecordingData] = useState(null);\n  \n  // Load session recordings\n  useEffect(() => {\n    loadRecordings();\n  }, []);\n  \n  const loadRecordings = async () => {\n    try {\n      setIsLoading(true);\n      const response = await fetch('/api/leadpulse/analytics/session-recording');\n      const data = await response.json();\n      \n      if (data.recordings) {\n        setRecordings(data.recordings);\n      }\n    } catch (error) {\n      console.error('Error loading session recordings:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  // Load full recording data for replay\n  const loadFullRecording = async (sessionId: string) => {\n    try {\n      const response = await fetch(`/api/leadpulse/analytics/session-recording?sessionId=${sessionId}`);\n      const data = await response.json();\n      setFullRecordingData(data);\n      setIsPlayerOpen(true);\n    } catch (error) {\n      console.error('Error loading full recording:', error);\n    }\n  };\n  \n  // Filter recordings\n  const filteredRecordings = recordings.filter(recording => {\n    const matchesSearch = searchTerm === '' || \n      recording.page.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      recording.visitorId.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      recording.visitor?.city?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      recording.visitor?.country?.toLowerCase().includes(searchTerm.toLowerCase());\n    \n    const matchesIntent = filterIntent === 'all' || recording.userIntent === filterIntent;\n    const matchesDevice = filterDevice === 'all' || recording.visitor?.deviceType === filterDevice;\n    \n    return matchesSearch && matchesIntent && matchesDevice;\n  });\n  \n  // Sort recordings\n  const sortedRecordings = [...filteredRecordings].sort((a, b) => {\n    switch (sortBy) {\n      case 'startTime':\n        return b.startTime - a.startTime;\n      case 'duration':\n        return b.metadata.duration - a.metadata.duration;\n      case 'engagement':\n        return b.engagementScore - a.engagementScore;\n      case 'interactions':\n        return b.metadata.interactions - a.metadata.interactions;\n      default:\n        return 0;\n    }\n  });\n  \n  // Format time helper\n  const formatTime = (ms: number) => {\n    const seconds = Math.floor(ms / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n  \n  // Get device icon\n  const getDeviceIcon = (deviceType: string) => {\n    switch (deviceType) {\n      case 'mobile': return Smartphone;\n      case 'tablet': return Tablet;\n      default: return Laptop;\n    }\n  };\n  \n  // Get intent color\n  const getIntentColor = (intent: string) => {\n    switch (intent) {\n      case 'convert': return 'bg-green-600/20 text-green-400 border-green-500/30';\n      case 'engage': return 'bg-blue-600/20 text-blue-400 border-blue-500/30';\n      case 'explore': return 'bg-purple-600/20 text-purple-400 border-purple-500/30';\n      default: return 'bg-gray-600/20 text-gray-400 border-gray-500/30';\n    }\n  };\n  \n  if (isPlayerOpen && fullRecordingData) {\n    return (\n      <div className=\"fixed inset-0 bg-black/90 z-50 flex items-center justify-center p-4\">\n        <div className=\"w-full max-w-7xl\">\n          <Card className=\"bg-gray-900 border-gray-700\">\n            <CardHeader>\n              <div className=\"flex items-center justify-between\">\n                <CardTitle className=\"text-white\">Session Replay</CardTitle>\n                <Button \n                  variant=\"ghost\" \n                  size=\"sm\" \n                  onClick={() => {\n                    setIsPlayerOpen(false);\n                    setFullRecordingData(null);\n                  }}\n                  className=\"text-white hover:bg-gray-800\"\n                >\n                  Close\n                </Button>\n              </div>\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-center py-8 text-gray-400\">\n                <Play className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n                <p>Session replay player would be displayed here</p>\n                <p className=\"text-sm mt-2\">Recording ID: {JSON.stringify(fullRecordingData).substring(0, 50)}...</p>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n  \n  return (\n    <Card className={`w-full bg-gray-900/50 border-blue-500/20 ${className}`}>\n      <CardHeader className=\"pb-4\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"p-2 bg-gradient-to-br from-purple-600/20 to-blue-600/20 rounded-lg border border-purple-500/20\">\n              <Monitor className=\"h-5 w-5 text-purple-400\" />\n            </div>\n            <div>\n              <CardTitle className=\"text-lg font-bold text-white\">Session Recordings</CardTitle>\n              <p className=\"text-sm text-gray-400\">\n                {recordings.length} recorded sessions â€¢ {filteredRecordings.length} shown\n              </p>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center gap-2\">\n            <Button \n              variant=\"outline\" \n              size=\"sm\" \n              onClick={loadRecordings}\n              disabled={isLoading}\n              className=\"text-xs\"\n            >\n              <RefreshCw className={`h-3 w-3 mr-1 ${isLoading ? 'animate-spin' : ''}`} />\n              Refresh\n            </Button>\n          </div>\n        </div>\n      </CardHeader>\n      \n      <CardContent className=\"space-y-4\">\n        {/* Filters */}\n        <div className=\"flex flex-wrap items-center gap-4\">\n          <div className=\"flex items-center gap-2\">\n            <Search className=\"h-4 w-4 text-gray-400\" />\n            <Input\n              placeholder=\"Search sessions...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-64 bg-gray-800/50 border-gray-700\"\n            />\n          </div>\n          \n          <Select value={filterIntent} onValueChange={setFilterIntent}>\n            <SelectTrigger className=\"w-32 bg-gray-800/50 border-gray-700\">\n              <SelectValue />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"all\">All Intents</SelectItem>\n              <SelectItem value=\"browse\">Browse</SelectItem>\n              <SelectItem value=\"engage\">Engage</SelectItem>\n              <SelectItem value=\"convert\">Convert</SelectItem>\n              <SelectItem value=\"explore\">Explore</SelectItem>\n            </SelectContent>\n          </Select>\n          \n          <Select value={filterDevice} onValueChange={setFilterDevice}>\n            <SelectTrigger className=\"w-32 bg-gray-800/50 border-gray-700\">\n              <SelectValue />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"all\">All Devices</SelectItem>\n              <SelectItem value=\"desktop\">Desktop</SelectItem>\n              <SelectItem value=\"mobile\">Mobile</SelectItem>\n              <SelectItem value=\"tablet\">Tablet</SelectItem>\n            </SelectContent>\n          </Select>\n          \n          <Select value={sortBy} onValueChange={setSortBy}>\n            <SelectTrigger className=\"w-36 bg-gray-800/50 border-gray-700\">\n              <SelectValue />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"startTime\">Newest First</SelectItem>\n              <SelectItem value=\"duration\">Longest First</SelectItem>\n              <SelectItem value=\"engagement\">Most Engaged</SelectItem>\n              <SelectItem value=\"interactions\">Most Active</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n        \n        {/* Summary Stats */}\n        <div className=\"grid grid-cols-4 gap-4\">\n          <Card className=\"bg-gray-800/30 border-gray-700/30\">\n            <CardContent className=\"p-3\">\n              <div className=\"flex items-center gap-2\">\n                <Monitor className=\"h-4 w-4 text-blue-400\" />\n                <div>\n                  <div className=\"text-lg font-bold text-blue-400\">\n                    {filteredRecordings.length}\n                  </div>\n                  <div className=\"text-xs text-gray-400\">Total Sessions</div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n          \n          <Card className=\"bg-gray-800/30 border-gray-700/30\">\n            <CardContent className=\"p-3\">\n              <div className=\"flex items-center gap-2\">\n                <Clock className=\"h-4 w-4 text-green-400\" />\n                <div>\n                  <div className=\"text-lg font-bold text-green-400\">\n                    {formatTime(\n                      filteredRecordings.reduce((sum, r) => sum + r.metadata.duration, 0) / filteredRecordings.length || 0\n                    )}\n                  </div>\n                  <div className=\"text-xs text-gray-400\">Avg Duration</div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n          \n          <Card className=\"bg-gray-800/30 border-gray-700/30\">\n            <CardContent className=\"p-3\">\n              <div className=\"flex items-center gap-2\">\n                <Activity className=\"h-4 w-4 text-orange-400\" />\n                <div>\n                  <div className=\"text-lg font-bold text-orange-400\">\n                    {Math.round(\n                      filteredRecordings.reduce((sum, r) => sum + r.engagementScore, 0) / filteredRecordings.length || 0\n                    )}\n                  </div>\n                  <div className=\"text-xs text-gray-400\">Avg Engagement</div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n          \n          <Card className=\"bg-gray-800/30 border-gray-700/30\">\n            <CardContent className=\"p-3\">\n              <div className=\"flex items-center gap-2\">\n                <AlertTriangle className=\"h-4 w-4 text-red-400\" />\n                <div>\n                  <div className=\"text-lg font-bold text-red-400\">\n                    {filteredRecordings.filter(r => r.frustrationSignals.length > 0).length}\n                  </div>\n                  <div className=\"text-xs text-gray-400\">With Friction</div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n        \n        {/* Recordings List */}\n        <div className=\"space-y-3\">\n          {isLoading ? (\n            <div className=\"text-center py-8 text-gray-400\">\n              <RefreshCw className=\"h-6 w-6 animate-spin mx-auto mb-2\" />\n              Loading session recordings...\n            </div>\n          ) : sortedRecordings.length === 0 ? (\n            <div className=\"text-center py-8 text-gray-400\">\n              <Monitor className=\"h-8 w-8 mx-auto mb-2 opacity-50\" />\n              No session recordings found\n            </div>\n          ) : (\n            <AnimatePresence>\n              {sortedRecordings.map((recording, index) => {\n                const DeviceIcon = getDeviceIcon(recording.visitor?.deviceType || 'desktop');\n                \n                return (\n                  <motion.div\n                    key={recording.sessionId}\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    exit={{ opacity: 0, y: -20 }}\n                    transition={{ delay: index * 0.05 }}\n                  >\n                    <Card className=\"bg-gray-800/30 border-gray-700/30 hover:bg-gray-800/50 transition-colors\">\n                      <CardContent className=\"p-4\">\n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center gap-4 flex-1\">\n                            {/* Device & Basic Info */}\n                            <div className=\"flex items-center gap-3\">\n                              <div className=\"p-2 bg-gray-700/50 rounded-lg\">\n                                <DeviceIcon className=\"h-4 w-4 text-gray-400\" />\n                              </div>\n                              <div>\n                                <div className=\"text-sm font-medium text-white truncate max-w-64\">\n                                  {recording.page}\n                                </div>\n                                <div className=\"flex items-center gap-2 text-xs text-gray-400\">\n                                  <span>{recording.visitorId.slice(-8)}</span>\n                                  <span>â€¢</span>\n                                  <span>{formatTime(recording.metadata.duration)}</span>\n                                  <span>â€¢</span>\n                                  <span>{new Date(recording.startTime).toLocaleDateString()}</span>\n                                </div>\n                              </div>\n                            </div>\n                            \n                            {/* Location */}\n                            {recording.visitor && (\n                              <div className=\"flex items-center gap-1 text-xs text-gray-400\">\n                                <MapPin className=\"h-3 w-3\" />\n                                {recording.visitor.city}, {recording.visitor.country}\n                              </div>\n                            )}\n                            \n                            {/* Stats */}\n                            <div className=\"flex items-center gap-4\">\n                              <div className=\"text-center\">\n                                <div className=\"text-sm font-bold text-blue-400\">\n                                  {recording.metadata.interactions}\n                                </div>\n                                <div className=\"text-xs text-gray-500\">Interactions</div>\n                              </div>\n                              \n                              <div className=\"text-center\">\n                                <div className=\"text-sm font-bold text-green-400\">\n                                  {recording.engagementScore}\n                                </div>\n                                <div className=\"text-xs text-gray-500\">Engagement</div>\n                              </div>\n                              \n                              <div className=\"text-center\">\n                                <div className=\"text-sm font-bold text-purple-400\">\n                                  {recording.conversionProbability}%\n                                </div>\n                                <div className=\"text-xs text-gray-500\">Conversion</div>\n                              </div>\n                            </div>\n                            \n                            {/* Intent & Signals */}\n                            <div className=\"flex items-center gap-2\">\n                              <Badge variant=\"outline\" className={getIntentColor(recording.userIntent)}>\n                                {recording.userIntent}\n                              </Badge>\n                              \n                              {recording.frustrationSignals.length > 0 && (\n                                <Badge variant=\"outline\" className=\"bg-red-600/20 text-red-400 border-red-500/30\">\n                                  <AlertTriangle className=\"h-3 w-3 mr-1\" />\n                                  {recording.frustrationSignals.length}\n                                </Badge>\n                              )}\n                              \n                              {recording.metadata.errors > 0 && (\n                                <Badge variant=\"outline\" className=\"bg-yellow-600/20 text-yellow-400 border-yellow-500/30\">\n                                  {recording.metadata.errors} errors\n                                </Badge>\n                              )}\n                            </div>\n                          </div>\n                          \n                          {/* Actions */}\n                          <div className=\"flex items-center gap-2\">\n                            <Button\n                              variant=\"ghost\"\n                              size=\"sm\"\n                              onClick={() => loadFullRecording(recording.sessionId)}\n                              className=\"text-blue-400 hover:bg-blue-600/20\"\n                            >\n                              <Play className=\"h-4 w-4 mr-1\" />\n                              Replay\n                            </Button>\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </motion.div>\n                );\n              })}\n            </AnimatePresence>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}"],"names":["SessionRecordingDashboard","className","recordings","setRecordings","useState","selectedRecording","setSelectedRecording","isLoading","setIsLoading","searchTerm","setSearchTerm","filterIntent","setFilterIntent","filterDevice","setFilterDevice","sortBy","setSortBy","isPlayerOpen","setIsPlayerOpen","fullRecordingData","setFullRecordingData","useEffect","loadRecordings","response","fetch","data","json","error","console","loadFullRecording","sessionId","filteredRecordings","filter","recording","matchesSearch","page","toLowerCase","includes","visitorId","visitor","city","country","matchesIntent","userIntent","matchesDevice","deviceType","sortedRecordings","sort","a","b","startTime","metadata","duration","engagementScore","interactions","formatTime","ms","seconds","Math","floor","minutes","remainingSeconds","toString","padStart","getDeviceIcon","Smartphone","Tablet","Laptop","getIntentColor","intent","div","Card","CardHeader","CardTitle","Button","variant","size","onClick","CardContent","Play","p","JSON","stringify","substring","Monitor","length","disabled","RefreshCw","Search","Input","placeholder","value","onChange","e","target","Select","onValueChange","SelectTrigger","SelectValue","SelectContent","SelectItem","Clock","reduce","sum","r","Activity","round","AlertTriangle","frustrationSignals","AnimatePresence","map","index","DeviceIcon","motion","initial","opacity","y","animate","exit","transition","delay","span","slice","Date","toLocaleDateString","MapPin","conversionProbability","Badge","errors"],"mappings":"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"}