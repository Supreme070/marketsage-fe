{"version":3,"sources":["/Users/supreme/Desktop/marketsage/src/components/leadpulse/CoreAnalyticsDashboard.tsx"],"sourcesContent":["'use client';\n\nimport React, { useMemo, useCallback } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { \n  BarChart3, \n  Monitor, \n  Smartphone, \n  Globe, \n  Clock, \n  TrendingUp, \n  TrendingDown, \n  Users, \n  MousePointer,\n  ExternalLink,\n  Wifi,\n  WifiOff\n} from 'lucide-react';\n\ninterface CoreAnalyticsDashboardProps {\n  isLoading?: boolean;\n}\n\ninterface AnalyticsData {\n  trafficSources: Array<{\n    source: string;\n    visitors: number;\n    percentage: number;\n    trend: 'up' | 'down' | 'stable';\n  }>;\n  devices: Array<{\n    type: string;\n    count: number;\n    percentage: number;\n  }>;\n  topPages: Array<{\n    path: string;\n    views: number;\n    uniqueVisitors: number;\n    avgTime: number;\n  }>;\n  hourlyTraffic: Array<{\n    hour: number;\n    visitors: number;\n  }>;\n  realTimeStats: {\n    onlineNow: number;\n    pageViews: number;\n    newVsReturning: {\n      new: number;\n      returning: number;\n    };\n  };\n}\n\nconst CoreAnalyticsDashboard = React.memo<CoreAnalyticsDashboardProps>(({ isLoading }) => {\n  // Demo analytics data - in real implementation, this would come from MCP\n  const analyticsData: AnalyticsData = useMemo(() => ({\n    trafficSources: [\n      { source: 'Direct', visitors: 456, percentage: 38.2, trend: 'up' },\n      { source: 'Organic Search', visitors: 342, percentage: 28.6, trend: 'up' },\n      { source: 'Social Media', visitors: 198, percentage: 16.5, trend: 'stable' },\n      { source: 'Referral', visitors: 134, percentage: 11.2, trend: 'down' },\n      { source: 'Email', visitors: 66, percentage: 5.5, trend: 'up' }\n    ],\n    devices: [\n      { type: 'Mobile', count: 678, percentage: 68.2 },\n      { type: 'Desktop', count: 234, percentage: 23.5 },\n      { type: 'Tablet', count: 83, percentage: 8.3 }\n    ],\n    topPages: [\n      { path: '/', views: 1248, uniqueVisitors: 892, avgTime: 145 },\n      { path: '/features', views: 567, uniqueVisitors: 445, avgTime: 298 },\n      { path: '/pricing', views: 334, uniqueVisitors: 289, avgTime: 189 },\n      { path: '/contact', views: 178, uniqueVisitors: 156, avgTime: 234 },\n      { path: '/blog', views: 134, uniqueVisitors: 98, avgTime: 456 }\n    ],\n    hourlyTraffic: [\n      { hour: 0, visitors: 12 }, { hour: 1, visitors: 8 }, { hour: 2, visitors: 5 },\n      { hour: 3, visitors: 4 }, { hour: 4, visitors: 6 }, { hour: 5, visitors: 9 },\n      { hour: 6, visitors: 15 }, { hour: 7, visitors: 23 }, { hour: 8, visitors: 45 },\n      { hour: 9, visitors: 67 }, { hour: 10, visitors: 78 }, { hour: 11, visitors: 89 },\n      { hour: 12, visitors: 95 }, { hour: 13, visitors: 88 }, { hour: 14, visitors: 92 },\n      { hour: 15, visitors: 87 }, { hour: 16, visitors: 76 }, { hour: 17, visitors: 69 },\n      { hour: 18, visitors: 58 }, { hour: 19, visitors: 45 }, { hour: 20, visitors: 34 },\n      { hour: 21, visitors: 28 }, { hour: 22, visitors: 21 }, { hour: 23, visitors: 16 }\n    ],\n    realTimeStats: {\n      onlineNow: 23,\n      pageViews: 1547,\n      newVsReturning: {\n        new: 67,\n        returning: 33\n      }\n    }\n  }), []);\n\n  const maxHourlyTraffic = useMemo(() => \n    Math.max(...analyticsData.hourlyTraffic.map(h => h.visitors)),\n    [analyticsData.hourlyTraffic]\n  );\n\n  if (isLoading) {\n    return (\n      <Card className=\"h-full\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <BarChart3 className=\"h-5 w-5\" />\n            Core Analytics\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex items-center justify-center h-64\">\n            <div className=\"animate-pulse text-gray-500\">Loading analytics data...</div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"h-full\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <BarChart3 className=\"h-5 w-5\" />\n          Core Analytics\n        </CardTitle>\n        <div className=\"text-sm text-gray-600 mt-1\">\n          Comprehensive visitor and traffic analytics\n        </div>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        {/* Real-time Stats */}\n        <div className=\"grid grid-cols-3 gap-4\">\n          <div className=\"text-center p-3 bg-green-50 rounded-lg\">\n            <Wifi className=\"h-6 w-6 mx-auto text-green-500 mb-2\" />\n            <div className=\"text-lg font-semibold\">{analyticsData.realTimeStats.onlineNow}</div>\n            <div className=\"text-xs text-gray-500\">Online Now</div>\n          </div>\n          \n          <div className=\"text-center p-3 bg-blue-50 rounded-lg\">\n            <ExternalLink className=\"h-6 w-6 mx-auto text-blue-500 mb-2\" />\n            <div className=\"text-lg font-semibold\">{analyticsData.realTimeStats.pageViews.toLocaleString()}</div>\n            <div className=\"text-xs text-gray-500\">Page Views Today</div>\n          </div>\n          \n          <div className=\"text-center p-3 bg-purple-50 rounded-lg\">\n            <Users className=\"h-6 w-6 mx-auto text-purple-500 mb-2\" />\n            <div className=\"text-lg font-semibold\">{analyticsData.realTimeStats.newVsReturning.new}%</div>\n            <div className=\"text-xs text-gray-500\">New Visitors</div>\n          </div>\n        </div>\n\n        {/* Traffic Sources */}\n        <div className=\"space-y-3\">\n          <h4 className=\"text-sm font-medium\">Traffic Sources</h4>\n          <div className=\"space-y-2\">\n            {analyticsData.trafficSources.map((source) => (\n              <div\n                key={source.source}\n                className=\"flex items-center justify-between p-2 rounded hover:bg-gray-50 transition-colors\"\n              >\n                <div className=\"flex items-center gap-3\">\n                  <Globe className=\"h-4 w-4 text-gray-400\" />\n                  <span className=\"text-sm font-medium\">{source.source}</span>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"text-right\">\n                    <div className=\"text-sm font-medium\">{source.visitors}</div>\n                    <div className=\"text-xs text-gray-500\">{source.percentage}%</div>\n                  </div>\n                  <div className=\"w-2\">\n                    {source.trend === 'up' && <TrendingUp className=\"h-3 w-3 text-green-500\" />}\n                    {source.trend === 'down' && <TrendingDown className=\"h-3 w-3 text-red-500\" />}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Device Breakdown */}\n        <div className=\"space-y-3\">\n          <h4 className=\"text-sm font-medium\">Device Distribution</h4>\n          <div className=\"space-y-3\">\n            {analyticsData.devices.map((device) => (\n              <div key={device.type} className=\"space-y-1\">\n                <div className=\"flex justify-between text-sm\">\n                  <div className=\"flex items-center gap-2\">\n                    {device.type === 'Mobile' && <Smartphone className=\"h-4 w-4\" />}\n                    {device.type === 'Desktop' && <Monitor className=\"h-4 w-4\" />}\n                    {device.type === 'Tablet' && <Monitor className=\"h-4 w-4\" />}\n                    <span>{device.type}</span>\n                  </div>\n                  <span className=\"font-medium\">{device.percentage}%</span>\n                </div>\n                <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                  <div \n                    className={`h-2 rounded-full transition-all ${\n                      device.type === 'Mobile' ? 'bg-blue-500' :\n                      device.type === 'Desktop' ? 'bg-green-500' : 'bg-purple-500'\n                    }`}\n                    style={{ width: `${device.percentage}%` }}\n                  />\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Top Pages */}\n        <div className=\"space-y-3\">\n          <h4 className=\"text-sm font-medium\">Top Pages</h4>\n          <div className=\"space-y-2\">\n            {analyticsData.topPages.slice(0, 4).map((page) => (\n              <div\n                key={page.path}\n                className=\"flex items-center justify-between p-2 rounded hover:bg-gray-50 transition-colors\"\n              >\n                <div className=\"flex items-center gap-3 min-w-0\">\n                  <ExternalLink className=\"h-4 w-4 text-gray-400 flex-shrink-0\" />\n                  <div className=\"min-w-0\">\n                    <div className=\"font-medium text-sm truncate\">{page.path}</div>\n                    <div className=\"text-xs text-gray-500\">\n                      {Math.floor(page.avgTime / 60)}m {page.avgTime % 60}s avg\n                    </div>\n                  </div>\n                </div>\n                <div className=\"text-right flex-shrink-0\">\n                  <div className=\"text-sm font-medium\">{page.views}</div>\n                  <div className=\"text-xs text-gray-500\">{page.uniqueVisitors} unique</div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Hourly Traffic Pattern */}\n        <div className=\"space-y-3\">\n          <h4 className=\"text-sm font-medium\">24-Hour Traffic Pattern</h4>\n          <div className=\"flex items-end justify-between h-16 gap-1\">\n            {analyticsData.hourlyTraffic.map((hour) => (\n              <div\n                key={hour.hour}\n                className=\"flex-1 bg-blue-500 rounded-t opacity-70 hover:opacity-100 transition-opacity relative group\"\n                style={{ \n                  height: `${(hour.visitors / maxHourlyTraffic) * 100}%`,\n                  minHeight: '2px'\n                }}\n              >\n                <div className=\"absolute -top-8 left-1/2 transform -translate-x-1/2 bg-gray-900 text-white text-xs px-2 py-1 rounded opacity-0 group-hover:opacity-100 transition-opacity whitespace-nowrap\">\n                  {hour.hour}:00 - {hour.visitors} visitors\n                </div>\n              </div>\n            ))}\n          </div>\n          <div className=\"flex justify-between text-xs text-gray-500\">\n            <span>00:00</span>\n            <span>06:00</span>\n            <span>12:00</span>\n            <span>18:00</span>\n            <span>23:59</span>\n          </div>\n        </div>\n\n        {/* Performance Insights */}\n        <div className=\"pt-4 border-t\">\n          <h4 className=\"text-sm font-medium mb-2\">Quick Insights</h4>\n          <div className=\"space-y-2 text-sm text-gray-600\">\n            <div className=\"flex items-center gap-2\">\n              <TrendingUp className=\"h-4 w-4 text-green-500\" />\n              <span>Peak traffic hours: 12:00-15:00</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Smartphone className=\"h-4 w-4 text-blue-500\" />\n              <span>Mobile dominates with {analyticsData.devices[0].percentage}% of traffic</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Globe className=\"h-4 w-4 text-purple-500\" />\n              <span>Direct traffic shows strong brand recognition</span>\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n});\n\nCoreAnalyticsDashboard.displayName = 'CoreAnalyticsDashboard';\n\nexport { CoreAnalyticsDashboard };\nexport default CoreAnalyticsDashboard;"],"names":["CoreAnalyticsDashboard","React","memo","isLoading","analyticsData","useMemo","trafficSources","source","visitors","percentage","trend","devices","type","count","topPages","path","views","uniqueVisitors","avgTime","hourlyTraffic","hour","realTimeStats","onlineNow","pageViews","newVsReturning","new","returning","maxHourlyTraffic","Math","max","map","h","Card","className","CardHeader","CardTitle","BarChart3","CardContent","div","Wifi","ExternalLink","toLocaleString","Users","h4","Globe","span","TrendingUp","TrendingDown","device","Smartphone","Monitor","style","width","slice","page","floor","height","minHeight","displayName"],"mappings":"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"}