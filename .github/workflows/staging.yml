name: Staging Deployment

on:
  push:
    branches: [ staging ]
  pull_request:
    branches: [ staging ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: marketsage_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
      with:
        lfs: true
    
    - name: Checkout LFS objects
      run: git lfs checkout

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Setup environment
      run: |
        cp .env.example .env.local || echo "No .env.example found"
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/marketsage_test" >> .env.local
        echo "NEXTAUTH_SECRET=test-secret" >> .env.local
        echo "NEXTAUTH_URL=http://localhost:3000" >> .env.local
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/marketsage_test

    - name: Generate Prisma client
      run: npm run db:generate
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/marketsage_test

    - name: Run database migrations
      run: npm run db:deploy
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/marketsage_test

    - name: Run linting
      run: npm run lint

    - name: Run tests
      run: npm run test
      env:
        NODE_ENV: test

    - name: Build application
      run: npm run build
      env:
        NODE_ENV: production

  deploy-staging:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
      with:
        lfs: true
    
    - name: Checkout LFS objects
      run: git lfs checkout

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build
      env:
        NODE_ENV: production

    # Add your staging deployment steps here
    # Example: Deploy to staging server, update staging database, etc.
    - name: Deploy to Staging
      run: |
        echo "ðŸš€ Deploying to staging environment..."
        echo "âœ… Staging deployment would happen here"
        # Add actual deployment commands when ready