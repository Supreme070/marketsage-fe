# MarketSage domain configuration
# Handles subdomain routing and SSL termination

# Main application server (app.marketsage.com)
server {
    listen 80;
    listen [::]:80;
    server_name app.marketsage.com marketsage.com www.marketsage.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

# Admin portal server (admin.marketsage.com)
server {
    listen 80;
    listen [::]:80;
    server_name admin.marketsage.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

# Backend API server (api.marketsage.com)
server {
    listen 80;
    listen [::]:80;
    server_name api.marketsage.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS Main Application (app.marketsage.com)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name app.marketsage.com marketsage.com www.marketsage.com;

    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/marketsage.crt;
    ssl_certificate_key /etc/nginx/ssl/marketsage.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Main application routes
    location / {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 60s;
    }

    # API routes - proxy to frontend which then proxies to backend
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API-specific timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 60s;
    }

    # Static files caching
    location /_next/static/ {
        proxy_pass http://frontend;
        proxy_set_header Host $host;
        
        # Cache static files for 1 year
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Health check endpoint
    location /health {
        proxy_pass http://frontend;
        proxy_set_header Host $host;
        access_log off;
    }
}

# HTTPS Admin Portal (admin.marketsage.com)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name admin.marketsage.com;

    # SSL Configuration (same as main app)
    ssl_certificate /etc/nginx/ssl/marketsage.crt;
    ssl_certificate_key /etc/nginx/ssl/marketsage.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;

    # Enhanced security headers for admin portal
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'" always;

    # Admin portal routes
    location / {
        # Additional rate limiting for admin portal
        limit_req zone=login burst=10 nodelay;
        
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Enhanced timeouts for admin operations
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 120s;
    }

    # Admin API routes
    location /api/ {
        limit_req zone=api burst=10 nodelay;
        
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Admin API timeouts
        proxy_connect_timeout 15s;
        proxy_send_timeout 60s;
        proxy_read_timeout 120s;
    }

    # Static files for admin portal
    location /_next/static/ {
        proxy_pass http://frontend;
        proxy_set_header Host $host;
        
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}

# HTTPS Backend API (api.marketsage.com)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.marketsage.com;

    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/marketsage.crt;
    ssl_certificate_key /etc/nginx/ssl/marketsage.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;

    # API security headers
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Direct backend API access
    location / {
        limit_req zone=api burst=50 nodelay;
        
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 60s;
    }

    # Health check
    location /api/v2/health {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        access_log off;
    }

    # Metrics endpoint (restricted access)
    location /metrics {
        allow 172.20.0.0/16;  # Docker network
        allow 10.0.0.0/8;     # Private networks
        deny all;
        
        proxy_pass http://backend;
        proxy_set_header Host $host;
    }
}